!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AADC_PD	pr1000_drvcommon.h	/^	uint8_t AADC_PD; \/\/page0 0xEB b'[7:5]$/;"	m	struct:__anon32
AC_GAIN_ADJ	pr1000.h	/^	int AC_GAIN_ADJ;$/;"	m	struct:__anon20
AC_GAIN_HOLD	pr1000.h	/^	int AC_GAIN_HOLD;$/;"	m	struct:__anon20
ASSERT_VALID_CH	pr1000.h	108;"	d
COMMA	pr1000.h	36;"	d
C_LOCK_CNT	pr1000.h	/^	int C_LOCK_CNT;$/;"	m	struct:__anon20
DEBUG_ALTRA_FPGA	pr1000_table.c	30;"	d	file:
DEBUG_PTZ_PR1000	pr1000_func.c	81;"	d	file:
DEBUG_VERIFY_I2C_WRTABLE_PR1000	pr1000_func.c	80;"	d	file:
DEFAULT_INIT_FORMAT	pr1000_user_config.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_FORMAT	pr1000_user_config_sample_nonLinux.c	/^const uint8_t DEFAULT_INIT_FORMAT = pr1000_format_CVI;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25c;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1280x720p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1280x720p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEFAULT_INIT_RESOLUTION	pr1000_user_config_sample_nonLinux.c	/^const uint8_t DEFAULT_INIT_RESOLUTION = pr1000_outresol_1920x1080p25;$/;"	v
DEF_PR1000_MAX_CHN	pr1000_table.h	62;"	d
DEF_PR1000_SIZE_CEQ_6PAGE_TABLE_REG	pr1000_ceqfunc.c	76;"	d	file:
DEF_PR1000_SIZE_CEQ_INFO_TABLE_REG	pr1000_table.h	223;"	d
DEF_PR1000_SIZE_CEQ_INFO_TABLE_REG	pr1000_table.h	344;"	d
DEF_PR1000_SIZE_VDEC_0PAGE_TABLE_REG	pr1000_table.h	227;"	d
DEF_PR1000_SIZE_VDEC_0PAGE_TABLE_REG	pr1000_table.h	348;"	d
DEF_PR1000_SIZE_VDEC_1PAGE_TABLE_REG	pr1000_table.h	230;"	d
DEF_PR1000_SIZE_VDEC_1PAGE_TABLE_REG	pr1000_table.h	351;"	d
DEV_NAME	pr1000.c	51;"	d	file:
DISABLE	pr1000.h	25;"	d
DISABLE	pr1000.h	26;"	d
DONT_SUPPORT_AUD_ALINK	pr1000_user_config_sample_nonLinux.h	22;"	d
DONT_SUPPORT_ETC_FUNC	pr1000_user_config_sample_nonLinux.h	8;"	d
DONT_SUPPORT_EVENT_FUNC	pr1000_user_config_sample_nonLinux.h	19;"	d
DONT_SUPPORT_HELP_STRING	pr1000_user_config_sample_nonLinux.h	35;"	d
DONT_SUPPORT_HELP_STRING	pr1000_user_config_sample_nonLinux.h	37;"	d
DONT_SUPPORT_PTZ_ETC_CMD	pr1000_user_config_sample_nonLinux.h	16;"	d
DONT_SUPPORT_PTZ_FUNC	pr1000_user_config_sample_nonLinux.h	14;"	d
DONT_SUPPORT_STD_PVI	pr1000_user_config_sample_nonLinux.h	30;"	d
DONT_SUPPORT_VDRESOL_EXTEND	pr1000_user_config_sample_nonLinux.h	27;"	d
DONT_SUPPORT_VID_ENHANCEMENT	pr1000_user_config_sample_nonLinux.h	11;"	d
DO_DIV	pr1000.h	47;"	d
DO_DIV	pr1000.h	70;"	d
DRV_LOG_MEM_LENGTH	pr1000.h	516;"	d
DRV_LOG_MEM_NUM	pr1000.h	517;"	d
Dbg	pr1000.h	596;"	d
Dbg	pr1000.h	610;"	d
Dbg	pr1000.h	661;"	d
Dbg	pr1000.h	663;"	d
Dbg	pr1000.h	697;"	d
Dbg	pr1000.h	705;"	d
Dbg	pr1000.h	707;"	d
DbgString	pr1000.h	639;"	d
DbgString	pr1000.h	653;"	d
DbgString	pr1000.h	668;"	d
DbgString	pr1000.h	670;"	d
DbgString	pr1000.h	700;"	d
DbgString	pr1000.h	712;"	d
DbgString	pr1000.h	714;"	d
ENABLE	pr1000.h	23;"	d
ENABLE	pr1000.h	24;"	d
EQ_CNT	pr1000.h	/^	int EQ_CNT;$/;"	m	struct:__anon20
Error	pr1000.h	582;"	d
Error	pr1000.h	659;"	d
Error	pr1000.h	696;"	d
Error	pr1000.h	703;"	d
ErrorString	pr1000.h	625;"	d
ErrorString	pr1000.h	666;"	d
ErrorString	pr1000.h	699;"	d
ErrorString	pr1000.h	710;"	d
FALSE	pr1000.h	21;"	d
FALSE	pr1000.h	22;"	d
FIFO	drv_cq.h	/^typedef struct kfifo FIFO;$/;"	t	typeref:struct:kfifo
FIFO	drv_cq.h	/^}FIFO;$/;"	t	typeref:struct:__anon93
FREE	pr1000.h	54;"	d
GPIONUM	pr1000_user_config.c	362;"	d	file:
GPIONUM	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	363;"	d	file:
GPIONUM	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	363;"	d	file:
GPIONUM	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	363;"	d	file:
GPIONUM	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	363;"	d	file:
GPIONUM	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	363;"	d	file:
GPIONUM	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	363;"	d	file:
GPIONUM1	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	362;"	d	file:
GPIONUM1	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	366;"	d	file:
GPIONUM1	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	362;"	d	file:
GPIONUM1	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	362;"	d	file:
GPIONUM2	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	363;"	d	file:
GPIONUM2	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	367;"	d	file:
GPIONUM2	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	363;"	d	file:
GPIONUM2	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	363;"	d	file:
GPIONUM3	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	364;"	d	file:
GPIONUM3	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	368;"	d	file:
GPIONUM3	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	364;"	d	file:
GPIONUM3	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	364;"	d	file:
GPIONUM4	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	365;"	d	file:
GPIONUM4	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	369;"	d	file:
GPIONUM4	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	365;"	d	file:
GPIONUM4	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	365;"	d	file:
GPIOREG	pr1000_user_config.c	361;"	d	file:
GPIOREG	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	361;"	d	file:
GPIOREG	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	365;"	d	file:
GPIOREG	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	361;"	d	file:
GPIOREG	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	361;"	d	file:
GPIOREG	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	362;"	d	file:
GPIOREG	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	362;"	d	file:
GPIOREG	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	362;"	d	file:
GPIOREG	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	362;"	d	file:
GPIOREG	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	362;"	d	file:
GPIOREG	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	362;"	d	file:
GPIO_DATA	pr1000_user_config.c	365;"	d	file:
GPIO_DATA	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	368;"	d	file:
GPIO_DATA	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	372;"	d	file:
GPIO_DATA	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	368;"	d	file:
GPIO_DATA	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	368;"	d	file:
GPIO_DATA	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	366;"	d	file:
GPIO_DATA	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	366;"	d	file:
GPIO_DATA	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	366;"	d	file:
GPIO_DATA	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	366;"	d	file:
GPIO_DATA	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	366;"	d	file:
GPIO_DATA	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	366;"	d	file:
GPIO_DIR	pr1000_user_config.c	366;"	d	file:
GPIO_DIR	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	369;"	d	file:
GPIO_DIR	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	373;"	d	file:
GPIO_DIR	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	369;"	d	file:
GPIO_DIR	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	369;"	d	file:
GPIO_DIR	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	367;"	d	file:
GPIO_DIR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	367;"	d	file:
GPIO_DIR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	367;"	d	file:
GPIO_DIR	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	367;"	d	file:
GPIO_DIR	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	367;"	d	file:
GPIO_DIR	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	367;"	d	file:
GPIO_I2C_READ	gpio_i2c.h	20;"	d
GPIO_I2C_WRITE	gpio_i2c.h	21;"	d
GPIO_IBE	pr1000_user_config.c	368;"	d	file:
GPIO_IBE	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	371;"	d	file:
GPIO_IBE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	375;"	d	file:
GPIO_IBE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	371;"	d	file:
GPIO_IBE	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	371;"	d	file:
GPIO_IBE	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	369;"	d	file:
GPIO_IBE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	369;"	d	file:
GPIO_IBE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	369;"	d	file:
GPIO_IBE	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	369;"	d	file:
GPIO_IBE	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	369;"	d	file:
GPIO_IBE	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	369;"	d	file:
GPIO_IC	pr1000_user_config.c	373;"	d	file:
GPIO_IC	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	376;"	d	file:
GPIO_IC	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	380;"	d	file:
GPIO_IC	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	376;"	d	file:
GPIO_IC	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	376;"	d	file:
GPIO_IC	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	374;"	d	file:
GPIO_IC	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	374;"	d	file:
GPIO_IC	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	374;"	d	file:
GPIO_IC	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	374;"	d	file:
GPIO_IC	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	374;"	d	file:
GPIO_IC	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	374;"	d	file:
GPIO_IE	pr1000_user_config.c	370;"	d	file:
GPIO_IE	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	373;"	d	file:
GPIO_IE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	377;"	d	file:
GPIO_IE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	373;"	d	file:
GPIO_IE	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	373;"	d	file:
GPIO_IE	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	371;"	d	file:
GPIO_IE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	371;"	d	file:
GPIO_IE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	371;"	d	file:
GPIO_IE	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	371;"	d	file:
GPIO_IE	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	371;"	d	file:
GPIO_IE	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	371;"	d	file:
GPIO_IEV	pr1000_user_config.c	369;"	d	file:
GPIO_IEV	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	372;"	d	file:
GPIO_IEV	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	376;"	d	file:
GPIO_IEV	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	372;"	d	file:
GPIO_IEV	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	372;"	d	file:
GPIO_IEV	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	370;"	d	file:
GPIO_IEV	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	370;"	d	file:
GPIO_IEV	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	370;"	d	file:
GPIO_IEV	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	370;"	d	file:
GPIO_IEV	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	370;"	d	file:
GPIO_IEV	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	370;"	d	file:
GPIO_INT_NUM	pr1000_user_config.c	363;"	d	file:
GPIO_INT_NUM	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	366;"	d	file:
GPIO_INT_NUM	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	370;"	d	file:
GPIO_INT_NUM	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	366;"	d	file:
GPIO_INT_NUM	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	366;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	364;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	364;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	364;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	364;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	364;"	d	file:
GPIO_INT_NUM	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	364;"	d	file:
GPIO_IS	pr1000_user_config.c	367;"	d	file:
GPIO_IS	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	370;"	d	file:
GPIO_IS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	374;"	d	file:
GPIO_IS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	370;"	d	file:
GPIO_IS	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	370;"	d	file:
GPIO_IS	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	368;"	d	file:
GPIO_IS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	368;"	d	file:
GPIO_IS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	368;"	d	file:
GPIO_IS	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	368;"	d	file:
GPIO_IS	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	368;"	d	file:
GPIO_IS	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	368;"	d	file:
GPIO_MIS	pr1000_user_config.c	372;"	d	file:
GPIO_MIS	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	375;"	d	file:
GPIO_MIS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	379;"	d	file:
GPIO_MIS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	375;"	d	file:
GPIO_MIS	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	375;"	d	file:
GPIO_MIS	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	373;"	d	file:
GPIO_MIS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	373;"	d	file:
GPIO_MIS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	373;"	d	file:
GPIO_MIS	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	373;"	d	file:
GPIO_MIS	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	373;"	d	file:
GPIO_MIS	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	373;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config.c	360;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	360;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	364;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	360;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	360;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	361;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	361;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	361;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	361;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	361;"	d	file:
GPIO_PHY_ADDR	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	361;"	d	file:
GPIO_RIS	pr1000_user_config.c	371;"	d	file:
GPIO_RIS	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	374;"	d	file:
GPIO_RIS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	378;"	d	file:
GPIO_RIS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	374;"	d	file:
GPIO_RIS	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	374;"	d	file:
GPIO_RIS	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	372;"	d	file:
GPIO_RIS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	372;"	d	file:
GPIO_RIS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	372;"	d	file:
GPIO_RIS	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	372;"	d	file:
GPIO_RIS	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	372;"	d	file:
GPIO_RIS	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	372;"	d	file:
GetCPUExternalIrqChipState	pr1000_user_config.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetCPUExternalIrqChipState	pr1000_user_config_sample_nonLinux.c	/^int GetCPUExternalIrqChipState(uint8_t *pstIrqChipState)$/;"	f
GetIrqChipState	pr1000_func.c	/^int GetIrqChipState(const int fd, uint8_t *pstIrqChipState)$/;"	f
GetMapChInfo	pr1000_func.c	/^inline static _stPortChSel *GetMapChInfo(const int prChip, const int prChn, const _drvHost *pHost)$/;"	f	file:
GetMapChInfo	pr1000_func.c	/^static _stPortChSel *GetMapChInfo(const int prChip, const int prChn, const _drvHost *pHost)$/;"	f	file:
HDPVI_FAIL	pr1000.h	16;"	d
HDPVI_OK	pr1000.h	17;"	d
HIGH	pr1000.h	31;"	d
HIGH	pr1000.h	32;"	d
I2C_CMD_PR1000_READ	gpio_i2c.h	30;"	d
I2C_CMD_PR1000_WRITE	gpio_i2c.h	29;"	d
I2C_DATA_S	gpio_i2c.h	/^} I2C_DATA_S;$/;"	t	typeref:struct:hiI2C_DATA_S
InitPR1000	pr1000_func.c	/^void InitPR1000(const int fd)$/;"	f
IrqHandler	pr1000.c	/^int IrqHandler(void)$/;"	f
IrqHandler	pr1000.c	/^irqreturn_t IrqHandler(int irq, void *pDevInstance)$/;"	f
KERNELDIR	Makefile	/^KERNELDIR	= ${KSRC}$/;"	m
LOW	pr1000.h	33;"	d
LOW	pr1000.h	34;"	d
MAX_CHN	pr1000_drvcommon.h	12;"	d
MAX_CHN	pr1000_drvcommon.h	17;"	d
MAX_CNT_CHROMALOCK	pr1000.h	111;"	d
MAX_PARAMS	drv_cq.h	297;"	d
MAX_PR1000_CEQ_STEP	pr1000.h	/^	MAX_PR1000_CEQ_STEP$/;"	e	enum:_pr1000_ceq_step
MAX_PR1000_CEQ_TBL_NUM	pr1000_ceqfunc.h	12;"	d
MAX_PR1000_CHIP	pr1000.h	104;"	d
MAX_PR1000_DET_HPERIOD	pr1000.h	/^	MAX_PR1000_DET_HPERIOD$/;"	e	enum:_PR1000_DET_HPERIOD
MAX_PR1000_DET_IFMT_REF	pr1000_drvcommon.h	/^	MAX_PR1000_DET_IFMT_REF$/;"	e	enum:_PR1000_DET_IFMT_REF
MAX_PR1000_DET_IFMT_RES	pr1000_drvcommon.h	/^	MAX_PR1000_DET_IFMT_RES$/;"	e	enum:_PR1000_DET_IFMT_RES
MAX_PR1000_DET_IFMT_STD	pr1000_drvcommon.h	/^	MAX_PR1000_DET_IFMT_STD$/;"	e	enum:_PR1000_DET_IFMT_STD
MAX_PR1000_MON_STEP	pr1000.h	/^	MAX_PR1000_MON_STEP$/;"	e	enum:_pr1000_mon_step
MAX_PR1000_PTZ_SIZE	pr1000_func.c	84;"	d	file:
MAX_PR1000_VEVENT_MASKCOLOR	pr1000_drvcommon.h	/^	MAX_PR1000_VEVENT_MASKCOLOR$/;"	e	enum:_pr1000_vevent_mask_color
MAX_PR1000_VID_OUTF_MUX_TYPE	pr1000_user_config.h	19;"	d
MAX_PR1000_VID_OUTF_MUX_TYPE	pr1000_user_config_sample_nonLinux.h	61;"	d
MAX_PR1000_VID_OUTF_MUX_TYPE	pr1000_user_config_sample_nonLinux.h	68;"	d
MAX_PR1000_VID_OUTF_RESOL_TYPE	pr1000_user_config.h	20;"	d
MAX_PR1000_VID_OUTF_RESOL_TYPE	pr1000_user_config_sample_nonLinux.h	62;"	d
MAX_PR1000_VID_OUTF_RESOL_TYPE	pr1000_user_config_sample_nonLinux.h	69;"	d
MAX_PR1000_VMASK_TYPE	pr1000_drvcommon.h	/^	MAX_PR1000_VMASK_TYPE = 168$/;"	e	enum:_pr1000_vevent_mem_type
MAX_PR_ERR_CODE	pr1000_drvcommon.h	/^	MAX_PR_ERR_CODE$/;"	e	enum:__anon29
MAX_PR_ERR_MODULE	pr1000_drvcommon.h	/^	MAX_PR_ERR_MODULE$/;"	e	enum:__anon28
MAX_PTZ_CMD_LENGTH	pr1000_drvcommon.h	441;"	d
MAX_VIDEO_SYSTEM_TYPE	pr1000_drvcommon.h	/^	MAX_VIDEO_SYSTEM_TYPE$/;"	e	enum:__anon27
MUXCTL_PHY_ADDR	pr1000_user_config.c	358;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	358;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	359;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	359;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	359;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	359;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	359;"	d	file:
MUXCTL_PHY_ADDR	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	359;"	d	file:
MUXCTL_REG	pr1000_user_config.c	359;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	360;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	360;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	360;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	360;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	360;"	d	file:
MUXCTL_REG	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	360;"	d	file:
MUXCTL_REG95	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	359;"	d	file:
MUXCTL_REG96	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	360;"	d	file:
MUXCTL_REG97	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	361;"	d	file:
MUXCTL_REG98	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	362;"	d	file:
NTSC	pr1000_drvcommon.h	/^	NTSC = 0,$/;"	e	enum:__anon27
NULL	pr1000.h	41;"	d
NULL	pr1000.h	64;"	d
PAL	pr1000_drvcommon.h	/^	PAL,$/;"	e	enum:__anon27
PARAM_FILE	Makefile	/^	PARAM_FILE := ..\/..\/..\/mpp\/Makefile.param$/;"	m
PIXELPLUS_PR1000	gpio_i2c.h	5;"	d
POLLERR	pr1000.h	81;"	d
POLLHUP	pr1000.h	82;"	d
POLLIN	pr1000.h	78;"	d
POLLMSG	pr1000.h	89;"	d
POLLNVAL	pr1000.h	83;"	d
POLLOUT	pr1000.h	80;"	d
POLLPRI	pr1000.h	79;"	d
POLLRDBAND	pr1000.h	86;"	d
POLLRDHUP	pr1000.h	91;"	d
POLLRDNORM	pr1000.h	85;"	d
POLLREMOVE	pr1000.h	90;"	d
POLLWRBAND	pr1000.h	88;"	d
POLLWRNORM	pr1000.h	87;"	d
PR1000_AUD_Enable	pr1000_func.c	/^int PR1000_AUD_Enable(const int fd, const uint8_t chip, const int bEnable)$/;"	f
PR1000_AUD_GetAiGain	pr1000_func.c	/^int PR1000_AUD_GetAiGain(const int fd, const uint8_t chip, _stAUDAiGain *pstAUDAiGain)$/;"	f
PR1000_AUD_GetCascadeAttr	pr1000_func.c	/^int PR1000_AUD_GetCascadeAttr(const int fd, const uint8_t chip, _stAUDCascadeAttr *pstAUDCascadeAttr)$/;"	f
PR1000_AUD_GetDacGain	pr1000_func.c	/^int PR1000_AUD_GetDacGain(const int fd, const uint8_t chip, _stAUDDacGain *pstAUDDacGain)$/;"	f
PR1000_AUD_GetDetAttr	pr1000_func.c	/^int PR1000_AUD_GetDetAttr(const int fd, const uint8_t chip, _stAUDDetAttr *pstAUDDetAttr)$/;"	f
PR1000_AUD_GetMixMode	pr1000_func.c	/^int PR1000_AUD_GetMixMode(const int fd, const uint8_t chip, _stAUDMixMode *pstAUDMixMode)$/;"	f
PR1000_AUD_GetPbAttr	pr1000_func.c	/^int PR1000_AUD_GetPbAttr(const int fd, const uint8_t chip, _stAUDPbAttr *pstAUDPbAttr)$/;"	f
PR1000_AUD_GetRecAttr	pr1000_func.c	/^int PR1000_AUD_GetRecAttr(const int fd, const uint8_t chip, _stAUDRecAttr *pstAUDRecAttr)$/;"	f
PR1000_AUD_SetAiGain	pr1000_func.c	/^int PR1000_AUD_SetAiGain(const int fd, const uint8_t chip, const _stAUDAiGain *pstAUDAiGain)$/;"	f
PR1000_AUD_SetCascadeAttr	pr1000_func.c	/^int PR1000_AUD_SetCascadeAttr(const int fd, const uint8_t chip, const _stAUDCascadeAttr *pstAUDCascadeAttr)$/;"	f
PR1000_AUD_SetDacChn	pr1000_func.c	/^int PR1000_AUD_SetDacChn(const int fd, const uint8_t chip, const int ch)$/;"	f
PR1000_AUD_SetDacGain	pr1000_func.c	/^int PR1000_AUD_SetDacGain(const int fd, const uint8_t chip, const _stAUDDacGain *pstAUDDacGain)$/;"	f
PR1000_AUD_SetDacMute	pr1000_func.c	/^int PR1000_AUD_SetDacMute(const int fd, const uint8_t chip, const int bEnable)$/;"	f
PR1000_AUD_SetDetAttr	pr1000_func.c	/^int PR1000_AUD_SetDetAttr(const int fd, const uint8_t chip, const _stAUDDetAttr *pstAUDDetAttr)$/;"	f
PR1000_AUD_SetMixMode	pr1000_func.c	/^int PR1000_AUD_SetMixMode(const int fd, const uint8_t chip, const _stAUDMixMode *pstAUDMixMode)$/;"	f
PR1000_AUD_SetMixMute	pr1000_func.c	/^int PR1000_AUD_SetMixMute(const int fd, const uint8_t chip, const int bEnable)$/;"	f
PR1000_AUD_SetPbAttr	pr1000_func.c	/^int PR1000_AUD_SetPbAttr(const int fd, const uint8_t chip, const _stAUDPbAttr *pstAUDPbAttr)$/;"	f
PR1000_AUD_SetRecAttr	pr1000_func.c	/^int PR1000_AUD_SetRecAttr(const int fd, const uint8_t chip, const _stAUDRecAttr *pstAUDRecAttr)$/;"	f
PR1000_AUD_SetRecMute	pr1000_func.c	/^int PR1000_AUD_SetRecMute(const int fd, const uint8_t chip, const uint8_t ch, const int bEnable)$/;"	f
PR1000_AUD_SetVocMute	pr1000_func.c	/^int PR1000_AUD_SetVocMute(const int fd, const uint8_t chip, const int bEnable)$/;"	f
PR1000_CEQ_Compensate	pr1000_ceqfunc.c	/^int PR1000_CEQ_Compensate(const int fd, const int mapChn, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, const uint8_t bWrAtten, const uint8_t bWrComp, void *pArgu)$/;"	f
PR1000_CEQ_Done	pr1000_ceqfunc.c	/^int PR1000_CEQ_Done(const int fd, const int mapChn, void *pArgu)$/;"	f
PR1000_CEQ_EST_COMP	pr1000_ceqfunc.c	80;"	d	file:
PR1000_CEQ_GetEQDistFactor	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetEQDistFactor(const int fd, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, const uint16_t *pu16DistInfo, uint8_t *pu8ResultFact)$/;"	f
PR1000_CEQ_GetEQEstFactor	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetEQEstFactor(const int fd, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, const _stCeqInfoReg *pstCeqInfoReg, uint8_t *pu8ResultInfo, uint16_t *pu16ResultFact)$/;"	f
PR1000_CEQ_GetEQInfo	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetEQInfo(const int fd, const _stPortChSel *pstPortChSel, _stCEQInfo *pstCEQInfo)$/;"	f
PR1000_CEQ_GetEQTunnEstFactor	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetEQTunnEstFactor(const int fd, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, const _stCeqInfoReg *pstCeqInfoReg, int stepDir, uint16_t *pu16CurFact, uint8_t *pu8ResultInfo, uint16_t *pu16ResultFact)$/;"	f
PR1000_CEQ_GetInfoRegs	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetInfoRegs(const int fd, const _stPortChSel *pstPortChSel, _stCeqInfoReg *pstCeqInfoReg)$/;"	f
PR1000_CEQ_GetSTDEst	pr1000_ceqfunc.c	/^int PR1000_CEQ_GetSTDEst(const int fd, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, const _stCeqInfoReg *pstCeqInfoReg, uint8_t *pu8ResultInfo, uint16_t *pu16ResultFact)$/;"	f
PR1000_CEQ_STEP_CHROMALOCK	pr1000.h	/^	PR1000_CEQ_STEP_CHROMALOCK,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_EQCHECK	pr1000.h	/^	PR1000_CEQ_STEP_EQCHECK,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_EQSTART	pr1000.h	/^	PR1000_CEQ_STEP_EQSTART,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_EQSTDDONE	pr1000.h	/^	PR1000_CEQ_STEP_EQSTDDONE,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_EQTIMEOUT	pr1000.h	/^	PR1000_CEQ_STEP_EQTIMEOUT,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_ESTCHGING	pr1000.h	/^	PR1000_CEQ_STEP_ESTCHGING,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_ESTSTART	pr1000.h	/^	PR1000_CEQ_STEP_ESTSTART,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_NONE	pr1000.h	/^	PR1000_CEQ_STEP_NONE = 0,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_SPECIALSTD_CHECK	pr1000.h	/^	PR1000_CEQ_STEP_SPECIALSTD_CHECK,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_STDCHECK	pr1000.h	/^	PR1000_CEQ_STEP_STDCHECK,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_STDFORMAT_CHECK	pr1000.h	/^	PR1000_CEQ_STEP_STDFORMAT_CHECK, \/\/Old_New select check$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_WAIT_CHROMALOCK1	pr1000.h	/^	PR1000_CEQ_STEP_WAIT_CHROMALOCK1,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_STEP_WAIT_CHROMALOCK2	pr1000.h	/^	PR1000_CEQ_STEP_WAIT_CHROMALOCK2,$/;"	e	enum:_pr1000_ceq_step
PR1000_CEQ_SetEQGain	pr1000_ceqfunc.c	/^int PR1000_CEQ_SetEQGain(const int fd, const uint8_t bWrAtten, const uint8_t bWrComp, const _stPortChSel *pstPortChSel, _stCEQData *pstCEQData)$/;"	f
PR1000_CEQ_SetVADCGain	pr1000_ceqfunc.c	/^int PR1000_CEQ_SetVADCGain(const int fd, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, _stPortChSel *pstPortChSel, _stCEQData *pstCEQData)$/;"	f
PR1000_CEQ_SetVIDCVI_CUNLOCK	pr1000_ceqfunc.c	/^int PR1000_CEQ_SetVIDCVI_CUNLOCK(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_table_inresol camResol)$/;"	f
PR1000_CEQ_SetVIDHDA_CUNLOCK	pr1000_ceqfunc.c	/^int PR1000_CEQ_SetVIDHDA_CUNLOCK(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_table_inresol camResol)$/;"	f
PR1000_CEQ_SetVIDStd	pr1000_ceqfunc.c	/^int PR1000_CEQ_SetVIDStd(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol)$/;"	f
PR1000_CEQ_Start	pr1000_ceqfunc.c	/^int PR1000_CEQ_Start(const int fd, const int mapChn, void *pArgu)$/;"	f
PR1000_CEQ_Stop	pr1000_ceqfunc.c	/^int PR1000_CEQ_Stop(const int fd, const int mapChn, void *pArgu)$/;"	f
PR1000_CHIPID	pr1000.h	106;"	d
PR1000_CHIP_COUNT	pr1000_user_config.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_CHIP_COUNT=2; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_CHIP_COUNT=4; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_CHIP_COUNT=4; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_CHIP_COUNT=4; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_CHIP_COUNT=2; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_CHIP_COUNT=4; $/;"	v
PR1000_CHIP_COUNT	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_CHIP_COUNT=1; $/;"	v
PR1000_CQ_delete	drv_cq.h	/^static inline void PR1000_CQ_delete(FIFO *fifo)$/;"	f
PR1000_CQ_delete	drv_cq.h	/^static void PR1000_CQ_delete(FIFO *fifo)$/;"	f
PR1000_CQ_free_item	drv_cq.h	/^static inline void PR1000_CQ_free_item(void *pItem)$/;"	f
PR1000_CQ_free_item	drv_cq.h	/^static void PR1000_CQ_free_item(void *pItem)$/;"	f
PR1000_CQ_get	drv_cq.h	/^static inline void *PR1000_CQ_get(FIFO *fifo)$/;"	f
PR1000_CQ_get	drv_cq.h	/^static void *PR1000_CQ_get(FIFO *fifo)$/;"	f
PR1000_CQ_get_locked	drv_cq.h	/^static inline void *PR1000_CQ_get_locked(FIFO *fifo, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_get_locked	drv_cq.h	/^static void *PR1000_CQ_get_locked(FIFO *fifo, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_howmany	drv_cq.h	/^static inline unsigned int PR1000_CQ_howmany(FIFO *fifo, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_howmany	drv_cq.h	/^static unsigned int PR1000_CQ_howmany(FIFO *fifo, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_is_empty	drv_cq.h	/^static inline int PR1000_CQ_is_empty(FIFO *fifo)$/;"	f
PR1000_CQ_is_empty	drv_cq.h	/^static int PR1000_CQ_is_empty(FIFO *fifo)$/;"	f
PR1000_CQ_is_full	drv_cq.h	/^static inline int PR1000_CQ_is_full(FIFO *fifo)$/;"	f
PR1000_CQ_is_full	drv_cq.h	/^static int PR1000_CQ_is_full(FIFO *fifo)$/;"	f
PR1000_CQ_new	drv_cq.h	/^static inline int PR1000_CQ_new(FIFO *fifo, int size)$/;"	f
PR1000_CQ_new	drv_cq.h	/^static int PR1000_CQ_new(FIFO *fifo, int size)$/;"	f
PR1000_CQ_peek	drv_cq.h	/^static inline void *PR1000_CQ_peek(FIFO *fifo)$/;"	f
PR1000_CQ_peek	drv_cq.h	/^static void *PR1000_CQ_peek(FIFO *fifo)$/;"	f
PR1000_CQ_put	drv_cq.h	/^static inline int PR1000_CQ_put(FIFO *fifo, void *p)$/;"	f
PR1000_CQ_put	drv_cq.h	/^static int PR1000_CQ_put(FIFO *fifo, void *p)$/;"	f
PR1000_CQ_put_locked	drv_cq.h	/^static inline int PR1000_CQ_put_locked(FIFO *fifo, void *p, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_put_locked	drv_cq.h	/^static int PR1000_CQ_put_locked(FIFO *fifo, void *p, SPINLOCK_T *lock)$/;"	f
PR1000_CQ_remove	drv_cq.h	/^static inline void PR1000_CQ_remove(FIFO *fifo)$/;"	f
PR1000_CQ_remove	drv_cq.h	/^static void PR1000_CQ_remove(FIFO *fifo)$/;"	f
PR1000_CQ_reset	drv_cq.h	/^static inline void PR1000_CQ_reset(FIFO *fifo)$/;"	f
PR1000_CQ_reset	drv_cq.h	/^static void PR1000_CQ_reset(FIFO *fifo)$/;"	f
PR1000_ChipInfo	pr1000_func.c	/^void PR1000_ChipInfo(const int fd, _drvHost *pHost)$/;"	f
PR1000_DET_HPERIOD_1080p25	pr1000.h	/^	PR1000_DET_HPERIOD_1080p25,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_1080p30	pr1000.h	/^	PR1000_DET_HPERIOD_1080p30,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_720p25	pr1000.h	/^	PR1000_DET_HPERIOD_720p25,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_720p30	pr1000.h	/^	PR1000_DET_HPERIOD_720p30,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_720p50	pr1000.h	/^	PR1000_DET_HPERIOD_720p50,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_720p60	pr1000.h	/^	PR1000_DET_HPERIOD_720p60 = 0,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_HPERIOD_SD	pr1000.h	/^	PR1000_DET_HPERIOD_SD,$/;"	e	enum:_PR1000_DET_HPERIOD
PR1000_DET_IFMT_REF_25	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_REF_25 = 0,$/;"	e	enum:_PR1000_DET_IFMT_REF
PR1000_DET_IFMT_REF_30	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_REF_30,$/;"	e	enum:_PR1000_DET_IFMT_REF
PR1000_DET_IFMT_REF_50	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_REF_50,$/;"	e	enum:_PR1000_DET_IFMT_REF
PR1000_DET_IFMT_REF_60	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_REF_60,$/;"	e	enum:_PR1000_DET_IFMT_REF
PR1000_DET_IFMT_RES_1080p	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_RES_1080p,$/;"	e	enum:_PR1000_DET_IFMT_RES
PR1000_DET_IFMT_RES_480i	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_RES_480i = 0,$/;"	e	enum:_PR1000_DET_IFMT_RES
PR1000_DET_IFMT_RES_576i	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_RES_576i,$/;"	e	enum:_PR1000_DET_IFMT_RES
PR1000_DET_IFMT_RES_720p	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_RES_720p,$/;"	e	enum:_PR1000_DET_IFMT_RES
PR1000_DET_IFMT_STD_CVI	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_STD_CVI,$/;"	e	enum:_PR1000_DET_IFMT_STD
PR1000_DET_IFMT_STD_HDA	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_STD_HDA,$/;"	e	enum:_PR1000_DET_IFMT_STD
PR1000_DET_IFMT_STD_HDT	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_STD_HDT,$/;"	e	enum:_PR1000_DET_IFMT_STD
PR1000_DET_IFMT_STD_PVI	pr1000_drvcommon.h	/^	PR1000_DET_IFMT_STD_PVI = 0,$/;"	e	enum:_PR1000_DET_IFMT_STD
PR1000_DRV_NAME	Makefile	/^PR1000_DRV_NAME := pr1000_drv$/;"	m
PR1000_EQCOMP_LIMIT	pr1000_ceqfunc.c	79;"	d	file:
PR1000_EQ_CHECK_PERIOD	pr1000_ceqfunc.h	9;"	d
PR1000_GetCeqDetInfo	pr1000_ceqfunc.c	/^int PR1000_GetCeqDetInfo(const int fd, const _stPortChSel *pstPortChSel, _stCEQData *pstCEQData, _stCeqDet *pstCeqDet, _stCeqLock *pstCeqLock)$/;"	f
PR1000_GetPwDown	pr1000_func.c	/^int PR1000_GetPwDown(const int fd, _stPrPwDown *pstPrPwDown)$/;"	f
PR1000_I2C_SLVADDRS	pr1000_user_config.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_I2C_SLVADDRS[4] = {$/;"	v
PR1000_I2C_SLVADDRS	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_I2C_SLVADDRS[1] = {$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_SYNC_PERIOD	pr1000_user_config_sample_nonLinux.c	/^const uint32_t PR1000_INT_SYNC_PERIOD=300; \/\/mininum 100msec.$/;"	v
PR1000_INT_WAKE_PERIOD	pr1000_func.c	83;"	d	file:
PR1000_IRQ_AD_ABS_Isr	pr1000_func.c	/^int PR1000_IRQ_AD_ABS_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_AD_DIFF_Isr	pr1000_func.c	/^int PR1000_IRQ_AD_DIFF_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_BD_Isr	pr1000_func.c	/^int PR1000_IRQ_BD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_CASCADE	pr1000_user_config.c	352;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	352;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	352;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	352;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	352;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	353;"	d	file:
PR1000_IRQ_CASCADE	pr1000_user_config_sample_nonLinux.c	110;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config.c	351;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	351;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	351;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	351;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	351;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	352;"	d	file:
PR1000_IRQ_CPU_EXTERNAL	pr1000_user_config_sample_nonLinux.c	109;"	d	file:
PR1000_IRQ_DD_Isr	pr1000_func.c	/^int PR1000_IRQ_DD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_DFD_Isr	pr1000_func.c	/^int PR1000_IRQ_DFD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_GPIO_Isr	pr1000_func.c	/^int PR1000_IRQ_GPIO_Isr(const int fd, const uint8_t prChip, const uint8_t prChn, const uint8_t intReg, _drvHost *pHost)$/;"	f
PR1000_IRQ_Init	pr1000_func.c	/^int PR1000_IRQ_Init(const int fd, const _drvHost *pHost)$/;"	f
PR1000_IRQ_Isr	pr1000_func.c	/^int PR1000_IRQ_Isr(const int fd, _drvHost *pHost)$/;"	f
PR1000_IRQ_MD_Isr	pr1000_func.c	/^int PR1000_IRQ_MD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_ND_Isr	pr1000_func.c	/^int PR1000_IRQ_ND_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_NOAUD_Isr	pr1000_func.c	/^int PR1000_IRQ_NOAUD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_NOVID_Isr	pr1000_func.c	/^int PR1000_IRQ_NOVID_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_PTZ_Isr	pr1000_func.c	/^int PR1000_IRQ_PTZ_Isr(const int fd, const uint8_t prChip, const uint8_t prChn, const uint8_t intReg, _drvHost *pHost)$/;"	f
PR1000_IRQ_VFD_Isr	pr1000_func.c	/^int PR1000_IRQ_VFD_Isr(const int fd, const uint8_t prChip, const uint8_t intReg, const uint8_t intStatus, _drvHost *pHost)$/;"	f
PR1000_IRQ_WAKE_Isr	pr1000_func.c	/^int PR1000_IRQ_WAKE_Isr(const int fd, _drvHost *pHost)$/;"	f
PR1000_IfmtToStdResol	pr1000_func.c	/^int PR1000_IfmtToStdResol(const int fd, const uint8_t std, const uint8_t ref, const uint8_t res, enum _pr1000_table_format *pFormat, enum _pr1000_table_inresol *pResol)$/;"	f
PR1000_Init	pr1000_func.c	/^int PR1000_Init(const int fd, _drvHost *pHost)$/;"	f
PR1000_Kthread	pr1000_func.c	/^int PR1000_Kthread(void *arg)$/;"	f
PR1000_MASTER	pr1000.h	100;"	d
PR1000_MAX_DET_CELL_X_NUM	pr1000_drvcommon.h	485;"	d
PR1000_MAX_DET_CELL_Y_NUM	pr1000_drvcommon.h	486;"	d
PR1000_MAX_MASK_CELL_X_NUM	pr1000_drvcommon.h	487;"	d
PR1000_MAX_MASK_CELL_Y_NUM	pr1000_drvcommon.h	488;"	d
PR1000_MON_CheckChgVF	pr1000_ceqfunc.c	/^int PR1000_MON_CheckChgVF(const int fd, _stPortChSel *pstPortChSel, _stCEQData *pstCEQData, void *pArgu)$/;"	f
PR1000_MON_STEP_CHECKSTDHDA	pr1000.h	/^	PR1000_MON_STEP_CHECKSTDHDA,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_CHROMALOCK1	pr1000.h	/^	PR1000_MON_STEP_CHROMALOCK1,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_CHROMALOCK2	pr1000.h	/^	PR1000_MON_STEP_CHROMALOCK2,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_CHROMALOCK3	pr1000.h	/^	PR1000_MON_STEP_CHROMALOCK3,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_CHROMALOCK4	pr1000.h	/^	PR1000_MON_STEP_CHROMALOCK4,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_CHROMALOCK5	pr1000.h	/^	PR1000_MON_STEP_CHROMALOCK5,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_COMPENSATE	pr1000.h	/^	PR1000_MON_STEP_COMPENSATE,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_NONE	pr1000.h	/^	PR1000_MON_STEP_NONE = 0,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_START	pr1000.h	/^	PR1000_MON_STEP_START,$/;"	e	enum:_pr1000_mon_step
PR1000_MON_STEP_VADCGAINSEL	pr1000.h	/^	PR1000_MON_STEP_VADCGAINSEL,$/;"	e	enum:_pr1000_mon_step
PR1000_OFFSETADDR_CEQ_6PAGE_CH	pr1000_ceqfunc.c	77;"	d	file:
PR1000_OFFSETADDR_CEQ_INFO_CH	pr1000_table.h	224;"	d
PR1000_OFFSETADDR_CEQ_INFO_CH	pr1000_table.h	345;"	d
PR1000_OFFSETADDR_PTZ_CH	pr1000_table.h	257;"	d
PR1000_OFFSETADDR_PTZ_CH	pr1000_table.h	378;"	d
PR1000_OFFSETADDR_VDEC_0PAGE_CH	pr1000_table.h	228;"	d
PR1000_OFFSETADDR_VDEC_0PAGE_CH	pr1000_table.h	349;"	d
PR1000_OFFSETADDR_VDEC_1_2PAGE_CH	pr1000_table.h	231;"	d
PR1000_OFFSETADDR_VDEC_1_2PAGE_CH	pr1000_table.h	352;"	d
PR1000_OFFSETADDR_VEVENT_CH	pr1000_table.h	273;"	d
PR1000_OFFSETADDR_VEVENT_CH	pr1000_table.h	394;"	d
PR1000_PTZ_CVI_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	11;"	d
PR1000_PTZ_CVI_SendTxData	pr1000_func.c	/^int PR1000_PTZ_CVI_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_CVI_TXCMD_BASE_BYTE_CNT	pr1000_ptz_table_cvi.h	22;"	d
PR1000_PTZ_CVI_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	10;"	d
PR1000_PTZ_CheckSendTxStatus	pr1000_func.c	/^int PR1000_PTZ_CheckSendTxStatus(const int fd, const _stPortChSel *pstPortChSel)$/;"	f
PR1000_PTZ_EnableRXPath	pr1000_func.c	/^int PR1000_PTZ_EnableRXPath(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn, const int bEnable)$/;"	f
PR1000_PTZ_EnableTXPath	pr1000_func.c	/^int PR1000_PTZ_EnableTXPath(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn, const int bEnable)$/;"	f
PR1000_PTZ_GetHVStartAttr	pr1000_func.c	/^int PR1000_PTZ_GetHVStartAttr(const int fd, const _stPortChSel *pstPortChSel, _stPTZHVStartAttr *pstPTZHVStartAttr)$/;"	f
PR1000_PTZ_GetRxAttr	pr1000_func.c	/^int PR1000_PTZ_GetRxAttr(const int fd, const _stPortChSel *pstPortChSel, _stPTZRxAttr *pstPTZRxAttr)$/;"	f
PR1000_PTZ_GetRxParam	pr1000_func.c	/^int PR1000_PTZ_GetRxParam(const int fd, const _stPortChSel *pstPortChSel, _stPTZRxParam *pstPTZRxParam)$/;"	f
PR1000_PTZ_GetTxAttr	pr1000_func.c	/^int PR1000_PTZ_GetTxAttr(const int fd, const _stPortChSel *pstPortChSel, _stPTZTxAttr *pstPTZTxAttr)$/;"	f
PR1000_PTZ_GetTxParam	pr1000_func.c	/^int PR1000_PTZ_GetTxParam(const int fd, const _stPortChSel *pstPortChSel, _stPTZTxParam *pstPTZTxParam)$/;"	f
PR1000_PTZ_HDA_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	17;"	d
PR1000_PTZ_HDA_STDFORMAT_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	26;"	d
PR1000_PTZ_HDA_STDFORMAT_SendTxData	pr1000_func.c	/^int PR1000_PTZ_HDA_STDFORMAT_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_HDA_STDFORMAT_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	23;"	d
PR1000_PTZ_HDA_SendTxData	pr1000_func.c	/^int PR1000_PTZ_HDA_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_HDA_TXCMD_BASE_BYTE_CNT_1080p	pr1000_ptz_table_hda.h	21;"	d
PR1000_PTZ_HDA_TXCMD_BASE_BYTE_CNT_720p	pr1000_ptz_table_hda.h	41;"	d
PR1000_PTZ_HDA_TX_DATA_BITSWAP_1080P	pr1000_ptz_drvtable.h	15;"	d
PR1000_PTZ_HDA_TX_DATA_BITSWAP_720P	pr1000_ptz_drvtable.h	16;"	d
PR1000_PTZ_HDT_CHGOLD_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	56;"	d
PR1000_PTZ_HDT_CHGOLD_SendTxCmd	pr1000_func.c	/^int PR1000_PTZ_HDT_CHGOLD_SendTxCmd(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol)$/;"	f
PR1000_PTZ_HDT_CHGOLD_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	53;"	d
PR1000_PTZ_HDT_NEW_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	37;"	d
PR1000_PTZ_HDT_NEW_SendTxData	pr1000_func.c	/^int PR1000_PTZ_HDT_NEW_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_HDT_NEW_TXCMD_BASE_BYTE_CNT	pr1000_ptz_table_hdt.h	47;"	d
PR1000_PTZ_HDT_NEW_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	36;"	d
PR1000_PTZ_HDT_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	35;"	d
PR1000_PTZ_HDT_STDFORMAT_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	47;"	d
PR1000_PTZ_HDT_STDFORMAT_SendTxData	pr1000_func.c	/^int PR1000_PTZ_HDT_STDFORMAT_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_HDT_STDFORMAT_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	44;"	d
PR1000_PTZ_HDT_SendTxData	pr1000_func.c	/^int PR1000_PTZ_HDT_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_HDT_TXCMD_BASE_BYTE_CNT	pr1000_ptz_table_hdt.h	22;"	d
PR1000_PTZ_HDT_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	34;"	d
PR1000_PTZ_Init	pr1000_func.c	/^int PR1000_PTZ_Init(const int fd, const _stPortChSel *pstPortChSel, _drvHost *pHost)$/;"	f
PR1000_PTZ_InitRXFifo	pr1000_func.c	/^int PR1000_PTZ_InitRXFifo(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn)$/;"	f
PR1000_PTZ_InitTXFifo	pr1000_func.c	/^int PR1000_PTZ_InitTXFifo(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn)$/;"	f
PR1000_PTZ_LoadTable	pr1000_func.c	/^int PR1000_PTZ_LoadTable(const int fd, const _stPortChSel *pstPortChSel, const uint8_t format, const uint8_t resol, _drvHost *pHost)$/;"	f
PR1000_PTZ_PVI_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	64;"	d
PR1000_PTZ_PVI_SendTxData	pr1000_func.c	/^int PR1000_PTZ_PVI_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_PVI_TXCMD_BASE_BYTE_CNT	pr1000_ptz_table_pvi.h	21;"	d
PR1000_PTZ_PVI_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	63;"	d
PR1000_PTZ_ResolveRecvData	pr1000_func.c	/^int PR1000_PTZ_ResolveRecvData(const int fd, const uint8_t format, const uint8_t resol, const uint8_t *pData, const uint8_t length)$/;"	f
PR1000_PTZ_SD_RX_DATA_BITSWAP	pr1000_ptz_drvtable.h	6;"	d
PR1000_PTZ_SD_SendTxData	pr1000_func.c	/^int PR1000_PTZ_SD_SendTxData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const uint8_t *pPtzCmd, uint16_t ptzCmdLength)$/;"	f
PR1000_PTZ_SD_TXCMD_BASE_BYTE_CNT	pr1000_ptz_table_sd.h	21;"	d
PR1000_PTZ_SD_TX_DATA_BITSWAP	pr1000_ptz_drvtable.h	5;"	d
PR1000_PTZ_STDFORMAT_Check	pr1000_func.c	/^int PR1000_PTZ_STDFORMAT_Check(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_table_format format, const enum _pr1000_table_inresol camResol, _drvHost *pHost)$/;"	f
PR1000_PTZ_STDFORMAT_SetPattern	pr1000_func.c	/^int PR1000_PTZ_STDFORMAT_SetPattern(const int fd, const _stPortChSel *pstPortChSel, const uint8_t format,  const uint8_t camResol, _drvHost *pHost)$/;"	f
PR1000_PTZ_SetPattern	pr1000_func.c	/^int PR1000_PTZ_SetPattern(const int fd, const _stPortChSel *pstPortChSel, const uint8_t format,  const uint8_t resol, _drvHost *pHost)$/;"	f
PR1000_PTZ_SetRxParam	pr1000_func.c	/^int PR1000_PTZ_SetRxParam(const int fd, const _stPortChSel *pstPortChSel, const _stPTZRxParam *pstPTZRxParam)$/;"	f
PR1000_PTZ_SetTxParam	pr1000_func.c	/^int PR1000_PTZ_SetTxParam(const int fd, const _stPortChSel *pstPortChSel, const _stPTZTxParam *pstPTZTxParam)$/;"	f
PR1000_PTZ_StartRX	pr1000_func.c	/^int PR1000_PTZ_StartRX(const int fd, const _stPortChSel *pstPortChSel, const int bStart)$/;"	f
PR1000_PTZ_StartTX	pr1000_func.c	/^int PR1000_PTZ_StartTX(const int fd, const _stPortChSel *pstPortChSel, const int bStart)$/;"	f
PR1000_PTZ_WriteRxPattern	pr1000_func.c	/^int PR1000_PTZ_WriteRxPattern(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn, const unsigned char *pRxPatFormat, const int sizeRxPatFormat, const unsigned char *pRxPatStartFormat, const int sizeRxPatStartFormat, const unsigned char *pRxPatStartData, const int sizeRxPatStartData)$/;"	f
PR1000_PTZ_WriteTxPattern	pr1000_func.c	/^int PR1000_PTZ_WriteTxPattern(const int fd, const uint8_t i2cSlaveAddr, const uint8_t prChn, const unsigned char *pTxPatFormat, const int sizeTxPatFormat, const unsigned char *pTxPatData, const int sizeTxPatData)$/;"	f
PR1000_REG_ADDR_PTZ_FIFO_RD_ADDR	pr1000_table.h	27;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_ADDR	pr1000_table.h	55;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_DATA	pr1000_table.h	25;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_DATA	pr1000_table.h	53;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_INIT	pr1000_table.h	24;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_INIT	pr1000_table.h	52;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_SIZE	pr1000_table.h	26;"	d
PR1000_REG_ADDR_PTZ_FIFO_RD_SIZE	pr1000_table.h	54;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_ADDR	pr1000_table.h	23;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_ADDR	pr1000_table.h	51;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_DATA	pr1000_table.h	21;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_DATA	pr1000_table.h	49;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_INIT	pr1000_table.h	20;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_INIT	pr1000_table.h	48;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_SIZE	pr1000_table.h	22;"	d
PR1000_REG_ADDR_PTZ_FIFO_WR_SIZE	pr1000_table.h	50;"	d
PR1000_REG_ADDR_PTZ_RX_EN	pr1000_table.h	18;"	d
PR1000_REG_ADDR_PTZ_RX_EN	pr1000_table.h	46;"	d
PR1000_REG_ADDR_PTZ_TX_EN	pr1000_table.h	19;"	d
PR1000_REG_ADDR_PTZ_TX_EN	pr1000_table.h	47;"	d
PR1000_REG_ADDR_PTZ_TX_GROUP_CNT	pr1000_table.h	28;"	d
PR1000_REG_ADDR_PTZ_TX_GROUP_CNT	pr1000_table.h	56;"	d
PR1000_REG_PAGE_AUD	pr1000_table.h	14;"	d
PR1000_REG_PAGE_AUD	pr1000_table.h	42;"	d
PR1000_REG_PAGE_COMMON	pr1000_table.h	11;"	d
PR1000_REG_PAGE_COMMON	pr1000_table.h	39;"	d
PR1000_REG_PAGE_PTZ	pr1000_table.h	15;"	d
PR1000_REG_PAGE_PTZ	pr1000_table.h	43;"	d
PR1000_REG_PAGE_VDEC1	pr1000_table.h	12;"	d
PR1000_REG_PAGE_VDEC1	pr1000_table.h	40;"	d
PR1000_REG_PAGE_VDEC2	pr1000_table.h	13;"	d
PR1000_REG_PAGE_VDEC2	pr1000_table.h	41;"	d
PR1000_REG_PAGE_VEVENT	pr1000_table.h	16;"	d
PR1000_REG_PAGE_VEVENT	pr1000_table.h	44;"	d
PR1000_SLAVE1	pr1000.h	101;"	d
PR1000_SLAVE2	pr1000.h	102;"	d
PR1000_SLAVE3	pr1000.h	103;"	d
PR1000_SetPwDown	pr1000_func.c	/^int PR1000_SetPwDown(const int fd, const _stPrPwDown *pstPrPwDown)$/;"	f
PR1000_THREAD_POLLING_PERIOD	pr1000.h	110;"	d
PR1000_TestInfeface	pr1000_func.c	/^int PR1000_TestInfeface(const int fd, _drvHost *pHost)$/;"	f
PR1000_VDEC_PAGE	pr1000_table.h	229;"	d
PR1000_VDEC_PAGE	pr1000_table.h	350;"	d
PR1000_VEVENT_ClearMask	pr1000_func.c	/^int PR1000_VEVENT_ClearMask(const int fd, const _stPortChSel *pstPortChSel)$/;"	f
PR1000_VEVENT_DISP_BD	pr1000_drvcommon.h	/^	PR1000_VEVENT_DISP_BD = 1,$/;"	e	enum:_pr1000_vevent_disp_format
PR1000_VEVENT_DISP_MD	pr1000_drvcommon.h	/^	PR1000_VEVENT_DISP_MD = 2,$/;"	e	enum:_pr1000_vevent_disp_format
PR1000_VEVENT_DISP_NONE	pr1000_drvcommon.h	/^	PR1000_VEVENT_DISP_NONE$/;"	e	enum:_pr1000_vevent_disp_format
PR1000_VEVENT_DISP_PZ	pr1000_drvcommon.h	/^	PR1000_VEVENT_DISP_PZ = 0,$/;"	e	enum:_pr1000_vevent_disp_format
PR1000_VEVENT_GetAdAbsStatus	pr1000_func.c	/^int PR1000_VEVENT_GetAdAbsStatus(const int fd, const uint8_t chip, const uint8_t prChn, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetAdDiffStatus	pr1000_func.c	/^int PR1000_VEVENT_GetAdDiffStatus(const int fd, const uint8_t chip, const uint8_t prChn, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetAdMuteStatus	pr1000_func.c	/^int PR1000_VEVENT_GetAdMuteStatus(const int fd, const uint8_t chip, const uint8_t prChn, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetBdAttr	pr1000_func.c	/^int PR1000_VEVENT_GetBdAttr(const int fd, const _stPortChSel *pstPortChSel, _stBdAttr *pstBdAttr)$/;"	f
PR1000_VEVENT_GetBdLvSens	pr1000_func.c	/^int PR1000_VEVENT_GetBdLvSens(const int fd, const _stPortChSel *pstPortChSel, _stBdLvSens *pstBdLvSens)$/;"	f
PR1000_VEVENT_GetBdSpSens	pr1000_func.c	/^int PR1000_VEVENT_GetBdSpSens(const int fd, const _stPortChSel *pstPortChSel, _stBdSpSens *pstBdSpSens)$/;"	f
PR1000_VEVENT_GetBdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetBdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetBdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_GetBdTmpSens(const int fd, const _stPortChSel *pstPortChSel, _stBdTmpSens *pstBdTmpSens)$/;"	f
PR1000_VEVENT_GetDdAttr	pr1000_func.c	/^int PR1000_VEVENT_GetDdAttr(const int fd, const _stPortChSel *pstPortChSel, _stDdAttr *pstDdAttr)$/;"	f
PR1000_VEVENT_GetDdLvSens	pr1000_func.c	/^int PR1000_VEVENT_GetDdLvSens(const int fd, const _stPortChSel *pstPortChSel, _stDdLvSens *pstDdLvSens)$/;"	f
PR1000_VEVENT_GetDdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetDdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetDdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_GetDdTmpSens(const int fd, const _stPortChSel *pstPortChSel, _stDdTmpSens *pstDdTmpSens)$/;"	f
PR1000_VEVENT_GetDetData	pr1000_func.c	/^int PR1000_VEVENT_GetDetData(const int fd, const _stPortChSel *pstPortChSel, const uint8_t startLine, const uint8_t lineCnt, uint64_t *pu64RetLineData)$/;"	f
PR1000_VEVENT_GetDfdAttr	pr1000_func.c	/^int PR1000_VEVENT_GetDfdAttr(const int fd, const _stPortChSel *pstPortChSel, _stDfdAttr *pstDfdAttr)$/;"	f
PR1000_VEVENT_GetDfdLvSens	pr1000_func.c	/^int PR1000_VEVENT_GetDfdLvSens(const int fd, const _stPortChSel *pstPortChSel, _stDfdLvSens *pstDfdLvSens)$/;"	f
PR1000_VEVENT_GetDfdSpSens	pr1000_func.c	/^int PR1000_VEVENT_GetDfdSpSens(const int fd, const _stPortChSel *pstPortChSel, _stDfdSpSens *pstDfdSpSens)$/;"	f
PR1000_VEVENT_GetDfdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetDfdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetDfdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_GetDfdTmpSens(const int fd, const _stPortChSel *pstPortChSel, _stDfdTmpSens *pstDfdTmpSens)$/;"	f
PR1000_VEVENT_GetMaskAttr	pr1000_func.c	/^int PR1000_VEVENT_GetMaskAttr(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, _stMaskCellAttr *pstMaskCellAttr)$/;"	f
PR1000_VEVENT_GetMaskData	pr1000_func.c	/^int PR1000_VEVENT_GetMaskData(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_vevent_mem_type maskType, const uint8_t startLine, const uint8_t lineCnt, uint32_t *pu32RetLineData)$/;"	f
PR1000_VEVENT_GetMdAttr	pr1000_func.c	/^int PR1000_VEVENT_GetMdAttr(const int fd, const _stPortChSel *pstPortChSel, _stMdAttr *pstMdAttr)$/;"	f
PR1000_VEVENT_GetMdLvSens	pr1000_func.c	/^int PR1000_VEVENT_GetMdLvSens(const int fd, const _stPortChSel *pstPortChSel, _stMdLvSens *pstMdLvSens)$/;"	f
PR1000_VEVENT_GetMdSpSens	pr1000_func.c	/^int PR1000_VEVENT_GetMdSpSens(const int fd, const _stPortChSel *pstPortChSel, _stMdSpSens *pstMdSpSens)$/;"	f
PR1000_VEVENT_GetMdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetMdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetMdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_GetMdTmpSens(const int fd, const _stPortChSel *pstPortChSel, _stMdTmpSens *pstMdTmpSens)$/;"	f
PR1000_VEVENT_GetMdVelocity	pr1000_func.c	/^int PR1000_VEVENT_GetMdVelocity(const int fd, const _stPortChSel *pstPortChSel, _stMdVelocity *pstMdVelocity)$/;"	f
PR1000_VEVENT_GetNdAttr	pr1000_func.c	/^int PR1000_VEVENT_GetNdAttr(const int fd, const _stPortChSel *pstPortChSel, _stNdAttr *pstNdAttr)$/;"	f
PR1000_VEVENT_GetNdLvSens	pr1000_func.c	/^int PR1000_VEVENT_GetNdLvSens(const int fd, const _stPortChSel *pstPortChSel, _stNdLvSens *pstNdLvSens)$/;"	f
PR1000_VEVENT_GetNdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetNdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetNdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_GetNdTmpSens(const int fd, const _stPortChSel *pstPortChSel, _stNdTmpSens *pstNdTmpSens)$/;"	f
PR1000_VEVENT_GetNovidAttr	pr1000_func.c	/^int PR1000_VEVENT_GetNovidAttr(const int fd, const _stPortChSel *pstPortChSel, _stNovidAttr *pstNovidAttr)$/;"	f
PR1000_VEVENT_GetNovidStatus	pr1000_func.c	/^int PR1000_VEVENT_GetNovidStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_GetVfdStatus	pr1000_func.c	/^int PR1000_VEVENT_GetVfdStatus(const int fd, const _stPortChSel *pstPortChSel, uint8_t *pStatus)$/;"	f
PR1000_VEVENT_LoadTable	pr1000_func.c	/^int PR1000_VEVENT_LoadTable(const int fd, const _stPortChSel *pstPortChSel, const uint8_t format, const uint8_t resol)$/;"	f
PR1000_VEVENT_MASKCOLOR_BLACK	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_BLACK,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_BLUE	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_BLUE = 0,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_CYAN	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_CYAN,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_GRAY	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_GRAY,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_MAGENTA	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_MAGENTA,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_PURPLE	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_PURPLE,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_RED	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_RED,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_MASKCOLOR_WHITE	pr1000_drvcommon.h	/^	PR1000_VEVENT_MASKCOLOR_WHITE,$/;"	e	enum:_pr1000_vevent_mask_color
PR1000_VEVENT_PrintDetData	pr1000_func.c	/^int PR1000_VEVENT_PrintDetData(const int fd, const uint8_t resol, const uint64_t *pData, const int lineCnt)$/;"	f
PR1000_VEVENT_ReadMaskFormat	pr1000_func.c	/^int PR1000_VEVENT_ReadMaskFormat(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_vevent_mem_type maskType, uint32_t *pFormat)$/;"	f
PR1000_VEVENT_SetBdAttr	pr1000_func.c	/^int PR1000_VEVENT_SetBdAttr(const int fd, const _stPortChSel *pstPortChSel, const _stBdAttr *pstBdAttr)$/;"	f
PR1000_VEVENT_SetBdLvSens	pr1000_func.c	/^int PR1000_VEVENT_SetBdLvSens(const int fd, const _stPortChSel *pstPortChSel, const _stBdLvSens *pstBdLvSens)$/;"	f
PR1000_VEVENT_SetBdSpSens	pr1000_func.c	/^int PR1000_VEVENT_SetBdSpSens(const int fd, const _stPortChSel *pstPortChSel, const _stBdSpSens *pstBdSpSens)$/;"	f
PR1000_VEVENT_SetBdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_SetBdTmpSens(const int fd, const _stPortChSel *pstPortChSel, const _stBdTmpSens *pstBdTmpSens)$/;"	f
PR1000_VEVENT_SetDdAttr	pr1000_func.c	/^int PR1000_VEVENT_SetDdAttr(const int fd, const _stPortChSel *pstPortChSel, const _stDdAttr *pstDdAttr)$/;"	f
PR1000_VEVENT_SetDdLvSens	pr1000_func.c	/^int PR1000_VEVENT_SetDdLvSens(const int fd, const _stPortChSel *pstPortChSel, const _stDdLvSens *pstDdLvSens)$/;"	f
PR1000_VEVENT_SetDdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_SetDdTmpSens(const int fd, const _stPortChSel *pstPortChSel, const _stDdTmpSens *pstDdTmpSens)$/;"	f
PR1000_VEVENT_SetDfdAttr	pr1000_func.c	/^int PR1000_VEVENT_SetDfdAttr(const int fd, const _stPortChSel *pstPortChSel, const _stDfdAttr *pstDfdAttr)$/;"	f
PR1000_VEVENT_SetDfdLvSens	pr1000_func.c	/^int PR1000_VEVENT_SetDfdLvSens(const int fd, const _stPortChSel *pstPortChSel, const _stDfdLvSens *pstDfdLvSens)$/;"	f
PR1000_VEVENT_SetDfdSpSens	pr1000_func.c	/^int PR1000_VEVENT_SetDfdSpSens(const int fd, const _stPortChSel *pstPortChSel, const _stDfdSpSens *pstDfdSpSens)$/;"	f
PR1000_VEVENT_SetDfdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_SetDfdTmpSens(const int fd, const _stPortChSel *pstPortChSel, const _stDfdTmpSens *pstDfdTmpSens)$/;"	f
PR1000_VEVENT_SetDisplayCellFormat	pr1000_func.c	/^int PR1000_VEVENT_SetDisplayCellFormat(const int fd, const _stPortChSel *pstPortChSel, const _stVEVENTDisplayAttr *pstVeventDisplayAttr)$/;"	f
PR1000_VEVENT_SetMaskAttr	pr1000_func.c	/^int PR1000_VEVENT_SetMaskAttr(const int fd, const _stPortChSel *pstPortChSel, const uint8_t resol, const _stMaskCellAttr *pstMaskCellAttr)$/;"	f
PR1000_VEVENT_SetMaskData	pr1000_func.c	/^int PR1000_VEVENT_SetMaskData(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_vevent_mem_type maskType, const uint8_t startLine, const uint8_t lineCnt, const uint32_t *pu32MaskLineData)$/;"	f
PR1000_VEVENT_SetMdAttr	pr1000_func.c	/^int PR1000_VEVENT_SetMdAttr(const int fd, const _stPortChSel *pstPortChSel, const _stMdAttr *pstMdAttr)$/;"	f
PR1000_VEVENT_SetMdLvSens	pr1000_func.c	/^int PR1000_VEVENT_SetMdLvSens(const int fd, const _stPortChSel *pstPortChSel, const _stMdLvSens *pstMdLvSens)$/;"	f
PR1000_VEVENT_SetMdSpSens	pr1000_func.c	/^int PR1000_VEVENT_SetMdSpSens(const int fd, const _stPortChSel *pstPortChSel, const _stMdSpSens *pstMdSpSens)$/;"	f
PR1000_VEVENT_SetMdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_SetMdTmpSens(const int fd, const _stPortChSel *pstPortChSel, const _stMdTmpSens *pstMdTmpSens)$/;"	f
PR1000_VEVENT_SetMdVelocity	pr1000_func.c	/^int PR1000_VEVENT_SetMdVelocity(const int fd, const _stPortChSel *pstPortChSel, const _stMdVelocity *pstMdVelocity)$/;"	f
PR1000_VEVENT_SetNdAttr	pr1000_func.c	/^int PR1000_VEVENT_SetNdAttr(const int fd, const _stPortChSel *pstPortChSel, const _stNdAttr *pstNdAttr)$/;"	f
PR1000_VEVENT_SetNdLvSens	pr1000_func.c	/^int PR1000_VEVENT_SetNdLvSens(const int fd, const _stPortChSel *pstPortChSel, const _stNdLvSens *pstNdLvSens)$/;"	f
PR1000_VEVENT_SetNdTmpSens	pr1000_func.c	/^int PR1000_VEVENT_SetNdTmpSens(const int fd, const _stPortChSel *pstPortChSel, const _stNdTmpSens *pstNdTmpSens)$/;"	f
PR1000_VEVENT_SetNovidAttr	pr1000_func.c	/^int PR1000_VEVENT_SetNovidAttr(const int fd, const _stPortChSel *pstPortChSel, const _stNovidAttr *pstNovidAttr)$/;"	f
PR1000_VEVENT_WriteMaskFormat	pr1000_func.c	/^int PR1000_VEVENT_WriteMaskFormat(const int fd, const _stPortChSel *pstPortChSel, const enum _pr1000_vevent_mem_type maskType, const uint32_t *pFormat)$/;"	f
PR1000_VIDOUTF_16BIT	pr1000_user_config.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_16BIT=0;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_16BIT	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_VIDOUTF_16BIT=1;  \/\/0:8bit, 1:16bit$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_BT656=1;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_BT656	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_VIDOUTF_BT656=0;  \/\/0:16bit bt1120, 1:8bit bt656$/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VIDOUTF_CLKPHASE[4][4] = $/;"	v
PR1000_VIDOUTF_CLKPHASE	pr1000_user_config_sample_nonLinux.c	/^const int PR1000_VIDOUTF_CLKPHASE[1][4] = $/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=0;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=2;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=2;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=2;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=0;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=1;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_MUX_CH	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_VIDOUTF_MUX_CH=0;  \/\/0:mux_1ch, 1:mux_2ch, 2:mux_4ch$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RATE=1;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RATE=1;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RATE=1;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RATE=1;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RATE	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_VIDOUTF_RATE=0;  \/\/0:148.5M\/297M, 1:148.5M, 2:144M, 3:108M$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=1;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=1;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=1;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VIDOUTF_RESOL	pr1000_user_config_sample_nonLinux.c	/^const uint8_t PR1000_VIDOUTF_RESOL=0;  \/\/0:1080p(720p60), 1:720p, 2:sd960, 3:sd720$/;"	v
PR1000_VID_GetBright	pr1000_func.c	/^int PR1000_VID_GetBright(const int fd, const _stPortChSel *pstPortChSel, _stBright *pstBright)$/;"	f
PR1000_VID_GetChnAttr	pr1000_func.c	/^int PR1000_VID_GetChnAttr(const int fd, const _stPortChSel *pstPortChSel, _stChnAttr *pstChnAttr)$/;"	f
PR1000_VID_GetContrast	pr1000_func.c	/^int PR1000_VID_GetContrast(const int fd, const _stPortChSel *pstPortChSel, _stContrast *pstContrast)$/;"	f
PR1000_VID_GetCscAttr	pr1000_func.c	/^int PR1000_VID_GetCscAttr(const int fd, const _stPortChSel *pstPortChSel, _stCscAttr *pstCscAttr)$/;"	f
PR1000_VID_GetHue	pr1000_func.c	/^int PR1000_VID_GetHue(const int fd, const _stPortChSel *pstPortChSel, _stHue *pstHue)$/;"	f
PR1000_VID_GetSaturation	pr1000_func.c	/^int PR1000_VID_GetSaturation(const int fd, const _stPortChSel *pstPortChSel, _stSaturation *pstSaturation)$/;"	f
PR1000_VID_GetSharpness	pr1000_func.c	/^int PR1000_VID_GetSharpness(const int fd, const _stPortChSel *pstPortChSel, _stSharpness *pstSharpness)$/;"	f
PR1000_VID_HideEQingDisplay	pr1000_func.c	/^int PR1000_VID_HideEQingDisplay(const int fd, const _stPortChSel *pstPortChSel)$/;"	f
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX1CH_CHDEF	pr1000_user_config_sample_nonLinux.c	/^const int PR1000_VID_INOUT_MUX1CH_CHDEF[2][1][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX2CH_CHDEF	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX2CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_INOUT_MUX4CH_CHDEF	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const int PR1000_VID_INOUT_MUX4CH_CHDEF[2][4][4][4][2] = $/;"	v
PR1000_VID_LoadTable	pr1000_func.c	/^int PR1000_VID_LoadTable(const int fd, const _stPortChSel *pstPortChSel, const uint8_t bBootTime, const uint8_t format, const uint8_t resol)$/;"	f
PR1000_VID_OUTF_MUX_1CH	pr1000_drvcommon.h	/^	PR1000_VID_OUTF_MUX_1CH = 0,$/;"	e	enum:_pr1000_vid_outformat_mux_type
PR1000_VID_OUTF_MUX_2CH	pr1000_drvcommon.h	/^	PR1000_VID_OUTF_MUX_2CH,$/;"	e	enum:_pr1000_vid_outformat_mux_type
PR1000_VID_OUTF_MUX_4CH	pr1000_drvcommon.h	/^	PR1000_VID_OUTF_MUX_4CH$/;"	e	enum:_pr1000_vid_outformat_mux_type
PR1000_VID_OUTF_RESOL_HD1080p	pr1000_drvcommon.h	/^        PR1000_VID_OUTF_RESOL_HD1080p = 0, \/\/1080p30,1080p25,720p60,720p50$/;"	e	enum:_pr1000_vid_outformat_resol_type
PR1000_VID_OUTF_RESOL_HD720p	pr1000_drvcommon.h	/^        PR1000_VID_OUTF_RESOL_HD720p = 1,  \/\/720p30,720p25$/;"	e	enum:_pr1000_vid_outformat_resol_type
PR1000_VID_OUTF_RESOL_SD720H	pr1000_drvcommon.h	/^        PR1000_VID_OUTF_RESOL_SD720H = 3  \/\/480i60, 480i50$/;"	e	enum:_pr1000_vid_outformat_resol_type
PR1000_VID_OUTF_RESOL_SD960H	pr1000_drvcommon.h	/^        PR1000_VID_OUTF_RESOL_SD960H = 2,  \/\/960i60, 960i50$/;"	e	enum:_pr1000_vid_outformat_resol_type
PR1000_VID_OUTRATE_BYPASS	pr1000_drvcommon.h	/^	PR1000_VID_OUTRATE_BYPASS = 0,$/;"	e	enum:_pr1000_vid_outrate_mode
PR1000_VID_OUTRATE_INT_EVEN	pr1000_drvcommon.h	/^	PR1000_VID_OUTRATE_INT_EVEN = 3$/;"	e	enum:_pr1000_vid_outrate_mode
PR1000_VID_OUTRATE_INT_ODD	pr1000_drvcommon.h	/^	PR1000_VID_OUTRATE_INT_ODD = 2,$/;"	e	enum:_pr1000_vid_outrate_mode
PR1000_VID_OUTRATE_PROGRESSIVE	pr1000_drvcommon.h	/^	PR1000_VID_OUTRATE_PROGRESSIVE = 1,$/;"	e	enum:_pr1000_vid_outrate_mode
PR1000_VID_SetBlank	pr1000_func.c	/^int PR1000_VID_SetBlank(const int fd, const _stPortChSel *pstPortChSel, const int bEnable, const int blankColor)$/;"	f
PR1000_VID_SetBright	pr1000_func.c	/^int PR1000_VID_SetBright(const int fd, const _stPortChSel *pstPortChSel, const _stBright *pstBright)$/;"	f
PR1000_VID_SetChnAttr	pr1000_func.c	/^int PR1000_VID_SetChnAttr(const int fd, const _stPortChSel *pstPortChSel, const _stChnAttr *pstChnAttr)$/;"	f
PR1000_VID_SetContrast	pr1000_func.c	/^int PR1000_VID_SetContrast(const int fd, const _stPortChSel *pstPortChSel, const _stContrast *pstContrast)$/;"	f
PR1000_VID_SetCscAttr	pr1000_func.c	/^int PR1000_VID_SetCscAttr(const int fd, const _stPortChSel *pstPortChSel, const _stCscAttr *pstCscAttr)$/;"	f
PR1000_VID_SetHue	pr1000_func.c	/^int PR1000_VID_SetHue(const int fd, const _stPortChSel *pstPortChSel, const _stHue *pstHue)$/;"	f
PR1000_VID_SetOutChn	pr1000_func.c	/^int PR1000_VID_SetOutChn(const int fd, const uint8_t chip, const _stOutChn *pstOutChn)$/;"	f
PR1000_VID_SetOutFormatAttr	pr1000_func.c	/^int PR1000_VID_SetOutFormatAttr(const int fd, const _stOutFormatAttr *pstOutFormatAttr)$/;"	f
PR1000_VID_SetSaturation	pr1000_func.c	/^int PR1000_VID_SetSaturation(const int fd, const _stPortChSel *pstPortChSel, const _stSaturation *pstSaturation)$/;"	f
PR1000_VID_SetSharpness	pr1000_func.c	/^int PR1000_VID_SetSharpness(const int fd, const _stPortChSel *pstPortChSel, const _stSharpness *pstSharpness)$/;"	f
PR1000_VMASK_BD	pr1000_drvcommon.h	/^	PR1000_VMASK_BD = 120,$/;"	e	enum:_pr1000_vevent_mem_type
PR1000_VMASK_MD	pr1000_drvcommon.h	/^	PR1000_VMASK_MD = 96,$/;"	e	enum:_pr1000_vevent_mem_type
PR1000_VMASK_PZ	pr1000_drvcommon.h	/^	PR1000_VMASK_PZ = 144,$/;"	e	enum:_pr1000_vevent_mem_type
PR1000_VMD_DET	pr1000_drvcommon.h	/^	PR1000_VMD_DET = 0,$/;"	e	enum:_pr1000_vevent_mem_type
PR_ERROR_CODE	pr1000_drvcommon.h	74;"	d
PR_ERROR_CODE_APP	pr1000_drvcommon.h	75;"	d
PR_ERROR_CODE_DRV	pr1000_drvcommon.h	77;"	d
PR_ERROR_CODE_LIB	pr1000_drvcommon.h	76;"	d
PR_ERROR_CODE_TYPE_APP	pr1000_drvcommon.h	70;"	d
PR_ERROR_CODE_TYPE_DRV	pr1000_drvcommon.h	72;"	d
PR_ERROR_CODE_TYPE_LIB	pr1000_drvcommon.h	71;"	d
PR_ERR_BUSY	pr1000_drvcommon.h	/^	PR_ERR_BUSY = 0x00F,$/;"	e	enum:__anon29
PR_ERR_CODE_E	pr1000_drvcommon.h	/^}PR_ERR_CODE_E;$/;"	t	typeref:enum:__anon29
PR_ERR_COMMON	pr1000_drvcommon.h	/^	PR_ERR_COMMON = 0x01,$/;"	e	enum:__anon28
PR_ERR_EMPTY_BUF	pr1000_drvcommon.h	/^	PR_ERR_EMPTY_BUF = 0x00D,$/;"	e	enum:__anon29
PR_ERR_EVENT	pr1000_drvcommon.h	/^	PR_ERR_EVENT = 0x04,$/;"	e	enum:__anon28
PR_ERR_EXIST	pr1000_drvcommon.h	/^	PR_ERR_EXIST = 0x004,$/;"	e	enum:__anon29
PR_ERR_FULL_BUF	pr1000_drvcommon.h	/^	PR_ERR_FULL_BUF = 0x00C,$/;"	e	enum:__anon29
PR_ERR_GET_QUEUE	pr1000_drvcommon.h	/^	PR_ERR_GET_QUEUE = 0x015,$/;"	e	enum:__anon29
PR_ERR_HANDLE	pr1000_drvcommon.h	/^	PR_ERR_HANDLE = 0x001,$/;"	e	enum:__anon29
PR_ERR_ILLEGAL_PARAM	pr1000_drvcommon.h	/^	PR_ERR_ILLEGAL_PARAM = 0x003,$/;"	e	enum:__anon29
PR_ERR_INVALID_CHNID	pr1000_drvcommon.h	/^	PR_ERR_INVALID_CHNID = 0x011,$/;"	e	enum:__anon29
PR_ERR_INVALID_DEVID	pr1000_drvcommon.h	/^	PR_ERR_INVALID_DEVID = 0x010,$/;"	e	enum:__anon29
PR_ERR_INVALID_DRVFD	pr1000_drvcommon.h	/^	PR_ERR_INVALID_DRVFD = 0x002,$/;"	e	enum:__anon29
PR_ERR_LOCK	pr1000_drvcommon.h	/^	PR_ERR_LOCK = 0x012,$/;"	e	enum:__anon29
PR_ERR_MODULE_E	pr1000_drvcommon.h	/^}PR_ERR_MODULE_E;$/;"	t	typeref:enum:__anon28
PR_ERR_NOT_CONFIG	pr1000_drvcommon.h	/^	PR_ERR_NOT_CONFIG = 0x009,$/;"	e	enum:__anon29
PR_ERR_NOT_PERM	pr1000_drvcommon.h	/^	PR_ERR_NOT_PERM = 0x007,$/;"	e	enum:__anon29
PR_ERR_NOT_READY	pr1000_drvcommon.h	/^	PR_ERR_NOT_READY = 0x00E,$/;"	e	enum:__anon29
PR_ERR_NOT_SUPPORT	pr1000_drvcommon.h	/^	PR_ERR_NOT_SUPPORT = 0x008,$/;"	e	enum:__anon29
PR_ERR_NO_BUF	pr1000_drvcommon.h	/^	PR_ERR_NO_BUF = 0x00B,$/;"	e	enum:__anon29
PR_ERR_NO_MEM	pr1000_drvcommon.h	/^	PR_ERR_NO_MEM = 0x00A,$/;"	e	enum:__anon29
PR_ERR_NULL_PTR	pr1000_drvcommon.h	/^	PR_ERR_NULL_PTR = 0x006,$/;"	e	enum:__anon29
PR_ERR_PTZ	pr1000_drvcommon.h	/^	PR_ERR_PTZ = 0x03,$/;"	e	enum:__anon28
PR_ERR_PUT_QUEUE	pr1000_drvcommon.h	/^	PR_ERR_PUT_QUEUE = 0x014,$/;"	e	enum:__anon29
PR_ERR_UNEXIST	pr1000_drvcommon.h	/^	PR_ERR_UNEXIST = 0x005,$/;"	e	enum:__anon29
PR_ERR_UNLOCK	pr1000_drvcommon.h	/^	PR_ERR_UNLOCK = 0x013,$/;"	e	enum:__anon29
PR_ERR_VDEC	pr1000_drvcommon.h	/^	PR_ERR_VDEC = 0x02,$/;"	e	enum:__anon28
PR_IOC_MAGIC	pr1000_drvcommon.h	738;"	d
PR_IOC_RESET	pr1000_drvcommon.h	740;"	d
PR_IOG_AUD_AIGAIN	pr1000_drvcommon.h	766;"	d
PR_IOG_AUD_DACGAIN	pr1000_drvcommon.h	768;"	d
PR_IOG_AUD_DETATTR	pr1000_drvcommon.h	781;"	d
PR_IOG_AUD_MIXMODE	pr1000_drvcommon.h	770;"	d
PR_IOG_AUD_PBATTR	pr1000_drvcommon.h	774;"	d
PR_IOG_AUD_RECATTR	pr1000_drvcommon.h	772;"	d
PR_IOG_DET_CEQINFO	pr1000_drvcommon.h	859;"	d
PR_IOG_EVENT_ADABS_STATUS	pr1000_drvcommon.h	841;"	d
PR_IOG_EVENT_ADDIFF_STATUS	pr1000_drvcommon.h	842;"	d
PR_IOG_EVENT_ADMUTE_STATUS	pr1000_drvcommon.h	840;"	d
PR_IOG_EVENT_BDATTR	pr1000_drvcommon.h	794;"	d
PR_IOG_EVENT_BD_LVSENS	pr1000_drvcommon.h	796;"	d
PR_IOG_EVENT_BD_SPSENS	pr1000_drvcommon.h	798;"	d
PR_IOG_EVENT_BD_STATUS	pr1000_drvcommon.h	836;"	d
PR_IOG_EVENT_BD_TMPSENS	pr1000_drvcommon.h	800;"	d
PR_IOG_EVENT_DDATTR	pr1000_drvcommon.h	808;"	d
PR_IOG_EVENT_DD_LVSENS	pr1000_drvcommon.h	810;"	d
PR_IOG_EVENT_DD_STATUS	pr1000_drvcommon.h	838;"	d
PR_IOG_EVENT_DD_TMPSENS	pr1000_drvcommon.h	812;"	d
PR_IOG_EVENT_DETDATA	pr1000_drvcommon.h	829;"	d
PR_IOG_EVENT_DET_STD	pr1000_drvcommon.h	832;"	d
PR_IOG_EVENT_DFDATTR	pr1000_drvcommon.h	814;"	d
PR_IOG_EVENT_DFD_LVSENS	pr1000_drvcommon.h	816;"	d
PR_IOG_EVENT_DFD_SPSENS	pr1000_drvcommon.h	818;"	d
PR_IOG_EVENT_DFD_STATUS	pr1000_drvcommon.h	839;"	d
PR_IOG_EVENT_DFD_TMPSENS	pr1000_drvcommon.h	820;"	d
PR_IOG_EVENT_DISPATTR	pr1000_drvcommon.h	827;"	d
PR_IOG_EVENT_MASK	pr1000_drvcommon.h	825;"	d
PR_IOG_EVENT_MASKCELL_SIZE	pr1000_drvcommon.h	823;"	d
PR_IOG_EVENT_MDATTR	pr1000_drvcommon.h	784;"	d
PR_IOG_EVENT_MD_LVSENS	pr1000_drvcommon.h	786;"	d
PR_IOG_EVENT_MD_SPSENS	pr1000_drvcommon.h	788;"	d
PR_IOG_EVENT_MD_STATUS	pr1000_drvcommon.h	835;"	d
PR_IOG_EVENT_MD_TMPSENS	pr1000_drvcommon.h	790;"	d
PR_IOG_EVENT_MD_VELOCITY	pr1000_drvcommon.h	792;"	d
PR_IOG_EVENT_NDATTR	pr1000_drvcommon.h	802;"	d
PR_IOG_EVENT_ND_LVSENS	pr1000_drvcommon.h	804;"	d
PR_IOG_EVENT_ND_STATUS	pr1000_drvcommon.h	837;"	d
PR_IOG_EVENT_ND_TMPSENS	pr1000_drvcommon.h	806;"	d
PR_IOG_EVENT_NOVID_STATUS	pr1000_drvcommon.h	833;"	d
PR_IOG_EVENT_VFD_STATUS	pr1000_drvcommon.h	834;"	d
PR_IOG_PTZ_RECV_RXDATA	pr1000_drvcommon.h	855;"	d
PR_IOG_PTZ_RECV_SIZE	pr1000_drvcommon.h	854;"	d
PR_IOG_PTZ_RXPARAM	pr1000_drvcommon.h	848;"	d
PR_IOG_PTZ_TXPARAM	pr1000_drvcommon.h	846;"	d
PR_IOG_PWDOWN	pr1000_drvcommon.h	746;"	d
PR_IOG_QUERY_WQPOLL	pr1000_drvcommon.h	831;"	d
PR_IOG_REGREAD	pr1000_drvcommon.h	742;"	d
PR_IOG_RXMODE	pr1000_drvcommon.h	744;"	d
PR_IOG_VID_BRIGHT	pr1000_drvcommon.h	755;"	d
PR_IOG_VID_CHNATTR	pr1000_drvcommon.h	749;"	d
PR_IOG_VID_CONTRAST	pr1000_drvcommon.h	753;"	d
PR_IOG_VID_CSCATTR	pr1000_drvcommon.h	751;"	d
PR_IOG_VID_HUE	pr1000_drvcommon.h	759;"	d
PR_IOG_VID_OUTFORMATATTR	pr1000_drvcommon.h	762;"	d
PR_IOG_VID_SATURATION	pr1000_drvcommon.h	757;"	d
PR_IOG_VID_SHARPNESS	pr1000_drvcommon.h	761;"	d
PR_IOS_AUD_AIGAIN	pr1000_drvcommon.h	765;"	d
PR_IOS_AUD_DACCHN	pr1000_drvcommon.h	779;"	d
PR_IOS_AUD_DACGAIN	pr1000_drvcommon.h	767;"	d
PR_IOS_AUD_DACMUTE	pr1000_drvcommon.h	778;"	d
PR_IOS_AUD_DETATTR	pr1000_drvcommon.h	780;"	d
PR_IOS_AUD_MIXMODE	pr1000_drvcommon.h	769;"	d
PR_IOS_AUD_MIXMUTE	pr1000_drvcommon.h	776;"	d
PR_IOS_AUD_PBATTR	pr1000_drvcommon.h	773;"	d
PR_IOS_AUD_RECATTR	pr1000_drvcommon.h	771;"	d
PR_IOS_AUD_RECMUTE	pr1000_drvcommon.h	775;"	d
PR_IOS_AUD_VOCMUTE	pr1000_drvcommon.h	777;"	d
PR_IOS_EVENT_BDATTR	pr1000_drvcommon.h	793;"	d
PR_IOS_EVENT_BD_LVSENS	pr1000_drvcommon.h	795;"	d
PR_IOS_EVENT_BD_SPSENS	pr1000_drvcommon.h	797;"	d
PR_IOS_EVENT_BD_TMPSENS	pr1000_drvcommon.h	799;"	d
PR_IOS_EVENT_CLEAR_MASK	pr1000_drvcommon.h	828;"	d
PR_IOS_EVENT_DDATTR	pr1000_drvcommon.h	807;"	d
PR_IOS_EVENT_DD_LVSENS	pr1000_drvcommon.h	809;"	d
PR_IOS_EVENT_DD_TMPSENS	pr1000_drvcommon.h	811;"	d
PR_IOS_EVENT_DFDATTR	pr1000_drvcommon.h	813;"	d
PR_IOS_EVENT_DFD_LVSENS	pr1000_drvcommon.h	815;"	d
PR_IOS_EVENT_DFD_SPSENS	pr1000_drvcommon.h	817;"	d
PR_IOS_EVENT_DFD_TMPSENS	pr1000_drvcommon.h	819;"	d
PR_IOS_EVENT_DISPATTR	pr1000_drvcommon.h	826;"	d
PR_IOS_EVENT_MASK	pr1000_drvcommon.h	824;"	d
PR_IOS_EVENT_MASKCELL_SIZE	pr1000_drvcommon.h	822;"	d
PR_IOS_EVENT_MDATTR	pr1000_drvcommon.h	783;"	d
PR_IOS_EVENT_MD_LVSENS	pr1000_drvcommon.h	785;"	d
PR_IOS_EVENT_MD_SPSENS	pr1000_drvcommon.h	787;"	d
PR_IOS_EVENT_MD_TMPSENS	pr1000_drvcommon.h	789;"	d
PR_IOS_EVENT_MD_VELOCITY	pr1000_drvcommon.h	791;"	d
PR_IOS_EVENT_NDATTR	pr1000_drvcommon.h	801;"	d
PR_IOS_EVENT_ND_LVSENS	pr1000_drvcommon.h	803;"	d
PR_IOS_EVENT_ND_TMPSENS	pr1000_drvcommon.h	805;"	d
PR_IOS_PTZ_HDT_CHGOLD_CMD	pr1000_drvcommon.h	857;"	d
PR_IOS_PTZ_INIT	pr1000_drvcommon.h	844;"	d
PR_IOS_PTZ_RXPARAM	pr1000_drvcommon.h	847;"	d
PR_IOS_PTZ_RX_PAT_INFO	pr1000_drvcommon.h	850;"	d
PR_IOS_PTZ_SEND_TXDATA	pr1000_drvcommon.h	853;"	d
PR_IOS_PTZ_START_RX	pr1000_drvcommon.h	851;"	d
PR_IOS_PTZ_START_TX	pr1000_drvcommon.h	852;"	d
PR_IOS_PTZ_TXPARAM	pr1000_drvcommon.h	845;"	d
PR_IOS_PTZ_TX_PAT_INFO	pr1000_drvcommon.h	849;"	d
PR_IOS_PWDOWN	pr1000_drvcommon.h	745;"	d
PR_IOS_REGWRITE	pr1000_drvcommon.h	741;"	d
PR_IOS_RXMODE	pr1000_drvcommon.h	743;"	d
PR_IOS_VID_BRIGHT	pr1000_drvcommon.h	754;"	d
PR_IOS_VID_CHNATTR	pr1000_drvcommon.h	748;"	d
PR_IOS_VID_CONTRAST	pr1000_drvcommon.h	752;"	d
PR_IOS_VID_CSCATTR	pr1000_drvcommon.h	750;"	d
PR_IOS_VID_HUE	pr1000_drvcommon.h	758;"	d
PR_IOS_VID_OUTCHN	pr1000_drvcommon.h	763;"	d
PR_IOS_VID_SATURATION	pr1000_drvcommon.h	756;"	d
PR_IOS_VID_SHARPNESS	pr1000_drvcommon.h	760;"	d
PTZ_STDFORMAT_CHECK_CNT	pr1000.h	493;"	d
PWD	Makefile	/^PWD=`pwd`$/;"	m
Pr1000ProcLogOpen	pr1000.c	/^static int Pr1000ProcLogOpen(struct inode *inode, struct file *file)$/;"	f	file:
Pr1000ProcLogRelease	pr1000.c	/^static int Pr1000ProcLogRelease(struct inode *inode, struct file *file)$/;"	f	file:
Pr1000ProcOpen	pr1000.c	/^static int Pr1000ProcOpen(struct inode *inode, struct file *file)$/;"	f	file:
Pr1000ProcRdRegDumpFunc	pr1000.c	/^static ssize_t Pr1000ProcRdRegDumpFunc(struct file *pFile, char __user *buffer, size_t size, loff_t *dat)$/;"	f	file:
Pr1000ProcRdRegWriteFunc	pr1000.c	/^static ssize_t Pr1000ProcRdRegWriteFunc(struct file *pFile, char __user *buffer, size_t size, loff_t *dat)$/;"	f	file:
Pr1000ProcRelease	pr1000.c	/^static int Pr1000ProcRelease(struct inode *inode, struct file *file)$/;"	f	file:
Pr1000ProcWrRegDumpFunc	pr1000.c	/^static ssize_t Pr1000ProcWrRegDumpFunc(struct file *pFile, const char __user *pBuffer, size_t count, loff_t *pData)$/;"	f	file:
Pr1000ProcWrRegWriteFunc	pr1000.c	/^static ssize_t Pr1000ProcWrRegWriteFunc(struct file *pFile, const char __user *pBuffer, size_t count, loff_t *pData)$/;"	f	file:
Pr1000SeqLogShow	pr1000.c	/^static int Pr1000SeqLogShow(struct seq_file *s, void *v)$/;"	f	file:
Pr1000SeqShow	pr1000.c	/^static int Pr1000SeqShow(struct seq_file *s, void *v)$/;"	f	file:
Print	pr1000.h	569;"	d
Print	pr1000.h	658;"	d
Print	pr1000.h	695;"	d
Print	pr1000.h	702;"	d
PrintString	pr1000.h	612;"	d
PrintString	pr1000.h	665;"	d
PrintString	pr1000.h	698;"	d
PrintString	pr1000.h	709;"	d
PxPsPr1000.VER	Makefile	/^PxPsPr1000.VER=0_17$/;"	m
SGLIB_DEFINE_QUEUE_FUNCTIONS	drv_cq.h	260;"	d
SGLIB_DEFINE_QUEUE_PROTOTYPES	drv_cq.h	248;"	d
SGLIB_QUEUE_ADD	drv_cq.h	220;"	d
SGLIB_QUEUE_ADD_NEXT	drv_cq.h	216;"	d
SGLIB_QUEUE_DELETE	drv_cq.h	228;"	d
SGLIB_QUEUE_DELETE_FIRST	drv_cq.h	224;"	d
SGLIB_QUEUE_FIRST_ELEMENT	drv_cq.h	215;"	d
SGLIB_QUEUE_INIT	drv_cq.h	212;"	d
SGLIB_QUEUE_IS_EMPTY	drv_cq.h	213;"	d
SGLIB_QUEUE_IS_FULL	drv_cq.h	214;"	d
SGLIB_QUEUE_LEN	drv_cq.h	232;"	d
SPINLOCK_T	pr1000.h	/^typedef spinlock_t SPINLOCK_T;$/;"	t
SPINLOCK_T	pr1000.h	/^typedef volatile int SPINLOCK_T;$/;"	t
SPIN_LOCK_INIT	pr1000.h	48;"	d
SPIN_LOCK_INIT	pr1000.h	71;"	d
SPIN_LOCK_IRQSAVE	pr1000.h	49;"	d
SPIN_LOCK_IRQSAVE	pr1000.h	72;"	d
SPIN_UNLOCK_IRQRESTORE	pr1000.h	50;"	d
SPIN_UNLOCK_IRQRESTORE	pr1000.h	73;"	d
START	pr1000.h	27;"	d
START	pr1000.h	28;"	d
STOP	pr1000.h	29;"	d
STOP	pr1000.h	30;"	d
SUPPORT_AUTODETECT_STDFORMAT	pr1000.h	10;"	d
SUPPORT_DbgPrint	pr1000.h	8;"	d
SUPPORT_HIDE_EQING_DISPLAY	pr1000.h	12;"	d
SUPPORT_LOGMEM_PRINT	pr1000.h	6;"	d
SUPPORT_PROC_SYSTEM	pr1000.h	52;"	d
SUPPORT_PROC_SYSTEM	pr1000.h	75;"	d
SetCPUExternalInterrupt	pr1000_user_config.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^int SetCPUExternalInterrupt(void)$/;"	f
SetCPUExternalInterrupt	pr1000_user_config_sample_nonLinux.c	/^int SetCPUExternalInterrupt(void)$/;"	f
TEST_AKEY	pr1000_ptz_table.h	40;"	d
TRUE	pr1000.h	19;"	d
TRUE	pr1000.h	20;"	d
WAKE_UP_INTERRUPTIBLE	pr1000.h	46;"	d
WAKE_UP_INTERRUPTIBLE	pr1000.h	69;"	d
ZALLOC	pr1000.h	53;"	d
_CLEAR_BIT	pr1000.h	44;"	d
_CLEAR_BIT	pr1000.h	67;"	d
_GPIO_I2C_H	gpio_i2c.h	3;"	d
_IO	pr1000_drvcommon.h	732;"	d
_PR1000_CEQ_TABLE_EST_HD	pr1000_table.h	/^}_PR1000_CEQ_TABLE_EST_HD;$/;"	t	typeref:struct:__anon103
_PR1000_CEQ_TABLE_EST_HD	pr1000_table.h	/^}_PR1000_CEQ_TABLE_EST_HD;$/;"	t	typeref:struct:__anon113
_PR1000_CEQ_TABLE_EST_SD	pr1000_table.h	/^}_PR1000_CEQ_TABLE_EST_SD;$/;"	t	typeref:struct:__anon102
_PR1000_CEQ_TABLE_EST_SD	pr1000_table.h	/^}_PR1000_CEQ_TABLE_EST_SD;$/;"	t	typeref:struct:__anon112
_PR1000_DET_HPERIOD	pr1000.h	/^enum _PR1000_DET_HPERIOD {$/;"	g
_PR1000_DET_IFMT_REF	pr1000_drvcommon.h	/^enum _PR1000_DET_IFMT_REF {$/;"	g
_PR1000_DET_IFMT_RES	pr1000_drvcommon.h	/^enum _PR1000_DET_IFMT_RES {$/;"	g
_PR1000_DET_IFMT_STD	pr1000_drvcommon.h	/^enum _PR1000_DET_IFMT_STD {$/;"	g
_PR1000_REG_TABLE_COMMON	pr1000_table.h	/^}_PR1000_REG_TABLE_COMMON;$/;"	t	typeref:struct:__anon104
_PR1000_REG_TABLE_COMMON	pr1000_table.h	/^}_PR1000_REG_TABLE_COMMON;$/;"	t	typeref:struct:__anon94
_PR1000_REG_TABLE_PTZ_HD	pr1000_table.h	/^}_PR1000_REG_TABLE_PTZ_HD;$/;"	t	typeref:struct:__anon109
_PR1000_REG_TABLE_PTZ_HD	pr1000_table.h	/^}_PR1000_REG_TABLE_PTZ_HD;$/;"	t	typeref:struct:__anon99
_PR1000_REG_TABLE_PTZ_SD	pr1000_table.h	/^}_PR1000_REG_TABLE_PTZ_SD;$/;"	t	typeref:struct:__anon108
_PR1000_REG_TABLE_PTZ_SD	pr1000_table.h	/^}_PR1000_REG_TABLE_PTZ_SD;$/;"	t	typeref:struct:__anon98
_PR1000_REG_TABLE_VDEC_HD	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_HD;$/;"	t	typeref:struct:__anon106
_PR1000_REG_TABLE_VDEC_HD	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_HD;$/;"	t	typeref:struct:__anon96
_PR1000_REG_TABLE_VDEC_HD_EXTEND	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_HD_EXTEND;$/;"	t	typeref:struct:__anon107
_PR1000_REG_TABLE_VDEC_HD_EXTEND	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_HD_EXTEND;$/;"	t	typeref:struct:__anon97
_PR1000_REG_TABLE_VDEC_SD	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_SD;$/;"	t	typeref:struct:__anon105
_PR1000_REG_TABLE_VDEC_SD	pr1000_table.h	/^}_PR1000_REG_TABLE_VDEC_SD;$/;"	t	typeref:struct:__anon95
_PR1000_REG_TABLE_VEVENT	pr1000_table.h	/^}_PR1000_REG_TABLE_VEVENT;$/;"	t	typeref:struct:__anon100
_PR1000_REG_TABLE_VEVENT	pr1000_table.h	/^}_PR1000_REG_TABLE_VEVENT;$/;"	t	typeref:struct:__anon110
_PR1000_REG_TABLE_VIDOUT_FORMAT	pr1000_user_config.h	/^}_PR1000_REG_TABLE_VIDOUT_FORMAT;$/;"	t	typeref:struct:__anon92
_PR1000_REG_TABLE_VIDOUT_FORMAT	pr1000_user_config_sample_nonLinux.h	/^}_PR1000_REG_TABLE_VIDOUT_FORMAT;$/;"	t	typeref:struct:__anon1
_SET_BIT	pr1000.h	43;"	d
_SET_BIT	pr1000.h	66;"	d
_SGLIB__h_	drv_cq.h	199;"	d
_STR_PR1000_AUD_BITRATE	pr1000_table.c	/^const char _STR_PR1000_AUD_BITRATE[max_pr1000_aud_bitrate][8] = {$/;"	v
_STR_PR1000_AUD_PB_FORMAT	pr1000_table.c	/^const char _STR_PR1000_AUD_PB_FORMAT[max_pr1000_aud_format][10] = {$/;"	v
_STR_PR1000_AUD_REC_FORMAT	pr1000_table.c	/^const char _STR_PR1000_AUD_REC_FORMAT[max_pr1000_aud_format][10] = {$/;"	v
_STR_PR1000_AUD_SAMRATE	pr1000_table.c	/^const char _STR_PR1000_AUD_SAMRATE[max_pr1000_aud_samrate][8] = {$/;"	v
_STR_PR1000_CEQ_STEP	pr1000.h	/^static const char _STR_PR1000_CEQ_STEP[MAX_PR1000_CEQ_STEP][20] = {$/;"	v
_STR_PR1000_CVI_PTZ_COMMAND_LENS	pr1000_ptz_table_cvi.c	/^const char _STR_PR1000_CVI_PTZ_COMMAND_LENS[max_pr1000_ptz_cvi_table_command_lens][12] = {$/;"	v
_STR_PR1000_CVI_PTZ_COMMAND_OTHER	pr1000_ptz_table_cvi.c	/^const char _STR_PR1000_CVI_PTZ_COMMAND_OTHER[max_pr1000_ptz_cvi_table_command_other][40] = {$/;"	v
_STR_PR1000_CVI_PTZ_COMMAND_PTZ	pr1000_ptz_table_cvi.c	/^const char _STR_PR1000_CVI_PTZ_COMMAND_PTZ[max_pr1000_ptz_cvi_table_command_ptz][20] = {$/;"	v
_STR_PR1000_DET_DET_HPERIOD	pr1000.h	/^static const char _STR_PR1000_DET_DET_HPERIOD[MAX_PR1000_DET_HPERIOD][40] = {$/;"	v
_STR_PR1000_FORMAT	pr1000_table.c	/^const char _STR_PR1000_FORMAT[max_pr1000_format][40] = {$/;"	v
_STR_PR1000_IFMT_REF	pr1000_drvcommon.h	/^static const char _STR_PR1000_IFMT_REF[MAX_PR1000_DET_IFMT_REF][40] = {$/;"	v
_STR_PR1000_IFMT_RES	pr1000_drvcommon.h	/^static const char _STR_PR1000_IFMT_RES[MAX_PR1000_DET_IFMT_RES][40] = {$/;"	v
_STR_PR1000_IFMT_STD	pr1000_drvcommon.h	/^static const char _STR_PR1000_IFMT_STD[MAX_PR1000_DET_IFMT_STD][40] = {$/;"	v
_STR_PR1000_INRESOL	pr1000_table.c	/^const char _STR_PR1000_INRESOL[max_pr1000_inresol][40] = {$/;"	v
_STR_PR1000_MASKCOLOR	pr1000_table.c	/^const char _STR_PR1000_MASKCOLOR[MAX_PR1000_VEVENT_MASKCOLOR][8] = {$/;"	v
_STR_PR1000_MON_STEP	pr1000.h	/^static const char _STR_PR1000_MON_STEP[MAX_PR1000_MON_STEP][20] = {$/;"	v
_STR_PR1000_OUTRESOL	pr1000_table.c	/^const char _STR_PR1000_OUTRESOL[max_pr1000_outresol][50] = {$/;"	v
_STR_PR1000_PTZ_COMMAND	pr1000_ptz_table.c	/^const char _STR_PR1000_PTZ_COMMAND[max_pr1000_ptz_table_command][40] = {$/;"	v
_TEST_BIT	pr1000.h	45;"	d
_TEST_BIT	pr1000.h	68;"	d
__DRV_CQ_H__	drv_cq.h	2;"	d
__PR1000_CEQFUNC_H__	pr1000_ceqfunc.h	2;"	d
__PR1000_DRVCOMMON_H__	pr1000_drvcommon.h	2;"	d
__PR1000_FUNC_H__	pr1000_func.h	2;"	d
__PR1000_H__	pr1000.h	2;"	d
__PR1000_PTZ_DRVTABLE_H__	pr1000_ptz_drvtable.h	2;"	d
__PR1000_PTZ_TABLE_CVI_H__	pr1000_ptz_table_cvi.h	2;"	d
__PR1000_PTZ_TABLE_HDA_H__	pr1000_ptz_table_hda.h	2;"	d
__PR1000_PTZ_TABLE_HDT_H__	pr1000_ptz_table_hdt.h	2;"	d
__PR1000_PTZ_TABLE_H__	pr1000_ptz_table.h	2;"	d
__PR1000_PTZ_TABLE_PVI_H__	pr1000_ptz_table_pvi.h	2;"	d
__PR1000_PTZ_TABLE_SD_H__	pr1000_ptz_table_sd.h	2;"	d
__PR1000_TABLE_H__	pr1000_table.h	2;"	d
__PR1000_USER_CONFIG_H__	pr1000_user_config.h	2;"	d
__PR1000_USER_CONFIG_H__	pr1000_user_config_sample_nonLinux.h	2;"	d
__this_module	pr1000_drv.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__used	pr1000_drv.mod.c	/^__used$/;"	v	file:
_drvHost	pr1000.h	/^}_drvHost;$/;"	t	typeref:struct:__anon26
_drvLog	pr1000.h	/^}_drvLog;$/;"	t	typeref:struct:__anon25
_elemType	drv_cq.h	/^typedef unsigned char _elemType;$/;"	t
_eventHost	pr1000.h	/^}_eventHost;$/;"	t	typeref:struct:__anon23
_pr1000PTZCmd	pr1000_ptz_table.h	/^}_pr1000PTZCmd;$/;"	t	typeref:struct:__anon114
_pr1000_aud_bit_rate	pr1000_table.h	/^enum _pr1000_aud_bit_rate {$/;"	g
_pr1000_aud_format	pr1000_table.h	/^enum _pr1000_aud_format {$/;"	g
_pr1000_aud_sample_rate	pr1000_table.h	/^enum _pr1000_aud_sample_rate {$/;"	g
_pr1000_ceq_step	pr1000.h	/^enum _pr1000_ceq_step {$/;"	g
_pr1000_mon_step	pr1000.h	/^enum _pr1000_mon_step {$/;"	g
_pr1000_mux_chdef	pr1000_table.h	/^enum _pr1000_mux_chdef {$/;"	g
_pr1000_ptz_cvi_table_command_lens	pr1000_ptz_table_cvi.h	/^enum _pr1000_ptz_cvi_table_command_lens {$/;"	g
_pr1000_ptz_cvi_table_command_other	pr1000_ptz_table_cvi.h	/^enum _pr1000_ptz_cvi_table_command_other {$/;"	g
_pr1000_ptz_cvi_table_command_ptz	pr1000_ptz_table_cvi.h	/^enum _pr1000_ptz_cvi_table_command_ptz {$/;"	g
_pr1000_ptz_table_command	pr1000_ptz_table.h	/^enum _pr1000_ptz_table_command {$/;"	g
_pr1000_table_format	pr1000_table.h	/^enum _pr1000_table_format {$/;"	g
_pr1000_table_inresol	pr1000_table.h	/^enum _pr1000_table_inresol {$/;"	g
_pr1000_table_outresol	pr1000_table.h	/^enum _pr1000_table_outresol {$/;"	g
_pr1000_vevent_disp_format	pr1000_drvcommon.h	/^enum _pr1000_vevent_disp_format {$/;"	g
_pr1000_vevent_mask_color	pr1000_drvcommon.h	/^enum _pr1000_vevent_mask_color {$/;"	g
_pr1000_vevent_mem_type	pr1000_drvcommon.h	/^enum _pr1000_vevent_mem_type {$/;"	g
_pr1000_vid_outformat_mux_type	pr1000_drvcommon.h	/^enum _pr1000_vid_outformat_mux_type {$/;"	g
_pr1000_vid_outformat_resol_type	pr1000_drvcommon.h	/^enum _pr1000_vid_outformat_resol_type {$/;"	g
_pr1000_vid_outrate_mode	pr1000_drvcommon.h	/^enum _pr1000_vid_outrate_mode {$/;"	g
_ptzHost	pr1000.h	/^}_ptzHost;$/;"	t	typeref:struct:__anon24
_stAUDAiGain	pr1000_drvcommon.h	/^}_stAUDAiGain;$/;"	t	typeref:struct:__anon44
_stAUDCascadeAttr	pr1000_drvcommon.h	/^}_stAUDCascadeAttr;$/;"	t	typeref:struct:__anon55
_stAUDDacGain	pr1000_drvcommon.h	/^}_stAUDDacGain;$/;"	t	typeref:struct:__anon45
_stAUDDetAttr	pr1000_drvcommon.h	/^}_stAUDDetAttr;$/;"	t	typeref:struct:__anon54
_stAUDMixMode	pr1000_drvcommon.h	/^}_stAUDMixMode;$/;"	t	typeref:struct:__anon46
_stAUDPbAttr	pr1000_drvcommon.h	/^}_stAUDPbAttr;$/;"	t	typeref:struct:__anon48
_stAUDRecAttr	pr1000_drvcommon.h	/^}_stAUDRecAttr;$/;"	t	typeref:struct:__anon47
_stAudDacChn	pr1000_drvcommon.h	/^}_stAudDacChn;$/;"	t	typeref:struct:__anon53
_stAudDacMute	pr1000_drvcommon.h	/^}_stAudDacMute;$/;"	t	typeref:struct:__anon52
_stAudEnable	pr1000_drvcommon.h	/^}_stAudEnable;$/;"	t	typeref:struct:__anon43
_stAudMixMute	pr1000_drvcommon.h	/^}_stAudMixMute;$/;"	t	typeref:struct:__anon50
_stAudRecMute	pr1000_drvcommon.h	/^}_stAudRecMute;$/;"	t	typeref:struct:__anon49
_stAudVocMute	pr1000_drvcommon.h	/^}_stAudVocMute;$/;"	t	typeref:struct:__anon51
_stBdAttr	pr1000_drvcommon.h	/^}_stBdAttr;$/;"	t	typeref:struct:__anon72
_stBdLvSens	pr1000_drvcommon.h	/^}_stBdLvSens;$/;"	t	typeref:struct:__anon73
_stBdSpSens	pr1000_drvcommon.h	/^}_stBdSpSens;$/;"	t	typeref:struct:__anon74
_stBdTmpSens	pr1000_drvcommon.h	/^}_stBdTmpSens;$/;"	t	typeref:struct:__anon75
_stBright	pr1000_drvcommon.h	/^}_stBright;$/;"	t	typeref:struct:__anon37
_stCEQData	pr1000.h	/^}_stCEQData;$/;"	t	typeref:struct:__anon21
_stCEQGain	pr1000_drvcommon.h	/^}_stCEQGain;$/;"	t	typeref:struct:__anon91
_stCEQGainOffset	pr1000_drvcommon.h	/^}_stCEQGainOffset;$/;"	t	typeref:struct:__anon90
_stCEQInfo	pr1000_drvcommon.h	/^}_stCEQInfo;$/;"	t	typeref:struct:__anon89
_stCeqDet	pr1000.h	/^}_stCeqDet;$/;"	t	typeref:union:__anon3
_stCeqInfoReg	pr1000.h	/^}_stCeqInfoReg;$/;"	t	typeref:union:__anon18
_stCeqLock	pr1000.h	/^}_stCeqLock;$/;"	t	typeref:union:__anon5
_stChnAttr	pr1000_drvcommon.h	/^}_stChnAttr;$/;"	t	typeref:struct:__anon34
_stContrast	pr1000_drvcommon.h	/^}_stContrast;$/;"	t	typeref:struct:__anon36
_stCscAttr	pr1000_drvcommon.h	/^}_stCscAttr;$/;"	t	typeref:struct:__anon35
_stDdAttr	pr1000_drvcommon.h	/^}_stDdAttr;$/;"	t	typeref:struct:__anon79
_stDdLvSens	pr1000_drvcommon.h	/^}_stDdLvSens;$/;"	t	typeref:struct:__anon80
_stDdTmpSens	pr1000_drvcommon.h	/^}_stDdTmpSens;$/;"	t	typeref:struct:__anon81
_stDfdAttr	pr1000_drvcommon.h	/^}_stDfdAttr;$/;"	t	typeref:struct:__anon82
_stDfdLvSens	pr1000_drvcommon.h	/^}_stDfdLvSens;$/;"	t	typeref:struct:__anon83
_stDfdSpSens	pr1000_drvcommon.h	/^}_stDfdSpSens;$/;"	t	typeref:struct:__anon84
_stDfdTmpSens	pr1000_drvcommon.h	/^}_stDfdTmpSens;$/;"	t	typeref:struct:__anon85
_stEqProcFlag	pr1000.h	/^}_stEqProcFlag;$/;"	t	typeref:struct:__anon20
_stEventDetStd	pr1000_drvcommon.h	/^}_stEventDetStd;$/;"	t	typeref:struct:__anon87
_stHue	pr1000_drvcommon.h	/^}_stHue;$/;"	t	typeref:struct:__anon39
_stIRQReg	pr1000.h	/^}_stIRQReg;$/;"	t	typeref:struct:__anon2
_stIfmtAttr	pr1000_drvcommon.h	/^}_stIfmtAttr;$/;"	t	typeref:struct:__anon33
_stIrqChipState	pr1000.h	/^}_stIrqChipState;$/;"	t	typeref:union:__anon9
_stManEQMan	pr1000.h	/^}_stManEQMan;$/;"	t	typeref:union:__anon7
_stMaskCellAttr	pr1000_table.h	/^}_stMaskCellAttr;$/;"	t	typeref:struct:__anon101
_stMaskCellAttr	pr1000_table.h	/^}_stMaskCellAttr;$/;"	t	typeref:struct:__anon111
_stMdAttr	pr1000_drvcommon.h	/^}_stMdAttr;$/;"	t	typeref:struct:__anon67
_stMdLvSens	pr1000_drvcommon.h	/^}_stMdLvSens;$/;"	t	typeref:struct:__anon68
_stMdSpSens	pr1000_drvcommon.h	/^}_stMdSpSens;$/;"	t	typeref:struct:__anon69
_stMdTmpSens	pr1000_drvcommon.h	/^}_stMdTmpSens;$/;"	t	typeref:struct:__anon70
_stMdVelocity	pr1000_drvcommon.h	/^}_stMdVelocity;$/;"	t	typeref:struct:__anon71
_stNdAttr	pr1000_drvcommon.h	/^}_stNdAttr;$/;"	t	typeref:struct:__anon76
_stNdLvSens	pr1000_drvcommon.h	/^}_stNdLvSens;$/;"	t	typeref:struct:__anon77
_stNdTmpSens	pr1000_drvcommon.h	/^}_stNdTmpSens;$/;"	t	typeref:struct:__anon78
_stNovidAttr	pr1000_drvcommon.h	/^}_stNovidAttr;$/;"	t	typeref:struct:__anon86
_stOutChn	pr1000_drvcommon.h	/^}_stOutChn;$/;"	t	typeref:struct:__anon42
_stOutFormatAttr	pr1000_drvcommon.h	/^}_stOutFormatAttr;$/;"	t	typeref:struct:__anon41
_stPTZHVStartAttr	pr1000.h	/^}_stPTZHVStartAttr;$/;"	t	typeref:union:__anon13
_stPTZRxAttr	pr1000.h	/^}_stPTZRxAttr;$/;"	t	typeref:union:__anon11
_stPTZRxParam	pr1000_drvcommon.h	/^}_stPTZRxParam;$/;"	t	typeref:struct:__anon57
_stPTZRxPatInfo	pr1000_drvcommon.h	/^}_stPTZRxPatInfo;$/;"	t	typeref:struct:__anon59
_stPTZTxAttr	pr1000.h	/^}_stPTZTxAttr;$/;"	t	typeref:union:__anon15
_stPTZTxParam	pr1000_drvcommon.h	/^}_stPTZTxParam;$/;"	t	typeref:struct:__anon56
_stPTZTxPatInfo	pr1000_drvcommon.h	/^}_stPTZTxPatInfo;$/;"	t	typeref:struct:__anon58
_stPortChSel	pr1000.h	/^}_stPortChSel;$/;"	t	typeref:struct:__anon17
_stPrPwDown	pr1000_drvcommon.h	/^}_stPrPwDown;$/;"	t	typeref:struct:__anon32
_stPrReg	pr1000_drvcommon.h	/^}_stPrReg;$/;"	t	typeref:struct:__anon30
_stPrRxMode	pr1000_drvcommon.h	/^}_stPrRxMode;$/;"	t	typeref:struct:__anon31
_stPtzRecv	pr1000_drvcommon.h	/^}_stPtzRecv;$/;"	t	typeref:struct:__anon62
_stPtzSend	pr1000_drvcommon.h	/^}_stPtzSend;$/;"	t	typeref:struct:__anon61
_stPtzStart	pr1000_drvcommon.h	/^}_stPtzStart;$/;"	t	typeref:struct:__anon60
_stSaturation	pr1000_drvcommon.h	/^}_stSaturation;$/;"	t	typeref:struct:__anon38
_stSharpness	pr1000_drvcommon.h	/^}_stSharpness;$/;"	t	typeref:struct:__anon40
_stVEVENTDetData	pr1000_drvcommon.h	/^}_stVEVENTDetData;$/;"	t	typeref:struct:__anon66
_stVEVENTDisplayAttr	pr1000_drvcommon.h	/^}_stVEVENTDisplayAttr;$/;"	t	typeref:struct:__anon63
_stVEVENTMaskAttr	pr1000_drvcommon.h	/^}_stVEVENTMaskAttr;$/;"	t	typeref:struct:__anon64
_stVEVENTMaskCellSize	pr1000_drvcommon.h	/^}_stVEVENTMaskCellSize;$/;"	t	typeref:struct:__anon65
_sysHost	pr1000.h	/^}_sysHost;$/;"	t	typeref:struct:__anon22
_wqPollChnStatus	pr1000_drvcommon.h	/^}_wqPollChnStatus;$/;"	t	typeref:struct:__anon88
absThresholdCh0	pr1000_drvcommon.h	/^	uint8_t absThresholdCh0;$/;"	m	struct:__anon54
absThresholdCh1	pr1000_drvcommon.h	/^	uint8_t absThresholdCh1;$/;"	m	struct:__anon54
absThresholdCh2	pr1000_drvcommon.h	/^	uint8_t absThresholdCh2;$/;"	m	struct:__anon54
absThresholdCh3	pr1000_drvcommon.h	/^	uint8_t absThresholdCh3;$/;"	m	struct:__anon54
acGain	pr1000_drvcommon.h	/^	uint16_t acGain;$/;"	m	struct:__anon89
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon100
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon104
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon105
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon106
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon107
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon108
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon109
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon110
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon94
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon95
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon96
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon97
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon98
addr	pr1000_table.h	/^	uint8_t addr;$/;"	m	struct:__anon99
addrHoldEn	pr1000.h	/^		uint8_t addrHoldEn:1;$/;"	m	struct:__anon11::__anon12
addr_byte	gpio_i2c.h	/^	unsigned int addr_byte; $/;"	m	struct:hiI2C_DATA_S
allDataLen	pr1000.h	/^		uint8_t allDataLen:8; \/\/reg12$/;"	m	struct:__anon15::__anon16
atten1	pr1000_drvcommon.h	/^	uint16_t atten1;$/;"	m	struct:__anon89
atten2	pr1000_drvcommon.h	/^	uint16_t atten2;$/;"	m	struct:__anon89
attenFact	pr1000.h	/^	uint16_t attenFact; $/;"	m	struct:__anon21
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon11	typeref:struct:__anon11::__anon12
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon13	typeref:struct:__anon13::__anon14
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon15	typeref:struct:__anon15::__anon16
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon18	typeref:struct:__anon18::__anon19
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon3	typeref:struct:__anon3::__anon4
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon5	typeref:struct:__anon5::__anon6
b	pr1000.h	/^	}b;                  $/;"	m	union:__anon9	typeref:struct:__anon9::__anon10
b	pr1000.h	/^	}b;$/;"	m	union:__anon7	typeref:struct:__anon7::__anon8
b16bit	pr1000_drvcommon.h	/^	uint8_t b16bit;	\/\/16bit, 8bit$/;"	m	struct:__anon41
b8bitLow	pr1000_drvcommon.h	/^	uint8_t b8bitLow;	\/\/0:When 8bit mode, 0:upper 8bit, 1:lower 8bit$/;"	m	struct:__anon48
b8bits	pr1000_drvcommon.h	/^	uint8_t b8bits;		\/\/0:16bits, 1:8bits$/;"	m	struct:__anon47
b8bits	pr1000_drvcommon.h	/^	uint8_t b8bits;		\/\/0:16bits, 1:8bits$/;"	m	struct:__anon48
bAUDIO	pr1000_drvcommon.h	/^	uint8_t bAUDIO; \/\/0xEA b'7$/;"	m	struct:__anon32
bCascadeMaster	pr1000_drvcommon.h	/^	uint8_t bCascadeMaster;	\/\/cascade 1:master(or no cascade), 0:slave$/;"	m	struct:__anon55
bClkRise	pr1000_drvcommon.h	/^	uint8_t bClkRise;	\/\/0:Clock Falling, 1:Clock Rising$/;"	m	struct:__anon47
bDSP	pr1000_drvcommon.h	/^	uint8_t bDSP;		\/\/0:I2S, 1:DSP$/;"	m	struct:__anon47
bDSP	pr1000_drvcommon.h	/^	uint8_t bDSP;		\/\/0:I2S, 1:DSP$/;"	m	struct:__anon48
bDSP_User	pr1000_drvcommon.h	/^	uint8_t bDSP_User;	\/\/0:DSP_PCM, 1:DSP_User$/;"	m	struct:__anon47
bDSP_User	pr1000_drvcommon.h	/^	uint8_t bDSP_User;	\/\/0:DSP_PCM, 1:DSP_User$/;"	m	struct:__anon48
bEn	pr1000_drvcommon.h	/^	uint8_t bEn;$/;"	m	struct:__anon67
bEn	pr1000_drvcommon.h	/^	uint8_t bEn;$/;"	m	struct:__anon72
bEn	pr1000_drvcommon.h	/^	uint8_t bEn;$/;"	m	struct:__anon76
bEn	pr1000_drvcommon.h	/^	uint8_t bEn;$/;"	m	struct:__anon79
bEnDetPln	pr1000_drvcommon.h	/^	uint8_t bEnDetPln;	\/\/display detect cell on mask pln cell. 0:display, 1:don't display.$/;"	m	struct:__anon63
bEnMaskPln	pr1000_drvcommon.h	/^	uint8_t bEnMaskPln;	\/\/display mask cell of mask pln buffer. Mask cell is don't detect cell.$/;"	m	struct:__anon63
bEnable	pr1000.h	/^	uint8_t bEnable;$/;"	m	struct:__anon21
bEnable	pr1000_drvcommon.h	/^	uint8_t bEnable;$/;"	m	struct:__anon43
bEnable	pr1000_drvcommon.h	/^	uint8_t bEnable;$/;"	m	struct:__anon49
bEnable	pr1000_drvcommon.h	/^	uint8_t bEnable;$/;"	m	struct:__anon50
bEnable	pr1000_drvcommon.h	/^	uint8_t bEnable;$/;"	m	struct:__anon51
bEnable	pr1000_drvcommon.h	/^	uint8_t bEnable;$/;"	m	struct:__anon52
bForceChgStd	pr1000.h	/^	uint8_t bForceChgStd;	\/\/ forcely change standard format.$/;"	m	struct:__anon21
bLock	pr1000.h	/^	uint8_t bLock;		\/\/ lock complete flag.$/;"	m	struct:__anon21
bMaskEn	pr1000_drvcommon.h	/^	uint8_t bMaskEn; $/;"	m	struct:__anon67
bMaskEn	pr1000_drvcommon.h	/^	uint8_t bMaskEn; \/\/enable mask cell setting of mask buffer.$/;"	m	struct:__anon72
bMaster	pr1000_drvcommon.h	/^	uint8_t bMaster; 	\/\/0:slave, 1:master$/;"	m	struct:__anon47
bMaster	pr1000_drvcommon.h	/^	uint8_t bMaster; 	\/\/0:slave, 1:master$/;"	m	struct:__anon48
bMixMode	pr1000_drvcommon.h	/^	uint8_t bMixMode; 	\/\/1bit gain(0:sum, 1:avr)$/;"	m	struct:__anon46
bPLL1_PD	pr1000_drvcommon.h	/^	uint8_t bPLL1_PD; \/\/page0 0xE6 b'7 All digital\/anglog$/;"	m	struct:__anon32
bPLL2_PD	pr1000_drvcommon.h	/^	uint8_t bPLL2_PD; \/\/page0 0xE7 b'7 Only video output$/;"	m	struct:__anon32
bRightChn	pr1000_drvcommon.h	/^	uint8_t bRightChn; 	\/\/0:left channel, 1:right channel$/;"	m	struct:__anon48
bRxUsedSTDFORMATOnly	pr1000.h	/^	uint8_t bRxUsedSTDFORMATOnly[MAX_CHN];$/;"	m	struct:__anon24
bStart	pr1000_drvcommon.h	/^	uint8_t bStart;$/;"	m	struct:__anon60
bVADC_PD0	pr1000_drvcommon.h	/^	uint8_t bVADC_PD0; \/\/prchn 0, page1 0x68 b'4$/;"	m	struct:__anon32
bVADC_PD1	pr1000_drvcommon.h	/^	uint8_t bVADC_PD1; \/\/prchn 1, page1 0xE8 b'4$/;"	m	struct:__anon32
bVADC_PD2	pr1000_drvcommon.h	/^	uint8_t bVADC_PD2; \/\/prchn 2, page2 0x68 b'4$/;"	m	struct:__anon32
bVADC_PD3	pr1000_drvcommon.h	/^	uint8_t bVADC_PD3; \/\/prchn 3, page2 0xE8 b'4$/;"	m	struct:__anon32
bVDEC_CLK_PD0	pr1000_drvcommon.h	/^	uint8_t bVDEC_CLK_PD0; \/\/prchn 0, page0 0xEC b'3$/;"	m	struct:__anon32
bVDEC_CLK_PD1	pr1000_drvcommon.h	/^	uint8_t bVDEC_CLK_PD1; \/\/prchn 1, page0 0xEC b'7$/;"	m	struct:__anon32
bVDEC_CLK_PD2	pr1000_drvcommon.h	/^	uint8_t bVDEC_CLK_PD2; \/\/prchn 2, page0 0xED b'3$/;"	m	struct:__anon32
bVDEC_CLK_PD3	pr1000_drvcommon.h	/^	uint8_t bVDEC_CLK_PD3; \/\/prchn 3, page0 0xED b'7$/;"	m	struct:__anon32
bitChnApplyVadcGainSel	pr1000.h	/^	unsigned char bitChnApplyVadcGainSel;$/;"	m	struct:__anon22
bitChnApplyVadcGainSel	pr1000.h	/^	unsigned long bitChnApplyVadcGainSel;$/;"	m	struct:__anon22
bitChnCheckChromaLock	pr1000.h	/^	unsigned char bitChnCheckChromaLock;$/;"	m	struct:__anon22
bitChnCheckChromaLock	pr1000.h	/^	unsigned long bitChnCheckChromaLock;$/;"	m	struct:__anon22
bitChnCheckVadcGainSel	pr1000.h	/^	unsigned char bitChnCheckVadcGainSel;$/;"	m	struct:__anon22
bitChnCheckVadcGainSel	pr1000.h	/^	unsigned long bitChnCheckVadcGainSel;$/;"	m	struct:__anon22
bitChnDoneChromaLock	pr1000.h	/^	unsigned char bitChnDoneChromaLock;$/;"	m	struct:__anon22
bitChnDoneChromaLock	pr1000.h	/^	unsigned long bitChnDoneChromaLock;$/;"	m	struct:__anon22
bitChnDoneVadcGainSel	pr1000.h	/^	unsigned char bitChnDoneVadcGainSel;$/;"	m	struct:__anon22
bitChnDoneVadcGainSel	pr1000.h	/^	unsigned long bitChnDoneVadcGainSel;$/;"	m	struct:__anon22
bitChnLoadedRegTable	pr1000.h	/^	unsigned char bitChnLoadedRegTable;$/;"	m	struct:__anon22
bitChnLoadedRegTable	pr1000.h	/^	unsigned long bitChnLoadedRegTable;$/;"	m	struct:__anon22
bitChnResultChromaLock	pr1000.h	/^	unsigned char bitChnResultChromaLock;$/;"	m	struct:__anon22
bitChnResultChromaLock	pr1000.h	/^	unsigned long bitChnResultChromaLock;$/;"	m	struct:__anon22
bitChnResultVadcGainSel	pr1000.h	/^	unsigned char bitChnResultVadcGainSel;$/;"	m	struct:__anon22
bitChnResultVadcGainSel	pr1000.h	/^	unsigned long bitChnResultVadcGainSel;$/;"	m	struct:__anon22
bitChnWaitCheckChromaLock	pr1000.h	/^	unsigned char bitChnWaitCheckChromaLock;$/;"	m	struct:__anon22
bitChnWaitCheckChromaLock	pr1000.h	/^	unsigned long bitChnWaitCheckChromaLock;$/;"	m	struct:__anon22
bitChnWakeIsrImmediately	pr1000.h	/^	unsigned char bitChnWakeIsrImmediately;$/;"	m	struct:__anon22
bitChnWakeIsrImmediately	pr1000.h	/^	unsigned long bitChnWakeIsrImmediately;$/;"	m	struct:__anon22
bitPtzIsrStatus	pr1000.h	/^	unsigned char bitPtzIsrStatus[MAX_CHN];$/;"	m	struct:__anon24
bitPtzIsrStatus	pr1000.h	/^	unsigned long bitPtzIsrStatus[MAX_CHN];$/;"	m	struct:__anon24
bitRate	pr1000_drvcommon.h	/^	uint8_t bitRate;	\/\/0:16fs, 1:32fs, 2:64fs, 3:128fs, 4:256fs, 5:320fs, 6:384fs$/;"	m	struct:__anon47
bitRate	pr1000_drvcommon.h	/^	uint8_t bitRate;	\/\/0:16fs, 1:32fs, 2:64fs, 3:128fs, 4:256fs, 5:320fs, 6:384fs$/;"	m	struct:__anon48
bitWqPollAdAbs	pr1000_drvcommon.h	/^	unsigned long bitWqPollAdAbs; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollAdDiff	pr1000_drvcommon.h	/^	unsigned long bitWqPollAdDiff; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollAdMute	pr1000_drvcommon.h	/^	unsigned long bitWqPollAdMute; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollBd	pr1000_drvcommon.h	/^	unsigned long bitWqPollBd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollDd	pr1000_drvcommon.h	/^	unsigned long bitWqPollDd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollDetStd	pr1000_drvcommon.h	/^	unsigned long bitWqPollDetStd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollDfd	pr1000_drvcommon.h	/^	unsigned long bitWqPollDfd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollGpio	pr1000_drvcommon.h	/^	unsigned long bitWqPollGpio; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollMd	pr1000_drvcommon.h	/^	unsigned long bitWqPollMd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollNd	pr1000_drvcommon.h	/^	unsigned long bitWqPollNd; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollNovid	pr1000_drvcommon.h	/^	unsigned long bitWqPollNovid; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollPtzRx	pr1000_drvcommon.h	/^	unsigned long bitWqPollPtzRx; \/\/chn0 : b'0$/;"	m	struct:__anon88
bitWqPollVfd	pr1000_drvcommon.h	/^	unsigned long bitWqPollVfd; \/\/chn0 : b'0$/;"	m	struct:__anon88
blankColor	pr1000_drvcommon.h	/^	uint8_t blankColor; \/\/0:black, 1:blue$/;"	m	struct:__anon86
byte	gpio_i2c.h	/^typedef unsigned char		byte;$/;"	t
camResol	pr1000.h	/^	enum _pr1000_table_inresol camResol;$/;"	m	struct:__anon21	typeref:enum:__anon21::_pr1000_table_inresol
camResol	pr1000_drvcommon.h	/^	uint8_t camResol;$/;"	m	struct:__anon61
camType	pr1000_drvcommon.h	/^	uint8_t camType;$/;"	m	struct:__anon61
cellCntX	pr1000_drvcommon.h	/^	uint8_t cellCntX;$/;"	m	struct:__anon65
cellCntX	pr1000_table.h	/^	uint8_t cellCntX;$/;"	m	struct:__anon101
cellCntX	pr1000_table.h	/^	uint8_t cellCntX;$/;"	m	struct:__anon111
cellCntY	pr1000_drvcommon.h	/^	uint8_t cellCntY;$/;"	m	struct:__anon65
cellCntY	pr1000_table.h	/^	uint8_t cellCntY;$/;"	m	struct:__anon101
cellCntY	pr1000_table.h	/^	uint8_t cellCntY;$/;"	m	struct:__anon111
cellFormat	pr1000_drvcommon.h	/^	enum _pr1000_vevent_disp_format cellFormat;$/;"	m	struct:__anon63	typeref:enum:__anon63::_pr1000_vevent_disp_format
cellHStartOffset	pr1000_drvcommon.h	/^	uint16_t cellHStartOffset;$/;"	m	struct:__anon65
cellHStartOffset	pr1000_table.h	/^	uint16_t cellHStartOffset;$/;"	m	struct:__anon101
cellHStartOffset	pr1000_table.h	/^	uint16_t cellHStartOffset;$/;"	m	struct:__anon111
cellHeight	pr1000_drvcommon.h	/^	uint8_t cellHeight;$/;"	m	struct:__anon65
cellHeight	pr1000_table.h	/^	uint8_t cellHeight;$/;"	m	struct:__anon101
cellHeight	pr1000_table.h	/^	uint8_t cellHeight;$/;"	m	struct:__anon111
cellVStartOffset	pr1000_drvcommon.h	/^	uint16_t cellVStartOffset;$/;"	m	struct:__anon65
cellVStartOffset	pr1000_table.h	/^	uint16_t cellVStartOffset;$/;"	m	struct:__anon101
cellVStartOffset	pr1000_table.h	/^	uint16_t cellVStartOffset;$/;"	m	struct:__anon111
cellWidth	pr1000_drvcommon.h	/^	uint8_t cellWidth;$/;"	m	struct:__anon65
cellWidth	pr1000_table.h	/^	uint8_t cellWidth;$/;"	m	struct:__anon101
cellWidth	pr1000_table.h	/^	uint8_t cellWidth;$/;"	m	struct:__anon111
chipCnt	pr1000_drvcommon.h	/^	uint8_t chipCnt;$/;"	m	struct:__anon41
chipID	pr1000.h	/^	uint16_t chipID[MAX_PR1000_CHIP]; $/;"	m	struct:__anon22
chn	pr1000.h	/^	int chn;	\/\/mapping channel(0~15).$/;"	m	struct:__anon17
cmdGrpNum	pr1000.h	/^		uint8_t cmdGrpNum:4;$/;"	m	struct:__anon15::__anon16
cntChromaLockTunn	pr1000.h	/^	int8_t cntChromaLockTunn[MAX_CHN]; \/\/Max 4chip * 4channel$/;"	m	struct:__anon22
cntSTDFORMATCheck	pr1000.h	/^	int8_t cntSTDFORMATCheck[MAX_CHN];$/;"	m	struct:__anon22
cntVadcGainSelTunn	pr1000.h	/^	int8_t cntVadcGainSelTunn[MAX_CHN]; \/\/Max 4chip * 4channel$/;"	m	struct:__anon22
comp1	pr1000_drvcommon.h	/^	uint16_t comp1;$/;"	m	struct:__anon89
comp2	pr1000_drvcommon.h	/^	uint16_t comp2;$/;"	m	struct:__anon89
compFact	pr1000.h	/^	uint16_t compFact; $/;"	m	struct:__anon21
data	drv_cq.h	/^	_elemType data[MAX_PARAMS];$/;"	m	struct:__anon93
data	gpio_i2c.h	/^	unsigned int data; $/;"	m	struct:hiI2C_DATA_S
data	pr1000_drvcommon.h	/^	uint8_t data;$/;"	m	struct:__anon30
dataPol	pr1000.h	/^		uint8_t dataPol:1; \/\/reg2$/;"	m	struct:__anon11::__anon12
dataPol	pr1000.h	/^		uint8_t dataPol:1; \/\/reg2$/;"	m	struct:__anon15::__anon16
data_byte	gpio_i2c.h	/^	unsigned int data_byte;$/;"	m	struct:hiI2C_DATA_S
datarate	pr1000_drvcommon.h	/^	uint8_t datarate;	\/\/0:normal$/;"	m	struct:__anon41
dcGain	pr1000_drvcommon.h	/^	uint16_t dcGain;$/;"	m	struct:__anon89
detBndrLevel	pr1000_drvcommon.h	/^	uint8_t detBndrLevel;	\/\/0:100%white, 3:black$/;"	m	struct:__anon63
detBndrWidth	pr1000_drvcommon.h	/^	uint8_t detBndrWidth; \/\/0:disable detect cell boundray display.$/;"	m	struct:__anon63
detBuf	pr1000_drvcommon.h	/^        uint64_t detBuf[PR1000_MAX_DET_CELL_Y_NUM];$/;"	m	struct:__anon66
det_chroma	pr1000.h	/^		uint8_t det_chroma:1;$/;"	m	struct:__anon5::__anon6
det_eq_acgain_h	pr1000.h	/^		uint8_t det_eq_acgain_h:8;  \/\/0x06$/;"	m	struct:__anon18::__anon19
det_eq_acgain_l	pr1000.h	/^		uint8_t det_eq_acgain_l:8; $/;"	m	struct:__anon18::__anon19
det_eq_atten1_h	pr1000.h	/^		uint8_t det_eq_atten1_h:8; \/\/0x0c$/;"	m	struct:__anon18::__anon19
det_eq_atten1_l	pr1000.h	/^		uint8_t det_eq_atten1_l:8;$/;"	m	struct:__anon18::__anon19
det_eq_atten2_h	pr1000.h	/^		uint8_t det_eq_atten2_h:8; \/\/0x0e$/;"	m	struct:__anon18::__anon19
det_eq_atten2_l	pr1000.h	/^		uint8_t det_eq_atten2_l:8;$/;"	m	struct:__anon18::__anon19
det_eq_comp1_h	pr1000.h	/^		uint8_t det_eq_comp1_h:8;  \/\/0x08$/;"	m	struct:__anon18::__anon19
det_eq_comp1_l	pr1000.h	/^		uint8_t det_eq_comp1_l:8; $/;"	m	struct:__anon18::__anon19
det_eq_comp2_h	pr1000.h	/^		uint8_t det_eq_comp2_h:8;  \/\/0x0a$/;"	m	struct:__anon18::__anon19
det_eq_comp2_l	pr1000.h	/^		uint8_t det_eq_comp2_l:8; $/;"	m	struct:__anon18::__anon19
det_eq_dcgain_h	pr1000.h	/^		uint8_t det_eq_dcgain_h:8;  \/\/0x04$/;"	m	struct:__anon18::__anon19
det_eq_dcgain_l	pr1000.h	/^		uint8_t det_eq_dcgain_l:8; $/;"	m	struct:__anon18::__anon19
det_ifmt_ref	pr1000.h	/^		uint8_t det_ifmt_ref:2;$/;"	m	struct:__anon3::__anon4
det_ifmt_res	pr1000.h	/^		uint8_t det_ifmt_res:2;$/;"	m	struct:__anon3::__anon4
det_ifmt_std	pr1000.h	/^		uint8_t det_ifmt_std:2;$/;"	m	struct:__anon3::__anon4
det_signal	pr1000.h	/^		uint8_t det_signal:1;$/;"	m	struct:__anon5::__anon6
det_video	pr1000.h	/^		uint8_t det_video:1;$/;"	m	struct:__anon3::__anon4
dev_addr	gpio_i2c.h	/^	unsigned char dev_addr; $/;"	m	struct:hiI2C_DATA_S
diffThresholdCh0	pr1000_drvcommon.h	/^	uint8_t diffThresholdCh0;$/;"	m	struct:__anon54
diffThresholdCh1	pr1000_drvcommon.h	/^	uint8_t diffThresholdCh1;$/;"	m	struct:__anon54
diffThresholdCh2	pr1000_drvcommon.h	/^	uint8_t diffThresholdCh2;$/;"	m	struct:__anon54
diffThresholdCh3	pr1000_drvcommon.h	/^	uint8_t diffThresholdCh3;$/;"	m	struct:__anon54
dirTunnStep	pr1000.h	/^	int dirTunnStep[MAX_CHN]; \/\/+ or -$/;"	m	struct:__anon22
distance	pr1000_table.h	/^	uint16_t distance;$/;"	m	struct:__anon102
distance	pr1000_table.h	/^	uint16_t distance;$/;"	m	struct:__anon103
distance	pr1000_table.h	/^	uint16_t distance;$/;"	m	struct:__anon112
distance	pr1000_table.h	/^	uint16_t distance;$/;"	m	struct:__anon113
drvLog	pr1000.h	/^	_drvLog 		drvLog;$/;"	m	struct:__anon26
eqGain	pr1000_drvcommon.h	/^	uint16_t eqGain;$/;"	m	struct:__anon91
eqProcFlag	pr1000.h	/^	_stEqProcFlag eqProcFlag;$/;"	m	struct:__anon21
estCheckTime	pr1000.h	/^	uint32_t estCheckTime;  \/* EQ check mininum time >= PR1000_EQ_CHECK_PERIOD *\/$/;"	m	struct:__anon21
estResultAtten	pr1000.h	/^	uint8_t estResultAtten;$/;"	m	struct:__anon21
estResultComp	pr1000.h	/^	uint8_t estResultComp;$/;"	m	struct:__anon21
estStdComplete	pr1000.h	/^	uint8_t estStdComplete; \/\/ std complete flag.$/;"	m	struct:__anon21
estStep	pr1000.h	/^	uint8_t estStep;	\/\/ eq step$/;"	m	struct:__anon21
eventHost	pr1000.h	/^	_eventHost		eventHost;$/;"	m	struct:__anon26
fieldPol	pr1000.h	/^		uint8_t fieldPol:1;$/;"	m	struct:__anon11::__anon12
fieldPol	pr1000.h	/^		uint8_t fieldPol:1;$/;"	m	struct:__anon15::__anon16
fieldType	pr1000.h	/^		uint8_t fieldType:2;$/;"	m	struct:__anon11::__anon12
fieldType	pr1000.h	/^		uint8_t fieldType:2;$/;"	m	struct:__anon15::__anon16
flagMonStepComplete	pr1000.h	/^	uint8_t flagMonStepComplete[MAX_PR1000_MON_STEP];$/;"	m	struct:__anon21
flagSTDFORMATResult	pr1000.h	/^	uint8_t flagSTDFORMATResult[MAX_CHN];$/;"	m	struct:__anon24
flagStepComplete	pr1000.h	/^	uint8_t flagStepComplete[MAX_PR1000_CEQ_STEP];$/;"	m	struct:__anon21
fopsRegDump	pr1000.c	/^static const struct file_operations fopsRegDump = { $/;"	v	typeref:struct:file_operations	file:
fopsRegWrite	pr1000.c	/^static const struct file_operations fopsRegWrite = { $/;"	v	typeref:struct:file_operations	file:
format	pr1000.h	/^	enum _pr1000_table_format format;$/;"	m	struct:__anon21	typeref:enum:__anon21::_pr1000_table_format
format	pr1000_drvcommon.h	/^	uint8_t format;		\/\/0:2's complement, 1:straight, 2:G711u, 3:G711a$/;"	m	struct:__anon47
format	pr1000_drvcommon.h	/^	uint8_t format;		\/\/0:straight, 1:2's complement, 2:G711u, 3:G711a$/;"	m	struct:__anon48
format	pr1000_drvcommon.h	/^	uint8_t format;$/;"	m	struct:__anon87
freq07	pr1000.h	/^		uint8_t freq07:8; \/\/reg8$/;"	m	struct:__anon11::__anon12
freq07	pr1000.h	/^		uint8_t freq07:8; \/\/reg8$/;"	m	struct:__anon15::__anon16
freq15	pr1000.h	/^		uint8_t freq15:8; \/\/reg7$/;"	m	struct:__anon11::__anon12
freq15	pr1000.h	/^		uint8_t freq15:8; \/\/reg7$/;"	m	struct:__anon15::__anon16
freq23	pr1000.h	/^		uint8_t freq23:8; \/\/reg6$/;"	m	struct:__anon11::__anon12
freq23	pr1000.h	/^		uint8_t freq23:8; \/\/reg6$/;"	m	struct:__anon15::__anon16
freqFirst07	pr1000.h	/^		uint8_t freqFirst07:8; \/\/reg5$/;"	m	struct:__anon11::__anon12
freqFirst07	pr1000.h	/^		uint8_t freqFirst07:8; \/\/reg5$/;"	m	struct:__anon15::__anon16
freqFirst15	pr1000.h	/^		uint8_t freqFirst15:8; \/\/reg4$/;"	m	struct:__anon11::__anon12
freqFirst15	pr1000.h	/^		uint8_t freqFirst15:8; \/\/reg4$/;"	m	struct:__anon15::__anon16
freqFirst23	pr1000.h	/^		uint8_t freqFirst23:8; \/\/reg3$/;"	m	struct:__anon11::__anon12
freqFirst23	pr1000.h	/^		uint8_t freqFirst23:8; \/\/reg3$/;"	m	struct:__anon15::__anon16
gDrvHost	pr1000.c	/^_drvHost gDrvHost;$/;"	v
gPR1000RxResol	pr1000.h	/^	uint8_t gPR1000RxResol[MAX_CHN];$/;"	m	struct:__anon22
gPR1000RxType	pr1000.h	/^	uint8_t gPR1000RxType[MAX_CHN];$/;"	m	struct:__anon22
gpDrvHost	pr1000.c	/^_drvHost *gpDrvHost = NULL;$/;"	v
gpKthreadId	pr1000.c	/^static struct task_struct *gpKthreadId = NULL;$/;"	v	typeref:struct:task_struct	file:
gpPr1000RootProcDir	pr1000.c	/^struct proc_dir_entry *gpPr1000RootProcDir = NULL;$/;"	v	typeref:struct:proc_dir_entry
grpEn	pr1000.h	/^		uint8_t grpEn:1; \/\/reg14$/;"	m	struct:__anon15::__anon16
head	drv_cq.h	/^	int tail, head;$/;"	m	struct:__anon93
hiI2C_DATA_S	gpio_i2c.h	/^typedef struct hiI2C_DATA_S$/;"	s
himedia_pr1000Device	pr1000.c	/^static struct himedia_device himedia_pr1000Device;$/;"	v	typeref:struct:himedia_device	file:
himedia_pr1000DrvOps	pr1000.c	/^struct himedia_ops himedia_pr1000DrvOps =$/;"	v	typeref:struct:himedia_ops
hpst07	pr1000.h	/^		uint8_t hpst07:8; \/\/reg10$/;"	m	struct:__anon15::__anon16
hpst12	pr1000.h	/^		uint8_t hpst12:5;$/;"	m	struct:__anon15::__anon16
hsize	pr1000_drvcommon.h	/^	uint16_t hsize;$/;"	m	struct:__anon82
hst	pr1000.h	/^		uint8_t hst:7;$/;"	m	struct:__anon11::__anon12
hst	pr1000.h	/^		uint8_t hst:7;$/;"	m	struct:__anon15::__anon16
hstOs	pr1000.h	/^		uint8_t hstOs:3;$/;"	m	struct:__anon11::__anon12
hstOs	pr1000.h	/^		uint8_t hstOs:3;$/;"	m	struct:__anon15::__anon16
hstart	pr1000_drvcommon.h	/^	uint16_t hstart;$/;"	m	struct:__anon82
i2cRW_verify	pr1000.h	/^	uint8_t i2cRW_verify[MAX_PR1000_CHIP]; $/;"	m	struct:__anon22
i2cSlvAddr	pr1000.h	/^	uint8_t i2cSlvAddr;	\/\/mapping channel.$/;"	m	struct:__anon17
ignoreFrmEn	pr1000.h	/^		uint8_t ignoreFrmEn:1;$/;"	m	struct:__anon11::__anon12
ignoreLineEn	pr1000.h	/^		uint8_t ignoreLineEn:2;$/;"	m	struct:__anon11::__anon12
infoRegs	pr1000.h	/^	_stCeqInfoReg infoRegs;$/;"	m	struct:__anon21
initialized	pr1000.h	/^	uint8_t initialized[MAX_CHN];$/;"	m	struct:__anon24
irq	pr1000.h	/^	int			irq;$/;"	m	struct:__anon26
irqFlag	pr1000.h	/^	unsigned int		irqFlag;$/;"	m	struct:__anon26
irqMaster	pr1000.h	/^		uint8_t irqMaster:1;$/;"	m	struct:__anon9::__anon10
irqSlave1	pr1000.h	/^		uint8_t irqSlave1:1;$/;"	m	struct:__anon9::__anon10
irqSlave2	pr1000.h	/^		uint8_t irqSlave2:1;$/;"	m	struct:__anon9::__anon10
irqSlave3	pr1000.h	/^		uint8_t irqSlave3:1;$/;"	m	struct:__anon9::__anon10
irqTimer	pr1000.h	/^		uint8_t irqTimer:1;$/;"	m	struct:__anon9::__anon10
lastChromaLockTunn	pr1000.h	/^	int8_t lastChromaLockTunn[MAX_CHN]; \/\/Max 4chip * 4channel$/;"	m	struct:__anon22
lastRptNum	pr1000.h	/^		uint8_t lastRptNum:7;$/;"	m	struct:__anon15::__anon16
length	pr1000_ptz_table.h	/^	uint8_t length;$/;"	m	struct:__anon114
lineCnt	pr1000.h	/^		uint8_t lineCnt:5; \/\/reg1$/;"	m	struct:__anon11::__anon12
lineCnt	pr1000.h	/^		uint8_t lineCnt:5; \/\/reg1$/;"	m	struct:__anon15::__anon16
lineCnt	pr1000_drvcommon.h	/^	uint8_t lineCnt;$/;"	m	struct:__anon66
lineLen	pr1000.h	/^		uint8_t lineLen:6;$/;"	m	struct:__anon11::__anon12
lineLen	pr1000.h	/^		uint8_t lineLen:6;$/;"	m	struct:__anon15::__anon16
lock_chroma	pr1000.h	/^		uint8_t lock_chroma:1;$/;"	m	struct:__anon5::__anon6
lock_clamp	pr1000.h	/^		uint8_t lock_clamp:1;$/;"	m	struct:__anon5::__anon6
lock_gain	pr1000.h	/^		uint8_t lock_gain:1;$/;"	m	struct:__anon5::__anon6
lock_hperiod	pr1000.h	/^		uint8_t lock_hperiod:1;$/;"	m	struct:__anon5::__anon6
lock_hpll	pr1000.h	/^		uint8_t lock_hpll:1;$/;"	m	struct:__anon5::__anon6
lock_slice	pr1000.h	/^		uint8_t lock_slice:1;$/;"	m	struct:__anon3::__anon4
lock_std	pr1000.h	/^		uint8_t lock_std:1;$/;"	m	struct:__anon5::__anon6
logMemNum	pr1000.h	/^	uint8_t logMemNum;$/;"	m	struct:__anon25
lpfLen	pr1000.h	/^		uint8_t lpfLen:6;$/;"	m	struct:__anon11::__anon12
lvsens	pr1000_drvcommon.h	/^	uint16_t lvsens;$/;"	m	struct:__anon68
lvsens	pr1000_drvcommon.h	/^	uint16_t lvsens;$/;"	m	struct:__anon73
lvsens	pr1000_drvcommon.h	/^	uint8_t lvsens;$/;"	m	struct:__anon83
lvsens_high	pr1000_drvcommon.h	/^	uint16_t lvsens_high;$/;"	m	struct:__anon77
lvsens_high	pr1000_drvcommon.h	/^	uint16_t lvsens_high;$/;"	m	struct:__anon80
lvsens_low	pr1000_drvcommon.h	/^	uint16_t lvsens_low;$/;"	m	struct:__anon77
lvsens_low	pr1000_drvcommon.h	/^	uint16_t lvsens_low;$/;"	m	struct:__anon80
man_ifmt_ref	pr1000.h	/^		uint8_t man_ifmt_ref:2;$/;"	m	struct:__anon7::__anon8
man_ifmt_res	pr1000.h	/^		uint8_t man_ifmt_res:2;$/;"	m	struct:__anon7::__anon8
man_ifmt_std	pr1000.h	/^		uint8_t man_ifmt_std:2;$/;"	m	struct:__anon7::__anon8
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon31
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon34
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon35
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon36
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon37
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon38
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon39
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon40
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon56
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon57
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon58
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon59
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon60
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon61
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon62
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon63
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon64
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon65
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon66
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon67
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon68
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon69
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon70
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon71
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon72
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon73
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon74
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon75
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon76
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon77
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon78
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon79
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon80
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon81
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon82
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon83
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon84
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon85
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon86
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon87
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon89
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon90
mapChn	pr1000_drvcommon.h	/^	int mapChn;$/;"	m	struct:__anon91
maskBlendLevel	pr1000_drvcommon.h	/^	uint8_t maskBlendLevel;$/;"	m	struct:__anon63
maskBndrLevel	pr1000_drvcommon.h	/^	uint8_t maskBndrLevel;	\/\/0:100%white, 3:black$/;"	m	struct:__anon63
maskBndrWidth	pr1000_drvcommon.h	/^	uint8_t maskBndrWidth; \/\/0:disable mask cell boundray display.$/;"	m	struct:__anon63
maskBuf	pr1000_drvcommon.h	/^	uint32_t maskBuf[PR1000_MAX_MASK_CELL_Y_NUM];$/;"	m	struct:__anon64
maskColor	pr1000_drvcommon.h	/^	enum _pr1000_vevent_mask_color maskColor;$/;"	m	struct:__anon63	typeref:enum:__anon63::_pr1000_vevent_mask_color
maskType	pr1000_drvcommon.h	/^	enum _pr1000_vevent_mem_type maskType;$/;"	m	struct:__anon64	typeref:enum:__anon64::_pr1000_vevent_mem_type
max_pr1000_aud_bitrate	pr1000_table.h	/^	max_pr1000_aud_bitrate$/;"	e	enum:_pr1000_aud_bit_rate
max_pr1000_aud_format	pr1000_table.h	/^	max_pr1000_aud_format$/;"	e	enum:_pr1000_aud_format
max_pr1000_aud_samrate	pr1000_table.h	/^	max_pr1000_aud_samrate$/;"	e	enum:_pr1000_aud_sample_rate
max_pr1000_format	pr1000_table.h	/^	max_pr1000_format$/;"	e	enum:_pr1000_table_format
max_pr1000_inresol	pr1000_table.h	/^	max_pr1000_inresol$/;"	e	enum:_pr1000_table_inresol
max_pr1000_mux_chdef	pr1000_table.h	/^	max_pr1000_mux_chdef$/;"	e	enum:_pr1000_mux_chdef
max_pr1000_outresol	pr1000_table.h	/^	max_pr1000_outresol$/;"	e	enum:_pr1000_table_outresol
max_pr1000_ptz_cvi_table_command_lens	pr1000_ptz_table_cvi.h	/^	max_pr1000_ptz_cvi_table_command_lens$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
max_pr1000_ptz_cvi_table_command_other	pr1000_ptz_table_cvi.h	/^	max_pr1000_ptz_cvi_table_command_other$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
max_pr1000_ptz_cvi_table_command_ptz	pr1000_ptz_table_cvi.h	/^	max_pr1000_ptz_cvi_table_command_ptz$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
max_pr1000_ptz_table_command	pr1000_ptz_table.h	/^	max_pr1000_ptz_table_command$/;"	e	enum:_pr1000_ptz_table_command
memLength	pr1000.h	/^	uint32_t memLength[DRV_LOG_MEM_NUM];$/;"	m	struct:__anon25
monStep	pr1000.h	/^	uint8_t monStep;	\/\/ eq step$/;"	m	struct:__anon21
muxChCnt	pr1000_drvcommon.h	/^	enum _pr1000_vid_outformat_mux_type muxChCnt;	\/\/1ch multiplex, 2ch multiplex, 4ch multiplex$/;"	m	struct:__anon41	typeref:enum:__anon41::_pr1000_vid_outformat_mux_type
noAudMax	pr1000_drvcommon.h	/^	uint8_t noAudMax; 	\/\/on->noAud detect time. increase->fast$/;"	m	struct:__anon54
noAudMin	pr1000_drvcommon.h	/^	uint8_t noAudMin;	\/\/noAud->on detect time. decrease->fast$/;"	m	struct:__anon54
noAudThresholdCh0	pr1000_drvcommon.h	/^	uint8_t noAudThresholdCh0;$/;"	m	struct:__anon54
noAudThresholdCh1	pr1000_drvcommon.h	/^	uint8_t noAudThresholdCh1;$/;"	m	struct:__anon54
noAudThresholdCh2	pr1000_drvcommon.h	/^	uint8_t noAudThresholdCh2;$/;"	m	struct:__anon54
noAudThresholdCh3	pr1000_drvcommon.h	/^	uint8_t noAudThresholdCh3;$/;"	m	struct:__anon54
offset	pr1000_drvcommon.h	/^	int offset;$/;"	m	struct:__anon90
outfmt_bt656	pr1000_drvcommon.h	/^	uint8_t outfmt_bt656;$/;"	m	struct:__anon41
pCmd	pr1000_ptz_table.h	/^	const uint8_t *pCmd;$/;"	m	struct:__anon114
pData	pr1000_table.h	/^	uint16_t pData; \/\/page+Data$/;"	m	struct:__anon104
pData	pr1000_table.h	/^	uint16_t pData; \/\/page+Data$/;"	m	struct:__anon94
pData	pr1000_table.h	/^	uint16_t pData[(pr1000_outresol_1920x1080p25-pr1000_outresol_1280x720p60)+1];$/;"	m	struct:__anon109
pData	pr1000_table.h	/^	uint16_t pData[(pr1000_outresol_1920x1080p25-pr1000_outresol_1280x720p60)+1];$/;"	m	struct:__anon99
pData	pr1000_table.h	/^	uint16_t pData[max_pr1000_inresol-pr1000_inresol_1280x720p60][3]; \/\/rangeMin, rangeMax, factor;$/;"	m	struct:__anon103
pData	pr1000_table.h	/^	uint16_t pData[max_pr1000_inresol-pr1000_inresol_1280x720p60][3]; \/\/rangeMin, rangeMax, factor;$/;"	m	struct:__anon113
pData	pr1000_table.h	/^	uint16_t pData[max_pr1000_outresol-pr1000_outresol_1280x720p60];$/;"	m	struct:__anon106
pData	pr1000_table.h	/^	uint16_t pData[max_pr1000_outresol];$/;"	m	struct:__anon100
pData	pr1000_table.h	/^	uint16_t pData[max_pr1000_outresol];$/;"	m	struct:__anon110
pData	pr1000_table.h	/^	uint16_t pData[pr1000_inresol_1280x720p60][3]; \/\/rangeMin, rangeMax, factor;$/;"	m	struct:__anon102
pData	pr1000_table.h	/^	uint16_t pData[pr1000_inresol_1280x720p60][3]; \/\/rangeMin, rangeMax, factor;$/;"	m	struct:__anon112
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_1920x1080p25-pr1000_outresol_1280x720p60+1];$/;"	m	struct:__anon96
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_1920x1080p25s-pr1000_outresol_1280x720p60c+1];$/;"	m	struct:__anon107
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_1920x1080p25s-pr1000_outresol_1280x720p60c+1];$/;"	m	struct:__anon97
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_960x576i50+1];$/;"	m	struct:__anon105
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_960x576i50+1];$/;"	m	struct:__anon108
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_960x576i50+1];$/;"	m	struct:__anon95
pData	pr1000_table.h	/^	uint16_t pData[pr1000_outresol_960x576i50+1];$/;"	m	struct:__anon98
pMem	pr1000.h	/^	char *pMem[DRV_LOG_MEM_NUM];$/;"	m	struct:__anon25
pPatData	pr1000_drvcommon.h	/^	char *pPatData;$/;"	m	struct:__anon58
pPatFormat	pr1000_drvcommon.h	/^	char *pPatFormat;$/;"	m	struct:__anon58
pPatFormat	pr1000_drvcommon.h	/^	char *pPatFormat;$/;"	m	struct:__anon59
pPatStartData	pr1000_drvcommon.h	/^	char *pPatStartData;$/;"	m	struct:__anon59
pPatStartFormat	pr1000_drvcommon.h	/^	char *pPatStartFormat;$/;"	m	struct:__anon59
pPtzRxBuf	pr1000_drvcommon.h	/^	uint8_t *pPtzRxBuf;$/;"	m	struct:__anon62
page	pr1000_drvcommon.h	/^	uint8_t page;$/;"	m	struct:__anon30
pathEn	pr1000.h	/^		uint8_t pathEn:1;	\/\/reg0$/;"	m	struct:__anon11::__anon12
pathEn	pr1000.h	/^		uint8_t pathEn:1;	\/\/reg0$/;"	m	struct:__anon15::__anon16
pixOffset	pr1000.h	/^		uint8_t pixOffset:8; \/\/reg10$/;"	m	struct:__anon11::__anon12
portChClkPhase	pr1000_drvcommon.h	/^	int portChClkPhase[4][4]; \/\/ get from pr1000_user_config.c$/;"	m	struct:__anon41
portChSel	pr1000.h	/^	_stPortChSel portChSel[MAX_CHN]; \/\/ get from pr1000_user_config.c 16:max channel$/;"	m	struct:__anon22
portChSel	pr1000_drvcommon.h	/^	int portChSel[4]; $/;"	m	struct:__anon42
pr1000ProcFileOps	pr1000.c	/^static const struct file_operations pr1000ProcFileOps = {$/;"	v	typeref:struct:file_operations	file:
pr1000ProcLogFileOps	pr1000.c	/^static const struct file_operations pr1000ProcLogFileOps = {$/;"	v	typeref:struct:file_operations	file:
pr1000_aud_2scomplete	pr1000_table.h	/^	pr1000_aud_2scomplete = 0,$/;"	e	enum:_pr1000_aud_format
pr1000_aud_bitrate_128fs	pr1000_table.h	/^	pr1000_aud_bitrate_128fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_16fs	pr1000_table.h	/^	pr1000_aud_bitrate_16fs = 0,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_256fs	pr1000_table.h	/^	pr1000_aud_bitrate_256fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_320fs	pr1000_table.h	/^	pr1000_aud_bitrate_320fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_32fs	pr1000_table.h	/^	pr1000_aud_bitrate_32fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_384fs	pr1000_table.h	/^	pr1000_aud_bitrate_384fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_bitrate_64fs	pr1000_table.h	/^	pr1000_aud_bitrate_64fs,$/;"	e	enum:_pr1000_aud_bit_rate
pr1000_aud_g711a	pr1000_table.h	/^	pr1000_aud_g711a,$/;"	e	enum:_pr1000_aud_format
pr1000_aud_g711u	pr1000_table.h	/^	pr1000_aud_g711u,$/;"	e	enum:_pr1000_aud_format
pr1000_aud_samrate_16k	pr1000_table.h	/^	pr1000_aud_samrate_16k,$/;"	e	enum:_pr1000_aud_sample_rate
pr1000_aud_samrate_32k	pr1000_table.h	/^	pr1000_aud_samrate_32k,$/;"	e	enum:_pr1000_aud_sample_rate
pr1000_aud_samrate_48k	pr1000_table.h	/^	pr1000_aud_samrate_48k,$/;"	e	enum:_pr1000_aud_sample_rate
pr1000_aud_samrate_8k	pr1000_table.h	/^	pr1000_aud_samrate_8k = 0,$/;"	e	enum:_pr1000_aud_sample_rate
pr1000_aud_straight	pr1000_table.h	/^	pr1000_aud_straight,$/;"	e	enum:_pr1000_aud_format
pr1000_ceq_table_estAtten2_CVI	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estAtten2_CVI[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x12,(From Atten value)$/;"	v
pr1000_ceq_table_estAtten2_HDA	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estAtten2_HDA[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x12,(From Atten value)$/;"	v
pr1000_ceq_table_estAtten2_HDT	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estAtten2_HDT[MAX_PR1000_CEQ_TBL_NUM] =  \/\/0x12,(From Atten value)$/;"	v
pr1000_ceq_table_estAtten2_PVI	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estAtten2_PVI[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x12,(From Atten value)$/;"	v
pr1000_ceq_table_estAtten2_SD	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_SD pr1000_ceq_table_estAtten2_SD[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x12,(From Atten value)$/;"	v
pr1000_ceq_table_estComplex_CVI	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estComplex_CVI[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x13,(From Comp value), (distance>1200)?0x12(Atten value) $/;"	v
pr1000_ceq_table_estComplex_HDA	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estComplex_HDA[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x13,(From Comp value), (distance>1200)?0x12(Atten value)$/;"	v
pr1000_ceq_table_estComplex_HDT	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estComplex_HDT[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x13,(From Comp value), (distance>1200)?0x12(Atten value) $/;"	v
pr1000_ceq_table_estComplex_PVI	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_HD pr1000_ceq_table_estComplex_PVI[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x13,(From Comp value), (distance>1200)?0x12(Atten value) $/;"	v
pr1000_ceq_table_estComplex_SD	pr1000_ceqfunc.h	/^static const _PR1000_CEQ_TABLE_EST_SD pr1000_ceq_table_estComplex_SD[MAX_PR1000_CEQ_TBL_NUM] = \/\/0x13,(From Comp value), (distance>1200)?0x12(Atten value) $/;"	v
pr1000_close	pr1000.c	/^int pr1000_close(struct inode * inode, struct file * file)$/;"	f
pr1000_close	pr1000.c	/^int pr1000_close(void)$/;"	f
pr1000_dev	pr1000.c	/^static struct miscdevice pr1000_dev = {$/;"	v	typeref:struct:miscdevice	file:
pr1000_fops	pr1000.c	/^static struct file_operations pr1000_fops = {$/;"	v	typeref:struct:file_operations	file:
pr1000_format_CVI	pr1000_table.h	/^	pr1000_format_CVI,$/;"	e	enum:_pr1000_table_format
pr1000_format_HDA	pr1000_table.h	/^	pr1000_format_HDA,$/;"	e	enum:_pr1000_table_format
pr1000_format_HDT	pr1000_table.h	/^	pr1000_format_HDT,$/;"	e	enum:_pr1000_table_format
pr1000_format_HDT_NEW	pr1000_table.h	/^	pr1000_format_HDT_NEW,$/;"	e	enum:_pr1000_table_format
pr1000_format_PVI	pr1000_table.h	/^	pr1000_format_PVI,$/;"	e	enum:_pr1000_table_format
pr1000_format_SD720	pr1000_table.h	/^	pr1000_format_SD720 = 0,$/;"	e	enum:_pr1000_table_format
pr1000_format_SD960	pr1000_table.h	/^	pr1000_format_SD960,$/;"	e	enum:_pr1000_table_format
pr1000_freeze	pr1000.c	/^static int pr1000_freeze(struct himedia_device* pdev)$/;"	f	file:
pr1000_inresol_1280x720p25	pr1000_table.h	/^	pr1000_inresol_1280x720p25,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_1280x720p30	pr1000_table.h	/^	pr1000_inresol_1280x720p30,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_1280x720p50	pr1000_table.h	/^	pr1000_inresol_1280x720p50,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_1280x720p60	pr1000_table.h	/^	pr1000_inresol_1280x720p60,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_1920x1080p25	pr1000_table.h	/^	pr1000_inresol_1920x1080p25,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_1920x1080p30	pr1000_table.h	/^	pr1000_inresol_1920x1080p30,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_ntsc	pr1000_table.h	/^	pr1000_inresol_ntsc = 0,$/;"	e	enum:_pr1000_table_inresol
pr1000_inresol_pal	pr1000_table.h	/^	pr1000_inresol_pal,$/;"	e	enum:_pr1000_table_inresol
pr1000_ioctl	pr1000.c	/^long pr1000_ioctl(struct file *pFile, unsigned int cmd, unsigned long arg)  $/;"	f
pr1000_mask_attr_table_vevent	pr1000_table.c	/^const _stMaskCellAttr pr1000_mask_attr_table_vevent[max_pr1000_outresol] = $/;"	v
pr1000_module_exit	pr1000.c	/^module_exit(pr1000_module_exit);$/;"	v
pr1000_module_exit	pr1000.c	/^static void __exit pr1000_module_exit(void)$/;"	f	file:
pr1000_module_exit	pr1000.c	/^void pr1000_module_exit(void)$/;"	f
pr1000_module_init	pr1000.c	/^int pr1000_module_init(void)$/;"	f
pr1000_module_init	pr1000.c	/^module_init(pr1000_module_init);$/;"	v
pr1000_module_init	pr1000.c	/^static int __init pr1000_module_init(void)$/;"	f	file:
pr1000_mux_chdef_ch0_c	pr1000_table.h	/^	pr1000_mux_chdef_ch0_c,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch0_y	pr1000_table.h	/^	pr1000_mux_chdef_ch0_y = 0,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch1_c	pr1000_table.h	/^	pr1000_mux_chdef_ch1_c,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch1_y	pr1000_table.h	/^	pr1000_mux_chdef_ch1_y,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch2_c	pr1000_table.h	/^	pr1000_mux_chdef_ch2_c,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch2_y	pr1000_table.h	/^	pr1000_mux_chdef_ch2_y,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch3_c	pr1000_table.h	/^	pr1000_mux_chdef_ch3_c,$/;"	e	enum:_pr1000_mux_chdef
pr1000_mux_chdef_ch3_y	pr1000_table.h	/^	pr1000_mux_chdef_ch3_y,$/;"	e	enum:_pr1000_mux_chdef
pr1000_open	pr1000.c	/^int pr1000_open(struct inode * inode, struct file * file)$/;"	f
pr1000_open	pr1000.c	/^int pr1000_open(void)$/;"	f
pr1000_outresol_1280x720p25	pr1000_table.h	/^	pr1000_outresol_1280x720p25,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p25c	pr1000_table.h	/^	pr1000_outresol_1280x720p25c, \/\/640x720p25$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p30	pr1000_table.h	/^	pr1000_outresol_1280x720p30,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p30c	pr1000_table.h	/^	pr1000_outresol_1280x720p30c, \/\/640x720p30$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p50	pr1000_table.h	/^	pr1000_outresol_1280x720p50,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p50c	pr1000_table.h	/^	pr1000_outresol_1280x720p50c, \/\/640x720p50$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p60	pr1000_table.h	/^	pr1000_outresol_1280x720p60,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1280x720p60c	pr1000_table.h	/^	pr1000_outresol_1280x720p60c, \/\/640x720p60$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p25	pr1000_table.h	/^	pr1000_outresol_1920x1080p25,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p25c	pr1000_table.h	/^	pr1000_outresol_1920x1080p25c, \/\/960x1080p25$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p25s	pr1000_table.h	/^	pr1000_outresol_1920x1080p25s, \/\/1280x720p25$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p30	pr1000_table.h	/^	pr1000_outresol_1920x1080p30,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p30c	pr1000_table.h	/^	pr1000_outresol_1920x1080p30c, \/\/960x1080p30$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_1920x1080p30s	pr1000_table.h	/^	pr1000_outresol_1920x1080p30s, \/\/1280x720p30$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_720x480i60	pr1000_table.h	/^	pr1000_outresol_720x480i60 = 0,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_720x576i50	pr1000_table.h	/^	pr1000_outresol_720x576i50,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_960x480i60	pr1000_table.h	/^	pr1000_outresol_960x480i60,$/;"	e	enum:_pr1000_table_outresol
pr1000_outresol_960x576i50	pr1000_table.h	/^	pr1000_outresol_960x576i50,$/;"	e	enum:_pr1000_table_outresol
pr1000_poll	pr1000.c	/^unsigned int pr1000_poll(struct file *pFile, poll_table *pWait)$/;"	f
pr1000_poll	pr1000.c	/^unsigned int pr1000_poll(unsigned int waitMsec)$/;"	f
pr1000_ptz_cvi_table_command_LENS_CLOSE	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_CLOSE,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_FAR	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_FAR,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_NEAR	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_NEAR,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_OPEN	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_OPEN,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_RESERVED0	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_RESERVED0,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_TELE	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_TELE = 0,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_LENS_WIDE	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_LENS_WIDE,$/;"	e	enum:_pr1000_ptz_cvi_table_command_lens
pr1000_ptz_cvi_table_command_OTHER_ADD_TOUR	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_ADD_TOUR,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_PAT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_PAT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_SCAN	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_SCAN,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_TOUR	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_BEGIN_TO_TOUR,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CALL_PRESET	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CALL_PRESET,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_CLOSE	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_CLOSE,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_CONFIRM	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_CONFIRM,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_ENTERNEXT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_ENTERNEXT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVBK	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVBK,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVDW	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVDW,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVLF	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVLF,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVRG	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVRG,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVUP	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_MVUP,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_OPEN	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_CAM_MENU_SETUP_OPEN,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_DELETE_ALL_PRESET	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_DELETE_ALL_PRESET,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_DELETE_PRESET	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_DELETE_PRESET,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_FACTORY_DEFSET	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_FACTORY_DEFSET,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_H360_CONT_ROT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_H360_CONT_ROT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_H360_CONT_RSPEED	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_H360_CONT_RSPEED,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_RESET_SELF_CHK	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_RESET_SELF_CHK,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SCAN_TOUR_PAT_STOP	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SCAN_TOUR_PAT_STOP,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_PAT_TO_BEGIN	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_PAT_TO_BEGIN,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_PAT_TO_STOP	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_PAT_TO_STOP,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_PRESET	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_PRESET = 0,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_SCAN_LR_LIMIT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_SCAN_LR_LIMIT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_SCAN_RATE	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_SCAN_RATE,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_TOUR_SPEED	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_TOUR_SPEED,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_OTHER_SET_TOUR_STAY	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_OTHER_SET_TOUR_STAY,$/;"	e	enum:_pr1000_ptz_cvi_table_command_other
pr1000_ptz_cvi_table_command_PTZ_DOWN	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_DOWN,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_DOWN_LEFT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_DOWN_LEFT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_DOWN_RIGHT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_DOWN_RIGHT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_LEFT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_LEFT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_RESERVED0	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_RESERVED0,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_RIGHT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_RIGHT = 0,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_UP	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_UP,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_UP_LEFT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_UP_LEFT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_cvi_table_command_PTZ_UP_RIGHT	pr1000_ptz_table_cvi.h	/^	pr1000_ptz_cvi_table_command_PTZ_UP_RIGHT,$/;"	e	enum:_pr1000_ptz_cvi_table_command_ptz
pr1000_ptz_rxparam_cvi_def	pr1000_ptz_table_cvi.c	/^const _stPTZRxParam pr1000_ptz_rxparam_cvi_def[6] =$/;"	v
pr1000_ptz_rxparam_hda_def	pr1000_ptz_table_hda.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hda_def[6] =$/;"	v
pr1000_ptz_rxparam_hda_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hda_stdformat_def[6] =$/;"	v
pr1000_ptz_rxparam_hdt_def	pr1000_ptz_table_hdt.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hdt_def[6] =$/;"	v
pr1000_ptz_rxparam_hdt_new_def	pr1000_ptz_table_hdt.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hdt_new_def[6] =$/;"	v
pr1000_ptz_rxparam_hdt_new_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hdt_new_stdformat_def[6] =$/;"	v
pr1000_ptz_rxparam_hdt_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZRxParam pr1000_ptz_rxparam_hdt_stdformat_def[6] =$/;"	v
pr1000_ptz_rxparam_pvi_def	pr1000_ptz_table_pvi.c	/^const _stPTZRxParam pr1000_ptz_rxparam_pvi_def[6] =$/;"	v
pr1000_ptz_rxparam_sd_def	pr1000_ptz_table_sd.c	/^const _stPTZRxParam pr1000_ptz_rxparam_sd_def[2] =$/;"	v
pr1000_ptz_table_command_DIR_BOTTOM	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_BOTTOM,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_CLOSE	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_CLOSE,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_LEFT	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_LEFT,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_LEFT_BOTTOM	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_LEFT_BOTTOM,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_LEFT_TOP	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_LEFT_TOP,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_RIGHT	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_RIGHT,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_RIGHT_BOTTOM	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_RIGHT_BOTTOM,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_RIGHT_TOP	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_RIGHT_TOP,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_DIR_TOP	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_DIR_TOP,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_FOCUS_MINUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_FOCUS_MINUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_FOCUS_PLUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_FOCUS_PLUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_IRIS_MINUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_IRIS_MINUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_IRIS_PLUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_IRIS_PLUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_LENS_CLOSE	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_LENS_CLOSE,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_OSD_BOTTOM	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_OSD_BOTTOM,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_OSD_CENTER	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_OSD_CENTER,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_OSD_LEFT	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_OSD_LEFT,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_OSD_RIGHT	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_OSD_RIGHT,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_OSD_TOP	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_OSD_TOP = 0,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_RESERVED0	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_RESERVED0,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_ZOOM_MINUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_ZOOM_MINUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_command_ZOOM_PLUS	pr1000_ptz_table.h	/^	pr1000_ptz_table_command_ZOOM_PLUS,$/;"	e	enum:_pr1000_ptz_table_command
pr1000_ptz_table_cvi_DIR_BOTTOM	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_DIR_BOTTOM[21]= 	{0xA5,0x01,0x04,0x00,0x9F,0x00,0x49,0xA5,0x01,0x00,0x00,0x9F,0x00,0x45,0xA5,0x01,0x00,0x00,0x9F,0x00,0x45}; $/;"	v
pr1000_ptz_table_cvi_DIR_CLOSE	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_DIR_CLOSE[7] =	{0xA5,0x01,0x00,0x00,0x9F,0x00,0x45}; $/;"	v
pr1000_ptz_table_cvi_DIR_LEFT	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_DIR_LEFT[21] = 	{0xA5,0x01,0x02,0x9F,0x00,0x00,0x47,0xA5,0x01,0x00,0x9F,0x00,0x00,0x45,0xA5,0x01,0x00,0x9F,0x00,0x00,0x45};$/;"	v
pr1000_ptz_table_cvi_DIR_RIGHT	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_DIR_RIGHT[21] = 	{0xA5,0x01,0x01,0x9F,0x00,0x00,0x46,0xA5,0x01,0x00,0x9F,0x00,0x00,0x45,0xA5,0x01,0x00,0x9F,0x00,0x00,0x45}; $/;"	v
pr1000_ptz_table_cvi_DIR_TOP	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_DIR_TOP[21] = 	{0xA5,0x01,0x08,0x00,0x9F,0x00,0x4D,0xA5,0x01,0x00,0x00,0x9F,0x00,0x45,0xA5,0x01,0x00,0x00,0x9F,0x00,0x45}; $/;"	v
pr1000_ptz_table_cvi_FOCUS_MINUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_FOCUS_MINUS[21]=	{0xA5,0x01,0x48,0x00,0x00,0x00,0xEE,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_FOCUS_PLUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_FOCUS_PLUS[21]=	{0xA5,0x01,0x44,0x00,0x00,0x00,0xEA,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_IRIS_MINUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_IRIS_MINUS[21]=	{0xA5,0x01,0x60,0x00,0x00,0x00,0x06,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_IRIS_PLUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_IRIS_PLUS[21] =	{0xA5,0x01,0x50,0x00,0x00,0x00,0xF6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_LENS_CLOSE	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_LENS_CLOSE[7] =	{0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_LENS_CMD	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_LENS_CMD[7] = {$/;"	v
pr1000_ptz_table_cvi_OSD_BOTTOM	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_OSD_BOTTOM[7]=	{0xA5,0x01,0x89,0x05,0x00,0x00,0x34};$/;"	v
pr1000_ptz_table_cvi_OSD_LEFT	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_OSD_LEFT[7] = 	{0xA5,0x01,0x89,0x06,0x00,0x00,0x35};$/;"	v
pr1000_ptz_table_cvi_OSD_RIGHT	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_OSD_RIGHT[7] =	{0xA5,0x01,0x89,0x07,0x00,0x00,0x36};$/;"	v
pr1000_ptz_table_cvi_OSD_TOP	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_OSD_TOP[7] = 	{0xA5,0x01,0x89,0x04,0x00,0x00,0x33};$/;"	v
pr1000_ptz_table_cvi_OTHER_CMD	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_OTHER_CMD[29] = {$/;"	v
pr1000_ptz_table_cvi_PTZ_CMD	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_PTZ_CMD[9] = {$/;"	v
pr1000_ptz_table_cvi_ZOOM_MINUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_ZOOM_MINUS[21]=	{0xA5,0x01,0x42,0x00,0x00,0x00,0xE8,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_ZOOM_PLUS	pr1000_ptz_table_cvi.c	/^const uint8_t pr1000_ptz_table_cvi_ZOOM_PLUS[21] =	{0xA5,0x01,0x41,0x00,0x00,0x00,0xE7,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6,0xA5,0x01,0x40,0x00,0x00,0x00,0xE6}; $/;"	v
pr1000_ptz_table_cvi_rx_pat_format	pr1000_ptz_table_cvi.c	/^const unsigned char pr1000_ptz_table_cvi_rx_pat_format[((4*6)*3)] = $/;"	v
pr1000_ptz_table_cvi_rx_pat_start_data	pr1000_ptz_table_cvi.c	/^const unsigned char pr1000_ptz_table_cvi_rx_pat_start_data[(4*1)] = $/;"	v
pr1000_ptz_table_cvi_rx_pat_start_format	pr1000_ptz_table_cvi.c	/^const unsigned char pr1000_ptz_table_cvi_rx_pat_start_format[(4*1)] = $/;"	v
pr1000_ptz_table_cvi_tx_pat_data	pr1000_ptz_table_cvi.c	/^const unsigned char pr1000_ptz_table_cvi_tx_pat_data[((4*6)*3)] = $/;"	v
pr1000_ptz_table_cvi_tx_pat_format	pr1000_ptz_table_cvi.c	/^const unsigned char pr1000_ptz_table_cvi_tx_pat_format[((4*6)*3)] = $/;"	v
pr1000_ptz_table_cvicmd	pr1000_ptz_table_cvi.c	/^const _pr1000PTZCmd pr1000_ptz_table_cvicmd[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_hda_AUTO_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_AUTO_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_AUTO_STOP_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_AUTO_STOP_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_CLEAR_POINT_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_CLEAR_POINT_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_CMD_VALID_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_CMD_VALID_1080p[(4*6)] = $/;"	v
pr1000_ptz_table_hda_CMD_VALID_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_CMD_VALID_720p[(4*1)] = $/;"	v
pr1000_ptz_table_hda_DOWN_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_DOWN_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_DOWN_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_DOWN_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_ESCAPE_CODE0_2Byte_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ESCAPE_CODE0_2Byte_1080p[2] = $/;"	v
pr1000_ptz_table_hda_ESCAPE_CODE0_4Byte_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ESCAPE_CODE0_4Byte_720p[(4*1)] = $/;"	v
pr1000_ptz_table_hda_ESCAPE_CODE1_1Byte_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ESCAPE_CODE1_1Byte_1080p[1] = $/;"	v
pr1000_ptz_table_hda_FOCUS_FAR_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_FOCUS_FAR_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_FOCUS_FAR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_FOCUS_FAR_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_FOCUS_NEAR_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_FOCUS_NEAR_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_FOCUS_NEAR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_FOCUS_NEAR_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_GOTO_POINT_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_GOTO_POINT_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_IRIS_CLOSE_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_IRIS_CLOSE_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_IRIS_CLOSE_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_IRIS_CLOSE_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_IRIS_OPEN_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_IRIS_OPEN_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_IRIS_OPEN_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_IRIS_OPEN_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_LEFT_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_LEFT_1080p[(4*6)] = 	$/;"	v
pr1000_ptz_table_hda_LEFT_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_LEFT_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_LEFT_DOWN_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_LEFT_DOWN_1080p[(4*6)]= 	$/;"	v
pr1000_ptz_table_hda_LEFT_UP_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_LEFT_UP_1080p[(4*6)]= 	$/;"	v
pr1000_ptz_table_hda_OSD_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_OSD_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_PRESET1_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PRESET1_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_PRESET2_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PRESET2_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PRESET3_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PRESET3_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN1_SR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN1_SR_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN1_ST_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN1_ST_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN2_SR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN2_SR_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN2_ST_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN2_ST_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN3_SR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN3_SR_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_PTN3_ST_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_PTN3_ST_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_RESERVED0_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RESERVED0_1080p[(4*6)] = $/;"	v
pr1000_ptz_table_hda_RESERVED0_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RESERVED0_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_RESET_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RESET_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_RIGHT_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RIGHT_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_RIGHT_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RIGHT_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_RIGHT_DOWN_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RIGHT_DOWN_1080p[(4*6)]= 	$/;"	v
pr1000_ptz_table_hda_RIGHT_UP_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RIGHT_UP_1080p[(4*6)]= 	$/;"	v
pr1000_ptz_table_hda_RUN_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_RUN_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_SCAN_SR_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_SCAN_SR_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_SCAN_ST_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_SCAN_ST_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_SET_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_SET_1080p[(4*6)] = 	$/;"	v
pr1000_ptz_table_hda_SET_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_SET_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_SET_POINT_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_SET_POINT_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_UP_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_UP_1080p[(4*6)] = 	$/;"	v
pr1000_ptz_table_hda_UP_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_UP_720p[(4*1)] = 	$/;"	v
pr1000_ptz_table_hda_ZOOM_TELE_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ZOOM_TELE_1080p[(4*6)] =	$/;"	v
pr1000_ptz_table_hda_ZOOM_TELE_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ZOOM_TELE_720p[(4*1)] =	$/;"	v
pr1000_ptz_table_hda_ZOOM_WIDE_1080p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ZOOM_WIDE_1080p[(4*6)]=	$/;"	v
pr1000_ptz_table_hda_ZOOM_WIDE_720p	pr1000_ptz_table_hda.c	/^const uint8_t pr1000_ptz_table_hda_ZOOM_WIDE_720p[(4*1)]=	$/;"	v
pr1000_ptz_table_hda_rx_pat_format_1080p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_format_1080p[((3*4)*6)] = $/;"	v
pr1000_ptz_table_hda_rx_pat_format_720p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_format_720p[((3*2)*2)] = $/;"	v
pr1000_ptz_table_hda_rx_pat_start_data_1080p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_start_data_1080p[(3*1)] = $/;"	v
pr1000_ptz_table_hda_rx_pat_start_data_720p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_start_data_720p[(3*2)] = $/;"	v
pr1000_ptz_table_hda_rx_pat_start_format_1080p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_start_format_1080p[(3*1)] = $/;"	v
pr1000_ptz_table_hda_rx_pat_start_format_720p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_rx_pat_start_format_720p[(3*2)] = $/;"	v
pr1000_ptz_table_hda_stdformat_rx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hda_stdformat_rx_pat_format[((3*4)*6)] =$/;"	v
pr1000_ptz_table_hda_stdformat_rx_pat_start_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hda_stdformat_rx_pat_start_data[(3)] =$/;"	v
pr1000_ptz_table_hda_stdformat_rx_pat_start_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hda_stdformat_rx_pat_start_format[(3)] =$/;"	v
pr1000_ptz_table_hda_stdformat_tx_pat_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hda_stdformat_tx_pat_data[((3*4)*6)] =$/;"	v
pr1000_ptz_table_hda_stdformat_tx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hda_stdformat_tx_pat_format[((3*4)*6)] =$/;"	v
pr1000_ptz_table_hda_tx_pat_data_1080p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_tx_pat_data_1080p[((3*4)*6)] = $/;"	v
pr1000_ptz_table_hda_tx_pat_data_720p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_tx_pat_data_720p[((3*2)*2)] = $/;"	v
pr1000_ptz_table_hda_tx_pat_format_1080p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_tx_pat_format_1080p[((3*4)*6)] = $/;"	v
pr1000_ptz_table_hda_tx_pat_format_720p	pr1000_ptz_table_hda.c	/^const unsigned char pr1000_ptz_table_hda_tx_pat_format_720p[((3*2)*2)] = $/;"	v
pr1000_ptz_table_hdacmd_1080p	pr1000_ptz_table_hda.c	/^const _pr1000PTZCmd pr1000_ptz_table_hdacmd_1080p[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_hdacmd_720p	pr1000_ptz_table_hda.c	/^const _pr1000PTZCmd pr1000_ptz_table_hdacmd_720p[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_hdt_CENTER	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_CENTER[(4*2)]=		{0xB5,0x00,0x17,0x5F,\/**\/0x00,0x00,0x00,0x2B,}; $/;"	v
pr1000_ptz_table_hdt_CMD_VALID	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_CMD_VALID[(4*2)] = 		{0xFF,0xFF,0xFF,0x00,\/**\/0x00,0xFF,0xFF,0x00,};\/\/ define rx compare byte. 1's compare bit$/;"	v
pr1000_ptz_table_hdt_DIR_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_BOTTOM[(4*2)]= 		{0xB5,0x00,0x07,0x24,\/**\/0x00,0x00,0x00,0xE0,};$/;"	v
pr1000_ptz_table_hdt_DIR_LEFT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_LEFT[(4*2)] = 		{0xB5,0x00,0x09,0x00,\/**\/0x24,0x00,0x00,0xE2,}; $/;"	v
pr1000_ptz_table_hdt_DIR_LEFT_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_LEFT_BOTTOM[(4*2)] = 	{0xB5,0x00,0x0B,0x24,\/**\/0x24,0x00,0x00,0x08,};$/;"	v
pr1000_ptz_table_hdt_DIR_LEFT_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_LEFT_TOP[(4*2)] = 	{0xB5,0x00,0x0A,0x24,\/**\/0x24,0x00,0x00,0x07,};$/;"	v
pr1000_ptz_table_hdt_DIR_RIGHT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_RIGHT[(4*2)] = 		{0xB5,0x00,0x08,0x00,\/**\/0x24,0x00,0x00,0xE1,}; $/;"	v
pr1000_ptz_table_hdt_DIR_RIGHT_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_RIGHT_BOTTOM[(4*2)]= 	{0xB5,0x00,0x0D,0x24,\/**\/0x24,0x00,0x00,0x0A,};$/;"	v
pr1000_ptz_table_hdt_DIR_RIGHT_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_RIGHT_TOP[(4*2)] = 	{0xB5,0x00,0x0C,0x24,\/**\/0x24,0x00,0x00,0x0B,};$/;"	v
pr1000_ptz_table_hdt_DIR_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_DIR_TOP[(4*2)] = 		{0xB5,0x00,0x06,0x24,\/**\/0x00,0x00,0x00,0xDF,};$/;"	v
pr1000_ptz_table_hdt_FOCUS_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_FOCUS_MINUS[(4*2)]=		{0xB5,0x00,0x11,0x00,\/**\/0x00,0x00,0x00,0xC6,};$/;"	v
pr1000_ptz_table_hdt_FOCUS_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_FOCUS_PLUS[(4*2)] =		{0xB5,0x00,0x10,0x00,\/**\/0x00,0x00,0x00,0xC5,};$/;"	v
pr1000_ptz_table_hdt_IRIS_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_IRIS_MINUS[(4*2)]=		{0xB5,0x00,0x0E,0x00,\/**\/0x00,0x00,0x00,0xC3,};$/;"	v
pr1000_ptz_table_hdt_IRIS_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_IRIS_PLUS[(4*2)] =		{0xB5,0x00,0x0F,0x00,\/**\/0x00,0x00,0x00,0xC4,};$/;"	v
pr1000_ptz_table_hdt_OSD_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_OSD_BOTTOM[(4*2)]=		{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_OSD_LEFT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_OSD_LEFT[(4*2)] = 		{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_OSD_RIGHT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_OSD_RIGHT[(4*2)] =		{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_OSD_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_OSD_TOP[(4*2)] = 		{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_RESERVED0	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_RESERVED0[(4*2)]       = 	{0xB5,0x00,0x14,0x00,\/**\/0x00,0x00,0x00,0xC9,}; \/\/KEY STOP$/;"	v
pr1000_ptz_table_hdt_ZOOM_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_ZOOM_MINUS[(4*2)]=		{0xB5,0x00,0x12,0x04,\/**\/0x00,0x00,0x00,0xCB,};$/;"	v
pr1000_ptz_table_hdt_ZOOM_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_ZOOM_PLUS[(4*2)] =		{0xB5,0x00,0x13,0x04,\/**\/0x00,0x00,0x00,0xCC,};$/;"	v
pr1000_ptz_table_hdt_chgold_rx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_chgold_rx_pat_format[((5)*2)] = $/;"	v
pr1000_ptz_table_hdt_chgold_rx_pat_start_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_chgold_rx_pat_start_data[(5)] = $/;"	v
pr1000_ptz_table_hdt_chgold_rx_pat_start_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_chgold_rx_pat_start_format[(5)] = $/;"	v
pr1000_ptz_table_hdt_chgold_tx_pat_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_chgold_tx_pat_data[((5)*2)] = $/;"	v
pr1000_ptz_table_hdt_chgold_tx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_chgold_tx_pat_format[((5)*2)] = $/;"	v
pr1000_ptz_table_hdt_new_CENTER	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_CENTER[(4*2)]=		{0xB5,0x00,0x17,0x5F,\/**\/0x00,0x00,0x00,0x2B,}; $/;"	v
pr1000_ptz_table_hdt_new_CMD_VALID	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_CMD_VALID[(4*2)] = 	{0xFF,0xFF,0xFF,0x00,\/**\/0x00,0xFF,0xFF,0x00,};\/\/ define rx compare byte. 1's compare bit$/;"	v
pr1000_ptz_table_hdt_new_DIR_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_BOTTOM[(4*2)]= 	{0xB5,0x00,0x07,0x24,\/**\/0x00,0x00,0x00,0xE0,};$/;"	v
pr1000_ptz_table_hdt_new_DIR_LEFT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_LEFT[(4*2)] = 	{0xB5,0x00,0x09,0x00,\/**\/0x24,0x00,0x00,0xE2,}; $/;"	v
pr1000_ptz_table_hdt_new_DIR_LEFT_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_LEFT_BOTTOM[(4*2)] = {0xB5,0x00,0x0B,0x24,\/**\/0x24,0x00,0x00,0x08,};$/;"	v
pr1000_ptz_table_hdt_new_DIR_LEFT_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_LEFT_TOP[(4*2)] = 	{0xB5,0x00,0x0A,0x24,\/**\/0x24,0x00,0x00,0x07,};$/;"	v
pr1000_ptz_table_hdt_new_DIR_RIGHT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_RIGHT[(4*2)] = 	{0xB5,0x00,0x08,0x00,\/**\/0x24,0x00,0x00,0xE1,}; $/;"	v
pr1000_ptz_table_hdt_new_DIR_RIGHT_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_RIGHT_BOTTOM[(4*2)]= {0xB5,0x00,0x0D,0x24,\/**\/0x24,0x00,0x00,0x0A,};$/;"	v
pr1000_ptz_table_hdt_new_DIR_RIGHT_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_RIGHT_TOP[(4*2)] = 	{0xB5,0x00,0x0C,0x24,\/**\/0x24,0x00,0x00,0x0B,};$/;"	v
pr1000_ptz_table_hdt_new_DIR_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_DIR_TOP[(4*2)] = 	{0xB5,0x00,0x06,0x24,\/**\/0x00,0x00,0x00,0xDF,};$/;"	v
pr1000_ptz_table_hdt_new_FOCUS_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_FOCUS_MINUS[(4*2)]=	{0xB5,0x00,0x11,0x00,\/**\/0x00,0x00,0x00,0xC6,};$/;"	v
pr1000_ptz_table_hdt_new_FOCUS_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_FOCUS_PLUS[(4*2)] =	{0xB5,0x00,0x10,0x00,\/**\/0x00,0x00,0x00,0xC5,};$/;"	v
pr1000_ptz_table_hdt_new_IRIS_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_IRIS_MINUS[(4*2)]=	{0xB5,0x00,0x0E,0x00,\/**\/0x00,0x00,0x00,0xC3,};$/;"	v
pr1000_ptz_table_hdt_new_IRIS_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_IRIS_PLUS[(4*2)] =	{0xB5,0x00,0x0F,0x00,\/**\/0x00,0x00,0x00,0xC4,};$/;"	v
pr1000_ptz_table_hdt_new_OSD_BOTTOM	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_OSD_BOTTOM[(4*2)]=	{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_new_OSD_LEFT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_OSD_LEFT[(4*2)] = 	{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_new_OSD_RIGHT	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_OSD_RIGHT[(4*2)] =	{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_new_OSD_TOP	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_OSD_TOP[(4*2)] = 	{0xFF,0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0xFF,};$/;"	v
pr1000_ptz_table_hdt_new_RESERVED0	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_RESERVED0[(4*2)]       = {0xB5,0x00,0x14,0x00,\/**\/0x00,0x00,0x00,0xC9,}; \/\/KEY STOP$/;"	v
pr1000_ptz_table_hdt_new_ZOOM_MINUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_ZOOM_MINUS[(4*2)]=	{0xB5,0x00,0x12,0x04,\/**\/0x00,0x00,0x00,0xCB,};$/;"	v
pr1000_ptz_table_hdt_new_ZOOM_PLUS	pr1000_ptz_table_hdt.c	/^const uint8_t pr1000_ptz_table_hdt_new_ZOOM_PLUS[(4*2)] =	{0xB5,0x00,0x13,0x04,\/**\/0x00,0x00,0x00,0xCC,};$/;"	v
pr1000_ptz_table_hdt_new_rx_pat_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_new_rx_pat_format[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdt_new_rx_pat_start_data	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_new_rx_pat_start_data[(5*1)] = $/;"	v
pr1000_ptz_table_hdt_new_rx_pat_start_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_new_rx_pat_start_format[(5*1)] = $/;"	v
pr1000_ptz_table_hdt_new_tx_pat_data	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_new_tx_pat_data[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdt_new_tx_pat_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_new_tx_pat_format[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdt_newcmd	pr1000_ptz_table_hdt.c	/^const _pr1000PTZCmd pr1000_ptz_table_hdt_newcmd[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_hdt_rx_pat_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_rx_pat_format[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdt_rx_pat_start_data	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_rx_pat_start_data[(5*1)] = $/;"	v
pr1000_ptz_table_hdt_rx_pat_start_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_rx_pat_start_format[(5*1)] = $/;"	v
pr1000_ptz_table_hdt_stdformat_rx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_stdformat_rx_pat_format[(5)] = $/;"	v
pr1000_ptz_table_hdt_stdformat_rx_pat_start_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_stdformat_rx_pat_start_data[(5)] = $/;"	v
pr1000_ptz_table_hdt_stdformat_rx_pat_start_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_stdformat_rx_pat_start_format[(5)] = $/;"	v
pr1000_ptz_table_hdt_stdformat_tx_pat_data	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_stdformat_tx_pat_data[((5)*2)] = $/;"	v
pr1000_ptz_table_hdt_stdformat_tx_pat_format	pr1000_ptz_drvtable.c	/^const unsigned char pr1000_ptz_table_hdt_stdformat_tx_pat_format[((5)*2)] = $/;"	v
pr1000_ptz_table_hdt_tx_pat_data	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_tx_pat_data[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdt_tx_pat_format	pr1000_ptz_table_hdt.c	/^const unsigned char pr1000_ptz_table_hdt_tx_pat_format[((5*1)*2)] = $/;"	v
pr1000_ptz_table_hdtcmd	pr1000_ptz_table_hdt.c	/^const _pr1000PTZCmd pr1000_ptz_table_hdtcmd[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_pvi_CMD_VALID	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_CMD_VALID[(7)] = 	{0xFF,0xFF,0xFF,\/**\/0xFF,0xFF,0xFF,0x00,};\/\/ define rx compare byte. 1's compare bit$/;"	v
pr1000_ptz_table_pvi_FOCUS_MINUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_FOCUS_MINUS[(7)]=	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_FOCUS_PLUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_FOCUS_PLUS[(7)] =	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_IRIS_MINUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_IRIS_MINUS[(7)]=	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_IRIS_PLUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_IRIS_PLUS[(7)] =	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_OSD_BOTTOM	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_OSD_BOTTOM[(7)]=	{0x00,0x00,0x02,\/**\/0xAA,0x00,0x00,0xAC,};$/;"	v
pr1000_ptz_table_pvi_OSD_CENTER	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_OSD_CENTER[(7)]=	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_OSD_LEFT	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_OSD_LEFT[(7)] = 	{0x00,0x00,0x01,\/**\/0xAA,0x00,0x00,0xAB,};$/;"	v
pr1000_ptz_table_pvi_OSD_RIGHT	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_OSD_RIGHT[(7)] =	{0x00,0x00,0x04,\/**\/0xAA,0x00,0x00,0xAE,};$/;"	v
pr1000_ptz_table_pvi_OSD_TOP	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_OSD_TOP[(7)] = 	{0x00,0x00,0x08,\/**\/0xAA,0x00,0x00,0xB2,};$/;"	v
pr1000_ptz_table_pvi_ZOOM_MINUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_ZOOM_MINUS[(7)]=	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_ZOOM_PLUS	pr1000_ptz_table_pvi.c	/^const uint8_t pr1000_ptz_table_pvi_ZOOM_PLUS[(7)] =	{0x00,0x00,0x00,\/**\/0xAA,0x00,0x00,0xAA,};$/;"	v
pr1000_ptz_table_pvi_rx_pat_format	pr1000_ptz_table_pvi.c	/^const unsigned char pr1000_ptz_table_pvi_rx_pat_format[((3*4)*2)] = $/;"	v
pr1000_ptz_table_pvi_rx_pat_start_data	pr1000_ptz_table_pvi.c	/^const unsigned char pr1000_ptz_table_pvi_rx_pat_start_data[(3*1)] = $/;"	v
pr1000_ptz_table_pvi_rx_pat_start_format	pr1000_ptz_table_pvi.c	/^const unsigned char pr1000_ptz_table_pvi_rx_pat_start_format[(3*1)] = $/;"	v
pr1000_ptz_table_pvi_tx_pat_data	pr1000_ptz_table_pvi.c	/^const unsigned char pr1000_ptz_table_pvi_tx_pat_data[((3*4)*2)] = $/;"	v
pr1000_ptz_table_pvi_tx_pat_format	pr1000_ptz_table_pvi.c	/^const unsigned char pr1000_ptz_table_pvi_tx_pat_format[((3*4)*2)] = $/;"	v
pr1000_ptz_table_pvicmd	pr1000_ptz_table_pvi.c	/^const _pr1000PTZCmd pr1000_ptz_table_pvicmd[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_table_sd_CMD_VALID	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_CMD_VALID[(4)] = 	{0xFF,0xFF,0xFF,0xFF,};\/\/ define rx compare byte. 1's compare bit$/;"	v
pr1000_ptz_table_sd_FOCUS_PLUS	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_FOCUS_PLUS[(4)] = 	{0x00,0x03,0x00,0x5F,};$/;"	v
pr1000_ptz_table_sd_OSD_BOTTOM	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_OSD_BOTTOM[(4)]=	{0x00,0x10,0x10,0x10,};$/;"	v
pr1000_ptz_table_sd_OSD_CENTER	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_OSD_CENTER[(4)] = 	{0x02,0x00,0x00,0x00,};$/;"	v
pr1000_ptz_table_sd_OSD_LEFT	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_OSD_LEFT[(4)] = 	{0x00,0x04,0x10,0x10,};$/;"	v
pr1000_ptz_table_sd_OSD_RIGHT	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_OSD_RIGHT[(4)] =	{0x00,0x02,0x10,0x10,};$/;"	v
pr1000_ptz_table_sd_OSD_TOP	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_OSD_TOP[(4)] = 	{0x00,0x08,0x10,0x10,};$/;"	v
pr1000_ptz_table_sd_RESERVED0	pr1000_ptz_table_sd.c	/^const uint8_t pr1000_ptz_table_sd_RESERVED0[(4)] = 	{0x00,0x00,0x00,0x00,};$/;"	v
pr1000_ptz_table_sd_rx_pat_format	pr1000_ptz_table_sd.c	/^const unsigned char pr1000_ptz_table_sd_rx_pat_format[((6)*2)] = $/;"	v
pr1000_ptz_table_sd_rx_pat_start_data	pr1000_ptz_table_sd.c	/^const unsigned char pr1000_ptz_table_sd_rx_pat_start_data[(6)] = $/;"	v
pr1000_ptz_table_sd_rx_pat_start_format	pr1000_ptz_table_sd.c	/^const unsigned char pr1000_ptz_table_sd_rx_pat_start_format[(6)] = $/;"	v
pr1000_ptz_table_sd_tx_pat_data	pr1000_ptz_table_sd.c	/^const unsigned char pr1000_ptz_table_sd_tx_pat_data[((6)*2)] = $/;"	v
pr1000_ptz_table_sd_tx_pat_format	pr1000_ptz_table_sd.c	/^const unsigned char pr1000_ptz_table_sd_tx_pat_format[((6)*2)] = $/;"	v
pr1000_ptz_table_sdcmd	pr1000_ptz_table_sd.c	/^const _pr1000PTZCmd pr1000_ptz_table_sdcmd[max_pr1000_ptz_table_command] = $/;"	v
pr1000_ptz_txparam_cvi_def	pr1000_ptz_table_cvi.c	/^const _stPTZTxParam pr1000_ptz_txparam_cvi_def[6] =$/;"	v
pr1000_ptz_txparam_hda_def	pr1000_ptz_table_hda.c	/^const _stPTZTxParam pr1000_ptz_txparam_hda_def[6] =$/;"	v
pr1000_ptz_txparam_hda_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZTxParam pr1000_ptz_txparam_hda_stdformat_def[6] =$/;"	v
pr1000_ptz_txparam_hdt_def	pr1000_ptz_table_hdt.c	/^const _stPTZTxParam pr1000_ptz_txparam_hdt_def[6] =$/;"	v
pr1000_ptz_txparam_hdt_new_def	pr1000_ptz_table_hdt.c	/^const _stPTZTxParam pr1000_ptz_txparam_hdt_new_def[6] =$/;"	v
pr1000_ptz_txparam_hdt_new_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZTxParam pr1000_ptz_txparam_hdt_new_stdformat_def[6] =$/;"	v
pr1000_ptz_txparam_hdt_stdformat_def	pr1000_ptz_drvtable.c	/^const _stPTZTxParam pr1000_ptz_txparam_hdt_stdformat_def[6] =$/;"	v
pr1000_ptz_txparam_pvi_def	pr1000_ptz_table_pvi.c	/^const _stPTZTxParam pr1000_ptz_txparam_pvi_def[6] =$/;"	v
pr1000_ptz_txparam_sd_def	pr1000_ptz_table_sd.c	/^const _stPTZTxParam pr1000_ptz_txparam_sd_def[2] =$/;"	v
pr1000_reg_table_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_common[1+(4*4*7)+1] = $/;"	v
pr1000_reg_table_ptz_CVI	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_HD pr1000_reg_table_ptz_CVI[1+3+4+1] = $/;"	v
pr1000_reg_table_ptz_CVI_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_CVI_common[13+5+11+13] = $/;"	v
pr1000_reg_table_ptz_HDA	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_HD pr1000_reg_table_ptz_HDA[1+3+3+1] = $/;"	v
pr1000_reg_table_ptz_HDA_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_HDA_common[13+5+12+13] = $/;"	v
pr1000_reg_table_ptz_HDT	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_HD pr1000_reg_table_ptz_HDT[1+3+3+1] = $/;"	v
pr1000_reg_table_ptz_HDT_NEW	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_HD pr1000_reg_table_ptz_HDT_NEW[1+3+3+1] = $/;"	v
pr1000_reg_table_ptz_HDT_NEW_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_HDT_NEW_common[13+5+13+1] = $/;"	v
pr1000_reg_table_ptz_HDT_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_HDT_common[13+5+12+1] = $/;"	v
pr1000_reg_table_ptz_PVI	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_HD pr1000_reg_table_ptz_PVI[1+3+3+1] = $/;"	v
pr1000_reg_table_ptz_PVI_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_PVI_common[13+5+12+13] = $/;"	v
pr1000_reg_table_ptz_SD	pr1000_table.c	/^const _PR1000_REG_TABLE_PTZ_SD pr1000_reg_table_ptz_SD[6+2+5] = $/;"	v
pr1000_reg_table_ptz_SD_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_ptz_SD_common[8+6+12] = $/;"	v
pr1000_reg_table_vdec_CVI	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD pr1000_reg_table_vdec_CVI[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_CVI_extend	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD_EXTEND pr1000_reg_table_vdec_CVI_extend[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDA	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD pr1000_reg_table_vdec_HDA[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDA_extend	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD_EXTEND pr1000_reg_table_vdec_HDA_extend[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDT	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD pr1000_reg_table_vdec_HDT[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDT_NEW	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD pr1000_reg_table_vdec_HDT_NEW[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDT_NEW_extend	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD_EXTEND pr1000_reg_table_vdec_HDT_NEW_extend[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_HDT_extend	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD_EXTEND pr1000_reg_table_vdec_HDT_extend[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_PVI	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD pr1000_reg_table_vdec_PVI[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_PVI_extend	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_HD_EXTEND pr1000_reg_table_vdec_PVI_extend[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_SD	pr1000_table.c	/^const _PR1000_REG_TABLE_VDEC_SD pr1000_reg_table_vdec_SD[4+16+12+11+16+5+1+1] = $/;"	v
pr1000_reg_table_vdec_common	pr1000_table.c	/^const _PR1000_REG_TABLE_COMMON pr1000_reg_table_vdec_common[16+4+5+11+6+16+1] = $/;"	v
pr1000_reg_table_vevent	pr1000_table.c	/^const _PR1000_REG_TABLE_VEVENT pr1000_reg_table_vevent[14+13+10] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config.c.Ch_HPGK_2chipcascade_8bit_dualedge_720p_VD3out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_1080p_VD23out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config.c.Ch_HPGK_4chip_nocascade_8bit_dualedge_720p_VD3out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config.c.Ch_HPGK_4chipcascade_8bit_dualedge_720p_VD3out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_1chip_8bit_1080p_VD1234out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD12out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_1chip_8bit_dualedge_1080p_VD34out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_1chip_8bit_dualedge_720p_VD34out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_2chipcascade_8bit_dualedge_1080p_VD34out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_4chipcascade_8bit_dualedge_1080p_VD12out.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_reg_table_vidout_format	pr1000_user_config_sample_nonLinux.c	/^const _PR1000_REG_TABLE_VIDOUT_FORMAT pr1000_reg_table_vidout_format[MAX_PR1000_VID_OUTF_MUX_TYPE][2][MAX_PR1000_VID_OUTF_RESOL_TYPE] = $/;"	v
pr1000_restore	pr1000.c	/^static int pr1000_restore(struct himedia_device* pdev)$/;"	f	file:
prChip	pr1000.h	/^	uint8_t prChip;	\/\/chip num(0~3).$/;"	m	struct:__anon17
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon32
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon42
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon43
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon44
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon45
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon46
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon47
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon48
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon49
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon50
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon51
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon52
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon53
prChip	pr1000_drvcommon.h	/^	uint8_t prChip;$/;"	m	struct:__anon54
prChn	pr1000.h	/^	uint8_t prChn;	\/\/channel of chip(0~3).$/;"	m	struct:__anon17
prChn	pr1000_drvcommon.h	/^	uint8_t prChn;	\/\/0:normal$/;"	m	struct:__anon42
prChn	pr1000_drvcommon.h	/^	uint8_t prChn;$/;"	m	struct:__anon33
prChn	pr1000_drvcommon.h	/^	uint8_t prChn;$/;"	m	struct:__anon44
prChn	pr1000_drvcommon.h	/^	uint8_t prChn;$/;"	m	struct:__anon49
prChn	pr1000_drvcommon.h	/^	uint8_t prChn;$/;"	m	struct:__anon53
procFp	pr1000.h	/^	struct proc_dir_entry	*procFp;$/;"	m	struct:__anon26	typeref:struct:__anon26::proc_dir_entry
procFpLog	pr1000.h	/^	struct proc_dir_entry	*procFpLog;$/;"	m	struct:__anon26	typeref:struct:__anon26::proc_dir_entry
procFpRegDump	pr1000.h	/^	struct proc_dir_entry 	*procFpRegDump;$/;"	m	struct:__anon26	typeref:struct:__anon26::proc_dir_entry
procFpRegWrite	pr1000.h	/^	struct proc_dir_entry 	*procFpRegWrite;$/;"	m	struct:__anon26	typeref:struct:__anon26::proc_dir_entry
procRegDumpStr0	pr1000.h	/^	char procRegDumpStr0[PAGE_SIZE-80];$/;"	m	struct:__anon26
procRegWriteStr0	pr1000.h	/^	char procRegWriteStr0[PAGE_SIZE-80];$/;"	m	struct:__anon26
ptzCmd	pr1000_drvcommon.h	/^	uint8_t ptzCmd[MAX_PTZ_CMD_LENGTH];$/;"	m	struct:__anon61
ptzCmdLength	pr1000_drvcommon.h	/^	uint16_t ptzCmdLength;$/;"	m	struct:__anon61
ptzHost	pr1000.h	/^	_ptzHost		ptzHost;$/;"	m	struct:__anon26
ptzRecvQ	pr1000.h	/^	FIFO ptzRecvQ[MAX_CHN];$/;"	m	struct:__anon24
ptzResol	pr1000.h	/^	uint8_t ptzResol[MAX_CHN];$/;"	m	struct:__anon24
ptzType	pr1000.h	/^	uint8_t ptzType[MAX_CHN];$/;"	m	struct:__anon24
ref	pr1000_drvcommon.h	/^	uint8_t ref; $/;"	m	struct:__anon33
reg	pr1000.h	/^	uint8_t reg;$/;"	m	union:__anon3
reg	pr1000.h	/^	uint8_t reg;$/;"	m	union:__anon5
reg	pr1000.h	/^	uint8_t reg;$/;"	m	union:__anon7
reg	pr1000.h	/^	uint8_t reg;$/;"	m	union:__anon9
reg	pr1000.h	/^	uint8_t reg[12];$/;"	m	union:__anon18
reg	pr1000.h	/^	uint8_t reg[14];$/;"	m	union:__anon11
reg	pr1000.h	/^	uint8_t reg[15];$/;"	m	union:__anon15
reg	pr1000.h	/^	uint8_t reg[8];$/;"	m	union:__anon13
reg	pr1000_drvcommon.h	/^	uint8_t reg;$/;"	m	struct:__anon30
reg_addr	gpio_i2c.h	/^	unsigned int reg_addr; $/;"	m	struct:hiI2C_DATA_S
reg_page	gpio_i2c.h	/^	unsigned char reg_page;$/;"	m	struct:hiI2C_DATA_S
res	pr1000_drvcommon.h	/^	uint8_t res; $/;"	m	struct:__anon33
reserved	pr1000.h	/^		uint8_t reserved:2;$/;"	m	struct:__anon7::__anon8
reserved0	pr1000.h	/^		uint8_t reserved0:1;$/;"	m	struct:__anon13::__anon14
reserved0	pr1000.h	/^		uint8_t reserved0:2; \/\/reg9$/;"	m	struct:__anon11::__anon12
reserved0	pr1000.h	/^		uint8_t reserved0:3;$/;"	m	struct:__anon15::__anon16
reserved0	pr1000.h	/^		uint8_t reserved0:3;$/;"	m	struct:__anon9::__anon10
reserved1	pr1000.h	/^		uint8_t reserved1:2; \/\/reg11$/;"	m	struct:__anon11::__anon12
reserved1	pr1000.h	/^		uint8_t reserved1:3; \/\/reg9$/;"	m	struct:__anon15::__anon16
reserved1	pr1000.h	/^		uint8_t reserved1:4;$/;"	m	struct:__anon13::__anon14
reserved2	pr1000.h	/^		uint8_t reserved2:1;$/;"	m	struct:__anon13::__anon14
reserved2	pr1000.h	/^		uint8_t reserved2:2; \/\/reg11$/;"	m	struct:__anon15::__anon16
reserved2	pr1000.h	/^		uint8_t reserved2:3;$/;"	m	struct:__anon11::__anon12
reserved3	pr1000.h	/^		uint8_t reserved3:4;$/;"	m	struct:__anon13::__anon14
resol	pr1000_drvcommon.h	/^	enum _pr1000_vid_outformat_resol_type resol;$/;"	m	struct:__anon41	typeref:enum:__anon41::_pr1000_vid_outformat_resol_type
resol	pr1000_drvcommon.h	/^	uint8_t resol;	\/\/enum _pr1000_table_outresol$/;"	m	struct:__anon65
resol	pr1000_drvcommon.h	/^	uint8_t resol; \/\/enum _pr1000_table_outresol$/;"	m	struct:__anon31
resol	pr1000_drvcommon.h	/^	uint8_t resol;$/;"	m	struct:__anon87
retryCnt	pr1000.h	/^	uint8_t retryCnt;	\/\/ count retry.$/;"	m	struct:__anon21
revID	pr1000.h	/^	uint8_t revID[MAX_PR1000_CHIP]; $/;"	m	struct:__anon22
rptEn	pr1000.h	/^		uint8_t rptEn:1; \/\/reg13$/;"	m	struct:__anon15::__anon16
rxHstrtOs07	pr1000.h	/^		uint8_t rxHstrtOs07:8; \/\/reg1$/;"	m	struct:__anon13::__anon14
rxHstrtOs13	pr1000.h	/^		uint8_t rxHstrtOs13:6;$/;"	m	struct:__anon13::__anon14
rxHsyncPol	pr1000.h	/^		uint8_t rxHsyncPol:1; \/\/reg0$/;"	m	struct:__anon13::__anon14
rxVstrtOs07	pr1000.h	/^		uint8_t rxVstrtOs07:8; \/\/reg3$/;"	m	struct:__anon13::__anon14
rxVstrtOs10	pr1000.h	/^		uint8_t rxVstrtOs10:3;$/;"	m	struct:__anon13::__anon14
rxVsyncPol	pr1000.h	/^		uint8_t rxVsyncPol:1; \/\/reg2$/;"	m	struct:__anon13::__anon14
rx_field_type	pr1000_drvcommon.h	/^	uint8_t rx_field_type; \/\/reg 4x00 b[1:0] : select the PTZ Rx Field.$/;"	m	struct:__anon57
rx_freq	pr1000_drvcommon.h	/^	uint32_t rx_freq; \/\/reg 4x06,4x07,4x08 : PTZ Bit-width for all bits except 1st bit.$/;"	m	struct:__anon57
rx_freq_first	pr1000_drvcommon.h	/^	uint32_t rx_freq_first; \/\/reg 4x03,4x04,4x05 : PTZ Bit-width for 1st bit.$/;"	m	struct:__anon57
rx_h_pix_offset	pr1000_drvcommon.h	/^	uint8_t rx_h_pix_offset; \/\/reg 4x0A b[7:0] : Rx H starting offset for PTZ start bit.$/;"	m	struct:__anon57
rx_hst	pr1000_drvcommon.h	/^	uint8_t rx_hst; \/\/reg 4x02 b[6:0] : PTZ Rx valid line starting position.$/;"	m	struct:__anon57
rx_hst_os	pr1000_drvcommon.h	/^	uint8_t rx_hst_os; \/\/reg 4x01 b[2:0] : select the PTZ Rx line starting offset for Even Fld.$/;"	m	struct:__anon57
rx_line_cnt	pr1000_drvcommon.h	/^	uint8_t rx_line_cnt; \/\/reg 4x01 b[7:3] : select the PTZ Rx line size per frame.$/;"	m	struct:__anon57
rx_line_len	pr1000_drvcommon.h	/^	uint8_t rx_line_len; \/\/reg 4x0B b[5:0] : Bit length per line for PTZ data.$/;"	m	struct:__anon57
rx_lpf_len	pr1000_drvcommon.h	/^	uint8_t rx_lpf_len; \/\/reg 4x09 b[5:0] : select the Rx LPF taps.$/;"	m	struct:__anon57
rx_valid_cnt	pr1000_drvcommon.h	/^	uint8_t rx_valid_cnt; \/\/reg 4x0C b[7:0] : All bytes length per command of PTZ data.$/;"	m	struct:__anon57
sampleRate	pr1000_drvcommon.h	/^	uint8_t sampleRate;	\/\/0:8Khz, 1:16Khz, 2:32Khz, 3:48Khz$/;"	m	struct:__anon47
sampleRate	pr1000_drvcommon.h	/^	uint8_t sampleRate;	\/\/0:8Khz, 1:16Khz, 2:32Khz, 3:48Khz$/;"	m	struct:__anon48
saved_det_eq_dcgain	pr1000.h	/^	uint16_t saved_det_eq_dcgain;$/;"	m	struct:__anon21
size	pr1000_drvcommon.h	/^	uint8_t size;$/;"	m	struct:__anon62
sizePatData	pr1000_drvcommon.h	/^	int sizePatData;$/;"	m	struct:__anon58
sizePatFormat	pr1000_drvcommon.h	/^	int sizePatFormat;$/;"	m	struct:__anon58
sizePatFormat	pr1000_drvcommon.h	/^	int sizePatFormat;$/;"	m	struct:__anon59
sizePatStartData	pr1000_drvcommon.h	/^	int sizePatStartData;$/;"	m	struct:__anon59
sizePatStartFormat	pr1000_drvcommon.h	/^	int sizePatStartFormat;$/;"	m	struct:__anon59
slvAddr	pr1000_drvcommon.h	/^	uint8_t slvAddr;$/;"	m	struct:__anon30
spLockIrq	pr1000.h	/^	SPINLOCK_T 		spLockIrq;$/;"	m	struct:__anon26
splockPtzRecvQ	pr1000.h	/^	SPINLOCK_T splockPtzRecvQ[MAX_CHN];$/;"	m	struct:__anon24
spsens	pr1000_drvcommon.h	/^	uint16_t spsens;$/;"	m	struct:__anon69
spsens	pr1000_drvcommon.h	/^	uint16_t spsens;$/;"	m	struct:__anon74
spsens	pr1000_drvcommon.h	/^	uint8_t spsens;$/;"	m	struct:__anon84
stCEQDataList	pr1000.h	/^	_stCEQData stCEQDataList[MAX_CHN]; \/\/Max 4chip * 4channel$/;"	m	struct:__anon22
stDefAUDPbAttr	pr1000_table.c	/^_stAUDPbAttr stDefAUDPbAttr =$/;"	v
stDefAUDRecAttr	pr1000_table.c	/^_stAUDRecAttr stDefAUDRecAttr = $/;"	v
stDefVEVENTDisplayAttr	pr1000_table.c	/^const _stVEVENTDisplayAttr stDefVEVENTDisplayAttr =$/;"	v
stDetManualStd	pr1000.h	/^	uint8_t stDetManualStd[MAX_CHN];$/;"	m	struct:__anon23
stEventDetStd	pr1000.h	/^	_stEventDetStd stEventDetStd[MAX_CHN];$/;"	m	struct:__anon23
stManEQMan	pr1000.h	/^	_stManEQMan stManEQMan;$/;"	m	struct:__anon21
stOutFormatAttr	pr1000.h	/^	_stOutFormatAttr stOutFormatAttr;$/;"	m	struct:__anon22
stVEVENTDisplayAttr	pr1000.h	/^	_stVEVENTDisplayAttr stVEVENTDisplayAttr[MAX_CHN];$/;"	m	struct:__anon23
stableEQCnt	pr1000.h	/^	uint8_t stableEQCnt;	\/\/ check eq is stable?$/;"	m	struct:__anon21
start	pr1000.h	/^		uint8_t start:1;$/;"	m	struct:__anon11::__anon12
start	pr1000.h	/^		uint8_t start:1;$/;"	m	struct:__anon15::__anon16
startLine	pr1000_drvcommon.h	/^	uint8_t startLine;$/;"	m	struct:__anon66
std	pr1000_drvcommon.h	/^	uint8_t std; $/;"	m	struct:__anon33
strDevDrvName	pr1000_drvcommon.h	/^static const char strDevDrvName[10] = {"pr1000"};$/;"	v
sysHost	pr1000.h	/^	_sysHost		sysHost;$/;"	m	struct:__anon26
tail	drv_cq.h	/^	int tail, head;$/;"	m	struct:__anon93
testEn	pr1000.h	/^		uint8_t testEn:1; \/\/reg13$/;"	m	struct:__anon11::__anon12
testSTDFORMATData	pr1000.h	/^	uint8_t testSTDFORMATData[MAX_CHN][PTZ_STDFORMAT_CHECK_CNT];$/;"	m	struct:__anon24
timeOverSTDFORMATCheck	pr1000.h	/^	int8_t timeOverSTDFORMATCheck[MAX_CHN];$/;"	m	struct:__anon22
tmpsens	pr1000_drvcommon.h	/^	uint8_t tmpsens;$/;"	m	struct:__anon70
tmpsens	pr1000_drvcommon.h	/^	uint8_t tmpsens;$/;"	m	struct:__anon75
tmpsens	pr1000_drvcommon.h	/^	uint8_t tmpsens;$/;"	m	struct:__anon78
tmpsens	pr1000_drvcommon.h	/^	uint8_t tmpsens;$/;"	m	struct:__anon81
tmpsens	pr1000_drvcommon.h	/^	uint8_t tmpsens;$/;"	m	struct:__anon85
tpSel	pr1000.h	/^		uint8_t tpSel:3;$/;"	m	struct:__anon11::__anon12
tpSel	pr1000.h	/^		uint8_t tpSel:3;$/;"	m	struct:__anon15::__anon16
txHstrtOs07	pr1000.h	/^		uint8_t txHstrtOs07:8; \/\/reg5$/;"	m	struct:__anon13::__anon14
txHstrtOs13	pr1000.h	/^		uint8_t txHstrtOs13:6;$/;"	m	struct:__anon13::__anon14
txHsyncPol	pr1000.h	/^		uint8_t txHsyncPol:1; \/\/reg4$/;"	m	struct:__anon13::__anon14
txVstrtOs07	pr1000.h	/^		uint8_t txVstrtOs07:8; \/\/reg7$/;"	m	struct:__anon13::__anon14
txVstrtOs10	pr1000.h	/^		uint8_t txVstrtOs10:3;$/;"	m	struct:__anon13::__anon14
txVsyncPol	pr1000.h	/^		uint8_t txVsyncPol:1; \/\/reg6$/;"	m	struct:__anon13::__anon14
tx_all_data_len	pr1000_drvcommon.h	/^	uint8_t tx_all_data_len; \/\/reg 4x2C b[7:0] : All bytes length per command of PTZ data.$/;"	m	struct:__anon56
tx_field_type	pr1000_drvcommon.h	/^	uint8_t tx_field_type; \/\/reg 4x20 b[1:0] : select the PTZ Tx field.$/;"	m	struct:__anon56
tx_freq	pr1000_drvcommon.h	/^	uint32_t tx_freq; \/\/reg 4x26,4x27,4x28 : PTZ Bit-width for all bits except 1st bit.$/;"	m	struct:__anon56
tx_freq_first	pr1000_drvcommon.h	/^	uint32_t tx_freq_first; \/\/reg 4x23,4x24,4x25 :  PTZ Bit-width for 1st bit.$/;"	m	struct:__anon56
tx_hpst	pr1000_drvcommon.h	/^	uint16_t tx_hpst; \/\/reg 4x29,4x2A b[12:0] : PTZ Tx starting location.$/;"	m	struct:__anon56
tx_hst	pr1000_drvcommon.h	/^	uint8_t tx_hst; \/\/reg 4x22 b[6:0] : PTZ Tx valid line starting position.$/;"	m	struct:__anon56
tx_hst_os	pr1000_drvcommon.h	/^	uint8_t tx_hst_os; \/\/reg 4x21 b[2:0] : select the PTZ Tx line starting offset for even fld.$/;"	m	struct:__anon56
tx_line_cnt	pr1000_drvcommon.h	/^	uint8_t tx_line_cnt; \/\/reg 4x21 b[7:3] : select the PTZ Tx line size per frame.$/;"	m	struct:__anon56
tx_line_len	pr1000_drvcommon.h	/^	uint8_t tx_line_len; \/\/reg 4x2B b[5:0] : Bit length per line for PTZ data.$/;"	m	struct:__anon56
type	pr1000_drvcommon.h	/^	uint8_t type;$/;"	m	struct:__anon31
u16HActive	pr1000_drvcommon.h	/^	uint16_t u16HActive; \/\/b[12:0]$/;"	m	struct:__anon34
u16HDelay	pr1000_drvcommon.h	/^	uint16_t u16HDelay; \/\/b[12:0]$/;"	m	struct:__anon34
u16HSCLRatio	pr1000_drvcommon.h	/^	uint16_t u16HSCLRatio; \/\/b[15:0] 0:skip write$/;"	m	struct:__anon34
u16VActive	pr1000_drvcommon.h	/^	uint16_t u16VActive; \/\/b[10:0]$/;"	m	struct:__anon34
u16VDelay	pr1000_drvcommon.h	/^	uint16_t u16VDelay; \/\/b[10:0]$/;"	m	struct:__anon34
u32IntIntervalTimeMsec	pr1000.h	/^	uint32_t u32IntIntervalTimeMsec; $/;"	m	struct:__anon22
u32IntOldMsec	pr1000.h	/^	uint32_t u32IntOldMsec; $/;"	m	struct:__anon22
u32PtzRxCnt	pr1000.h	/^	uint32_t u32PtzRxCnt[MAX_CHN];$/;"	m	struct:__anon24
u32PtzTxCnt	pr1000.h	/^	uint32_t u32PtzTxCnt[MAX_CHN];$/;"	m	struct:__anon24
u32RxIntCnt	pr1000.h	/^	uint32_t u32RxIntCnt; $/;"	m	struct:__anon22
u8AD	pr1000.h	/^	uint8_t u8AD;$/;"	m	struct:__anon2
u8Bright	pr1000_drvcommon.h	/^	uint8_t u8Bright;$/;"	m	struct:__anon37
u8CbGain	pr1000_drvcommon.h	/^	uint8_t u8CbGain;$/;"	m	struct:__anon35
u8CbOffset	pr1000_drvcommon.h	/^	uint8_t u8CbOffset;$/;"	m	struct:__anon35
u8Contrast	pr1000_drvcommon.h	/^	uint8_t u8Contrast;$/;"	m	struct:__anon36
u8CrGain	pr1000_drvcommon.h	/^	uint8_t u8CrGain;$/;"	m	struct:__anon35
u8CrOffset	pr1000_drvcommon.h	/^	uint8_t u8CrOffset;$/;"	m	struct:__anon35
u8DFD	pr1000.h	/^	uint8_t u8DFD;$/;"	m	struct:__anon2
u8GPIO0	pr1000.h	/^	uint8_t u8GPIO0;$/;"	m	struct:__anon2
u8GPIO1_5	pr1000.h	/^	uint8_t u8GPIO1_5[5];$/;"	m	struct:__anon2
u8Gain	pr1000_drvcommon.h	/^	uint8_t u8Gain; 	\/\/4bit gain$/;"	m	struct:__anon44
u8Gain	pr1000_drvcommon.h	/^	uint8_t u8Gain; 	\/\/4bit gain$/;"	m	struct:__anon45
u8Hue	pr1000_drvcommon.h	/^	uint8_t u8Hue;$/;"	m	struct:__anon39
u8MD	pr1000.h	/^	uint8_t u8MD;$/;"	m	struct:__anon2
u8ND	pr1000.h	/^	uint8_t u8ND;$/;"	m	struct:__anon2
u8NOVID	pr1000.h	/^	uint8_t u8NOVID;$/;"	m	struct:__anon2
u8PTZ	pr1000.h	/^	uint8_t u8PTZ[DEF_PR1000_MAX_CHN];$/;"	m	struct:__anon2
u8Saturation	pr1000_drvcommon.h	/^	uint8_t u8Saturation;$/;"	m	struct:__anon38
u8Sharpness	pr1000_drvcommon.h	/^	uint8_t u8Sharpness; \/\/b[3:0]$/;"	m	struct:__anon40
vadcGain	pr1000.h	/^	uint8_t vadcGain; $/;"	m	struct:__anon21
validCnt	pr1000.h	/^		uint8_t validCnt:8; \/\/reg12$/;"	m	struct:__anon11::__anon12
vdPort	pr1000.h	/^	int vdPort;	\/\/vd out port num(VD1:0~VD4:3).$/;"	m	struct:__anon17
vdck_out_phase	pr1000_user_config.h	/^	uint8_t vdck_out_phase;$/;"	m	struct:__anon92
vdck_out_phase	pr1000_user_config_sample_nonLinux.h	/^	uint8_t vdck_out_phase;$/;"	m	struct:__anon1
velocity	pr1000_drvcommon.h	/^	uint8_t velocity;$/;"	m	struct:__anon71
vsize	pr1000_drvcommon.h	/^	uint16_t vsize;$/;"	m	struct:__anon82
vstart	pr1000_drvcommon.h	/^	uint16_t vstart;$/;"	m	struct:__anon82
wqPoll	pr1000.h	/^	volatile int 	wqPoll;$/;"	m	struct:__anon26
wqPoll	pr1000.h	/^	wait_queue_head_t 	wqPoll;$/;"	m	struct:__anon26
wqPollChnStatus	pr1000.h	/^	_wqPollChnStatus	wqPollChnStatus;$/;"	m	struct:__anon26
wrPos	pr1000.h	/^	uint32_t wrPos[DRV_LOG_MEM_NUM];$/;"	m	struct:__anon25
