ifndef ANDESIGHT_ROOT
ANDESIGHT_ROOT=/cygdrive/C/Andestech/BSPv421
endif
# final target file name
APP_TARGET = bootloader

# select DDR2 | DDR3
ENABLE_DDRx_INIT = DDR3
# select ddr speed 500 | 400
DDR_SPEED = 500
# select ddr bus bit 32 | 16
DDR_BUS_BIT = 32

# select DDR size  64 | 128 | 256 | 512 | 1024
DDR_MEM_SIZE = 1024

# select ddr resolution in/out operating
HD720pToHD720p = 1
FHD1080pToFHD1080p = 2
SD720hToSD720h = 3
HD960pToHD720p = 4
HD960p47MToHD960p94M = 5
HD960p74MToHD960p94M = 6
HD960p54MToHD960p94M = 7
FHD1080pToHD720p = 8
SD720hToHD720p = 9
SD960hToHD720p = 10
HD720pToFHD1080p = 11
HD960pToFHD1080p = 12 # == HD960pToHD960p
SD720hToFHD1080p = 13
SD960hToFHD1080p = 14
HD720pToWSVGA = 15
HD720pToSD720h = 16
DDR_RESOL_INOUT_OPER_PREDEF  = -DHD720pToHD720p=$(HD720pToHD720p)
DDR_RESOL_INOUT_OPER_PREDEF += -DFHD1080pToFHD1080p=$(FHD1080pToFHD1080p)
DDR_RESOL_INOUT_OPER_PREDEF += -DSD720HToSD720H=$(SD720hToSD720h)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD960pToHD720p=$(HD960pToHD720p)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD960p47MToHD960p94M=$(HD960p47MToHD960p94M)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD960p74MToHD960p94M=$(HD960p74MToHD960p94M)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD960p54MToHD960p94M=$(HD960p54MToHD960p94M)
DDR_RESOL_INOUT_OPER_PREDEF += -DFHD1080pToHD720p=$(FHD1080pToHD720p)
DDR_RESOL_INOUT_OPER_PREDEF += -DSD720hToHD720p=$(SD720hToHD720p)
DDR_RESOL_INOUT_OPER_PREDEF += -DSD960hToHD720p=$(SD960hToHD720p)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD720pToFHD1080p=$(HD720pToFHD1080p)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD960pToFHD1080p=$(HD960pToFHD1080p)
DDR_RESOL_INOUT_OPER_PREDEF += -DSD720hToFHD1080p=$(SD720hToFHD1080p)
DDR_RESOL_INOUT_OPER_PREDEF += -DSD960hToFHD1080p=$(SD960hToFHD1080p)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD720pToWSVGA=$(HD720pToWSVGA)
DDR_RESOL_INOUT_OPER_PREDEF += -DHD720pToSD720h=$(HD720pToSD720h)
#define user setting
DDR_RESOL_INOUT_OPER = HD720pToHD720p
#DDR_RESOL_INOUT_OPER = FHD1080pToFHD1080p
#DDR_RESOL_INOUT_OPER = SD720hToSD720h
#DDR_RESOL_INOUT_OPER = HD960pToHD720p
#DDR_RESOL_INOUT_OPER = HD960p47MToHD960p94M
#DDR_RESOL_INOUT_OPER = HD960p74MToHD960p94M
#DDR_RESOL_INOUT_OPER = HD960p54MToHD960p94M
#DDR_RESOL_INOUT_OPER = FHD1080pToHD720p
#DDR_RESOL_INOUT_OPER = SD720hToHD720p
#DDR_RESOL_INOUT_OPER = SD960hToHD720p
#DDR_RESOL_INOUT_OPER = HD720pToFHD1080p
#DDR_RESOL_INOUT_OPER = HD960pToFHD1080p # == HD960pToHD960p
#DDR_RESOL_INOUT_OPER = SD720hToFHD1080p
#DDR_RESOL_INOUT_OPER = SD960hToFHD1080p
#DDR_RESOL_INOUT_OPER = HD720pToWSVGA
#DDR_RESOL_INOUT_OPER = HD720pToSD720h

#Clock setting
#             CPU   CPU_AXI        APB    DDR_CLK     DDR
#DDR_513	256.5	 128.25	    64.125	    256.5	 1026
#DDR_400	256.5	96.1875	  48.09375	  192.375	769.5

# Select platform FPGA | ASIC
ENABLE_PLATFORM = ASIC
 # define clock hz
 ifeq ($(ENABLE_PLATFORM), FPGA)
  PCLK = 37125000
  UART_CLK = 27000000
  SPI_MODE = 0
  # Setting PLL clock 
  ENABLE_CLOCK_INIT = n
 else
  ifeq ($(ENABLE_PLATFORM), ASIC)
   ifeq ($(DDR_SPEED), 500)
    PCLK = 62437500
   else
    ifeq ($(DDR_SPEED), 400)
     PCLK = 48093750
    endif
   endif
   UART_CLK = 27000000
   SPI_MODE = 0
   # Setting PLL clock 
   ENABLE_CLOCK_INIT = y
  else
   error "unknown platform"
  endif
 endif
 
# Enable "dbg(...)"  print.   
ENABLE_DEBUG_PRINT = n
# Enalbe "printf()" to uart port
ENABLE_UART_DEBUG = n

# select booting method. If size is over, select only support method.
# support flash(Nor,Nand) boot
ENABLE_FLASH_BOOT = y
# support sd card boot
ENABLE_SDCARD_BOOT = n
# support external spi, uart boot
ENABLE_EXT_BOOT = n
 ifeq ($(ENABLE_FLASH_BOOT), y)
  QSPI_DIV = 0
  QSPI_DELAY = 3
 endif



# use DDR test mode
ENABLE_DDR_TEST_MODE = n
